{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The OpenStudio Coalition The OpenStudio Coalition is a newly formed organization founded to support the OpenStudio Application and to expand the use of energy modeling generally using the free and open source OpenStudio Application. The goals of the OpenStudio Coalition (OSC) include: Keeping the OpenStudio Applications Free and Readily Available Keeping OpenStudio Applications Current and Functional Supporting OpenStudio Applications Use Use the buttons below or navigation above to learn more about the OpenStudio Coalition. The OpenStudio Coalition Learn more about the OpenStudio Coalition. OpenStudio Coalition Stay up to date with the latest news. Mailing List Watch video tutorials on YouTube. Video Tutorials Getting Started Installation instructions and getting started. Installation & Tutorial Essential workflows and best practices. Creating Your Model Running Your Simulation Advanced Tutorials Tutorials cover advanced topics. Utility Rate Tariffs Working with gbXML Application References Interface guides give detailed overviews of the OpenStudio Coalition suite of applications. SketchUp Plug-in OpenStudio Application","title":"Home"},{"location":"about/features/","text":"Current Features The OpenStudio Application uses the OpenStudio SDK . The features that are available in the current major release are described below. As of OpenStudio Application Version 1.3.0 Building Geometry/3D CAD Import geometry from gbXML files (from Revit, GreenBuildingStudio, Trace700, etc.) Import geometry from EnergyPlus files (IDF) Import model from SDD files (California Energy Commission) Import geometry from Industry Foundation Class files (IFC) Assign and visually inspect space types assignments Define thermal zones and add/remove spaces Assign and see building envelope constructions FloorspceJS Draw 2D building geometry (that will be extruded to 3D) using the built-in FloorspaceJS interface Trace images of floor plans, or maps Building envelope, shading on windows, shading from other buildings, etc. Assign constructions, space types, thermal zones Add daylighting sensors Sketchup Plugin Draw 3D building geometry using free plugin for SketchUp Building envelope, shading on windows, shading from other buildings, etc. Draw detailed shapes, trace floor plans, or a combination Use wizard to create standard shapes (H, L, E, Courtyard, Rectangle) Add daylighting sensors Building Geometry Tool Matrix The following table is intended to provide users with some guidance around which of the primary geometry tools may be best suited to a given modeling scenario. In general, if the model will suffice with relatively simple geometry elements and doesn't require the use of external 3D drawing files or imported geometry from other models, then FloorspaceJS is typically quicker and creates simpler elements that run faster. If there is a need to represent more complicated 3D shapes or work with thrid party drawing and model files, then the SketchUp Plugin may be needed. Also keep in mind that geoetry created in FloorspaceJS can be brought into SketchUp (as an OSM file), but FloorspaceJS will not recognize geometry from any other source. So in some cases it may make sense to begin simpler forms in FloorspaceJS and transition to SketchUp for later, more detailed representations. Feature FloorspaceJS SketchUp Plugin Trace 2D Floorplans X X Assign Thermal Zones, Space Types, Construction Sets X X Add Windows and Doors X X Add Daylight Controls X X Building and Window Shading X X Smooth Transitions Between OS App and Geometry Editor X + Draw Complex 3D Shapes X Import IDF, gbXML, OSM, SDD X Leverage 3rd Party CAD Files X Add Detailed Daylighting Analysis Elements X Pugin-specific OS Measures X + The User may move back and forth between the OS App and the SketchUp Plugin, but is more likely to generate model errors in the process unless they are careful. Building Constructions and Materials Specify default materials for each type of surface and subsurface (exterior walls, windows, floors, etc.) in building Specify detailed or simple window properties Specify and attach screens, shades, and blinds to windows Specify and create daylight redirection devices (louvers and films) Specify and create vegetated roofs Specify and create air walls Specify and create constructions appropriate for hydronic radiant heating and cooling constructions Built-in library of building constructions (walls, windows, doors, floors, etc.) for all DOE reference building types and vintages (pre-1980, 1980-2004), ASHRAE standard prototype buildings (189.1-2009, 90.1-2004, 90.1-2007, 90.1-2010, 90.1-2013), and DEER building types (pre-1975, 1985, 1996, 2003, 2007, 2011, 2014, 2015, 2017) Online library of building materials and their modeling properties from ASHRAE Handbook Building Loads Specify people, lights, plug loads, gas loads (cooking, etc.), steam loads, internal mass, water using equipment, ventilation requirements, and infiltration Can input loads per area or add actual quantities to accommodate schematic and detailed design Built in library of space types (loads and associated schedules) for DOE reference buildings for all vintages (pre-1980, 1980-2004), ASHRAE standard prototype buildings (189.1-2009, 90.1-2004, 90.1-2007, 90.1-2010, 90.1-2013), and DEER building types (pre-1975, 1985, 1996, 2003, 2007, 2011, 2014, 2015, 2017) Can apply loads in one place (space type) and apply throughout the building Grid View for Thermal Zones, Space Types, Spaces, Design Days, and Refrigeration Cases Viewing and editing your model in a grid view allows you to see many objects at once and compare settings. HVAC Graphical representation of HVAC systems, zones, and their connections Drag-and-drop components onto diagram and click to edit HVAC system templates for ASHRAE Appendix G system types Graphical support for creating customized 'single-duct' or 'dual-duct' air systems or plants Hot, Chilled, and Condenser Water Systems Hot water boilers (all fuels) District heating and cooling Set-temperature heating/cooling source Single, two-speed, and variable-speed cooling towers Single and two-speed fluid coolers and evaporative fluid coolers Chillers (electric, absorption, indirect absorption, and central heat pump) Vertical and horizontal ground heat exchanger (bore fields & trenches for ground-source heat pumps) Water-to-water heat pumps Bypass pipes Constant and variable speed pumps, both individual and headered Fluid-to-fluid heat exchangers (for primary/secondary pumping and waterside economizers, etc.) Hot, chilled, and condenser water system controls Staging of equipment (based on load range, part-load, sequential, etc.) Solar hot water (with and without storage and integrated PV) Pipes (indoor heat loss, outdoor heat loss, or adiabatic) Load profile (model plant behavior with loads from a schedule) Ice and chilled water storage Air System Components Constant speed and variable speed supply, return and exhaust fans Supply and return plenums Packaged unitary equipment Dual-duct CV and VAV systems, including customization Changeover bypass (VVT) systems Multi-stage unitary equipment (used with staged thermostats) Outdoor air intake with economizers (all types) and damper control Chilled water cooling coils One-speed, two-speed, multi-speed, and variable-speed DX cooling coils, including humidity controls One-speed, multi-speed, and variable-speed DX heating coils (heat pumps) Water-to-air heat pumps Gas, electric, hot water and DX (heat pump) heating and/or preheat coils Steam humidifiers (electrically powered) used with zone humidistats Direct and indirect evaporative coolers Sensible and latent heat recovery VAV-Reheat and CAV-Reheat terminals (gas, electric, and hot water reheat coils) VAV terminals without reheat Series and parallel fan powered boxes with reheat (all fuel types) Diffusers Two-pipe and four-pipe chilled beams (active and passive) Four-pipe induction terminals Air System Controls Controls for all air systems: Air aystem availability manager controls Scheduled on/off Hybrid ventilation controls Night ventilation controls Hybrid ventilation controls Night-cycle controls (whole system and/or terminal fans) Optimum start controls Differential thermostat High temperature turn on/off Low temperature turn on/off Outdoor and supply air temperature/humidity controls Scheduled supply air temp Supply air temp reset based on OA Supply air temp follow OA Temp Supply air humidity minimum / maximum with deadband Demand-controlled ventilation controls Controls for single and multizone VAV air systems: Scheduled supply air temp Supply air temp reset based on OA Supply air temp reset based on zone temp (warmest) Supply air flow reset based on zone temp (warmest) Supply air humidity minimum/maximum (critical zone or average of zones) Single-zone VAV heat (one control zone, many slaves) Heating only Cooling only Both heating and cooling Zone-level Heating and Cooling Systems Unit heaters (all fuels) Unit ventilators Energy recovery ventilators Dehumidifiers Low temp radiant heating (electric, variable, and constant flow water) Low temp radiant cooling (variable and constant flow water) PTAC (DX cooling + fan + all heating fuels) PTHP (DX heating/cooling + fan + electric backup heat) Water-source heat pump Air-source heat pump Exhaust fans Four pipe fan coils (may be supplied via DOAS system) Electric and hot-water baseboards High temperature radiant heaters (gas and electric) Zone-to-zone transfer air (zone air mixing) Variable Refrigerant Flow Systems Condenser plus zone-level terminals Heat recovery add/or heat pump VRF Air-cooled, evaporatively-cooled or water-cooled condensing units Piping correction factors account for performance degradation estimates Load, zone or scheduled thermostat priorities Commercial Refrigeration DX refrigeration systems Cascading DX refrigeration systems Fluid-filled DX secondary refrigeration systems Cases Walk-in freezers Compressors Air, water, and evaporatively-cooled condensers Liquid-suction heat exchangers and mechanical subcoolers Heat-recovery to domestic hot water systems (desuperheater) Heat-recovery to unitary air systems (desuperheater) Domestic Water Systems Hot water heaters Tank type/tankless water heaters (all fuels) Heat pump water heaters Stratified tank water heaters Storage tank fed from boiler(s)/heat exchanger(s) Solar hot water (flat plate or integral collectors) for pre-heating Constant speed and/or variable speed recirculation/booster pumps Equipment that uses warm water (showers, faucets, etc.), can specify mixed water temp Equipment that uses cold water only Daylighting Add daylighting control points via the SketchUp plugin or OpenStudio Application Create interior partitions and glare sensors for modeling daylight analysis with improved accuracy, using the Sketchup Plugin Create and configure window shading controls for modeling daylight analysis using the Sketchup plugin Insert illuminance map for visualizing daylight analysis using the Sketchup plugin Use built-in OpenStudio measure to run daylighting analysis using Radiance, state-of-the-art ray-tracing daylight simulation engine without making a separate model Configure daylight analysis parameters used by radiance simulation Lights in the EnergyPlus Model controlled based on daylight available per radiance Custom Controls Within EnergyPlus, advanced controls that are not built-in can be implemented utilizing the EnergyManagementSystem (EMS) suite of objects. This involves defining Sensors and Actuators that interact with building parameters through Programs which are written in the EnergyPlus Runtime Language (ERL), which is based on a common building-controls language. OpenStudio Application supports the creation of EMS programs. Location-Specific Information Find typical weather data and ASHRAE design conditions for most locations in the world Use actual weather data (AMY) from a variety of vendors/sources Store ASHRAE/CEC climate zone to trigger calculations within measures Economics Full lifecycle costing (NIST Handbook 135 compliant) including built-in EIA fuel escalation rates and inflation Adjustable analysis period length Add capital, recurring O&M, salvage, and replacement costs to model using measures Lifecycle is adjustable per-cost (IE windows can last longer than lamps) Add utility rates (which include time-of-use, demand charges, ratchets, seasonal values, etc.) to model using measures Import and Export Options IDF import (geometry, constructions, loads, thermal zones, and schedules only) IDF export (full model including HVAC) gbXML import (geometry, constructions, thermal zones, and schedules only) gbXML export (geometry, constructions, and thermal zones only) SDD import (simulation format - full model including HVAC) SDD export (input format - geometry, constructions, and thermal zones only) IFC import (geometry only) Import resources (materials, constructions, loads, spacetypes) from .osm file Import surfaces, subsurfaces, spaces, and thermal zones from eQuest models using a Measure Analysis of Existing Buildings Enter utility bills for all fuel types in building Run model using actual weather data (AMY) Automatically compare model results to bills and shows goodness-of-fit by fuel type Automatically show whether goodness of fit meets common calibration standards (FEMP, ASHRAE) Libraries Space types (people, lights, equipment, ventilation, infiltration, schedules) for DOE reference buildings for all vintages (pre-1980, 1980-2004, and 2004), ASHRAE standard prototype buildings (189.1-2009, 90.1-2004, 90.1-2007, 90.1-2010, 90.1-2013), and DEER building types (pre-1975, 1985, 1996, 2003, 2007, 2011, 2014, 2015, 2017) Building constructions (walls, windows, doors, floors, etc.) for DOE reference buildings for all vintages (pre-1980, 1980-2004, and 2004), ASHRAE standard prototype buildings (189.1-2009, 90.1-2004, 90.1-2007, 90.1-2010, 90.1-2013), and DEER building types (pre-1975, 1985, 1996, 2003, 2007, 2011, 2014, 2015, 2017) Extensive online library of building materials from ASHRAE Handbook of Fundamentals Extensive online library of weather files and design day conditions Parametric Analysis Using PAT OpenStudio Measures provide reliable and repeatable mechanism to apply transforms to models Eliminates ambiguity and user error; all rules encapsulated in measure itself More than 316 measures available online and always growing Write measure once and apply to many projects Perform complex ECMs, like full HVAC replacement, easily Quickly access online and local libraries of measures from drag-and-drop interface Edit user inputs to control how measure modifies the model Create meaningful results, ready for inclusion in reports to design team, building owners, etc. QAQC Measures can be used to check for common modeling errors Users don't have to understand to use; gives expert review to junior modelers more inexpensively Automate key checks for utility regulators to keep up quality Lower time spent by reviewers on mundane checks; frees time to focus on real issues Users can modify Generic QAQC Measure to create custom checks Reporting Measures can be used to create custom reports in HTML format (view in any web browser) Allows users to quickly visualize and summarize data for different audiences Reports are shareable via email Reports can be simple or highly interactive using standard JavaScript Libraries Cloud Computing Using PAT Any user with an Amazon account can run simulations on cloud with 1 click Very affordable vs. engineer's time (16 simulations in parallel for ~$2.00/hr) Can run up to 300 simulations in parallel (costs scale in 16-processor increments) Enables small firms to access cloud computing without upfront hardware costs Share Modeling Best-Practices Online database called BCL (Building Component Library) can be used to share measures BCL can be used to share building components Instantaneous world-wide distribution and updating of content Allows utilities to ensure uniformity and best-practices across many energy consulting firms","title":"Current Features"},{"location":"about/features/#as-of-openstudio-application-version-130","text":"","title":"As of OpenStudio Application Version 1.3.0"},{"location":"about/features/#building-geometry3d-cad","text":"Import geometry from gbXML files (from Revit, GreenBuildingStudio, Trace700, etc.) Import geometry from EnergyPlus files (IDF) Import model from SDD files (California Energy Commission) Import geometry from Industry Foundation Class files (IFC) Assign and visually inspect space types assignments Define thermal zones and add/remove spaces Assign and see building envelope constructions","title":"Building Geometry/3D CAD"},{"location":"about/features/#floorspcejs","text":"Draw 2D building geometry (that will be extruded to 3D) using the built-in FloorspaceJS interface Trace images of floor plans, or maps Building envelope, shading on windows, shading from other buildings, etc. Assign constructions, space types, thermal zones Add daylighting sensors","title":"FloorspceJS"},{"location":"about/features/#sketchup-plugin","text":"Draw 3D building geometry using free plugin for SketchUp Building envelope, shading on windows, shading from other buildings, etc. Draw detailed shapes, trace floor plans, or a combination Use wizard to create standard shapes (H, L, E, Courtyard, Rectangle) Add daylighting sensors","title":"Sketchup Plugin"},{"location":"about/features/#building-geometry-tool-matrix","text":"The following table is intended to provide users with some guidance around which of the primary geometry tools may be best suited to a given modeling scenario. In general, if the model will suffice with relatively simple geometry elements and doesn't require the use of external 3D drawing files or imported geometry from other models, then FloorspaceJS is typically quicker and creates simpler elements that run faster. If there is a need to represent more complicated 3D shapes or work with thrid party drawing and model files, then the SketchUp Plugin may be needed. Also keep in mind that geoetry created in FloorspaceJS can be brought into SketchUp (as an OSM file), but FloorspaceJS will not recognize geometry from any other source. So in some cases it may make sense to begin simpler forms in FloorspaceJS and transition to SketchUp for later, more detailed representations. Feature FloorspaceJS SketchUp Plugin Trace 2D Floorplans X X Assign Thermal Zones, Space Types, Construction Sets X X Add Windows and Doors X X Add Daylight Controls X X Building and Window Shading X X Smooth Transitions Between OS App and Geometry Editor X + Draw Complex 3D Shapes X Import IDF, gbXML, OSM, SDD X Leverage 3rd Party CAD Files X Add Detailed Daylighting Analysis Elements X Pugin-specific OS Measures X + The User may move back and forth between the OS App and the SketchUp Plugin, but is more likely to generate model errors in the process unless they are careful.","title":"Building Geometry Tool Matrix"},{"location":"about/features/#building-constructions-and-materials","text":"Specify default materials for each type of surface and subsurface (exterior walls, windows, floors, etc.) in building Specify detailed or simple window properties Specify and attach screens, shades, and blinds to windows Specify and create daylight redirection devices (louvers and films) Specify and create vegetated roofs Specify and create air walls Specify and create constructions appropriate for hydronic radiant heating and cooling constructions Built-in library of building constructions (walls, windows, doors, floors, etc.) for all DOE reference building types and vintages (pre-1980, 1980-2004), ASHRAE standard prototype buildings (189.1-2009, 90.1-2004, 90.1-2007, 90.1-2010, 90.1-2013), and DEER building types (pre-1975, 1985, 1996, 2003, 2007, 2011, 2014, 2015, 2017) Online library of building materials and their modeling properties from ASHRAE Handbook","title":"Building Constructions and Materials"},{"location":"about/features/#building-loads","text":"Specify people, lights, plug loads, gas loads (cooking, etc.), steam loads, internal mass, water using equipment, ventilation requirements, and infiltration Can input loads per area or add actual quantities to accommodate schematic and detailed design Built in library of space types (loads and associated schedules) for DOE reference buildings for all vintages (pre-1980, 1980-2004), ASHRAE standard prototype buildings (189.1-2009, 90.1-2004, 90.1-2007, 90.1-2010, 90.1-2013), and DEER building types (pre-1975, 1985, 1996, 2003, 2007, 2011, 2014, 2015, 2017) Can apply loads in one place (space type) and apply throughout the building","title":"Building Loads"},{"location":"about/features/#grid-view-for-thermal-zones-space-types-spaces-design-days-and-refrigeration-cases","text":"Viewing and editing your model in a grid view allows you to see many objects at once and compare settings.","title":"Grid View for Thermal Zones, Space Types, Spaces, Design Days, and Refrigeration Cases"},{"location":"about/features/#hvac","text":"Graphical representation of HVAC systems, zones, and their connections Drag-and-drop components onto diagram and click to edit HVAC system templates for ASHRAE Appendix G system types Graphical support for creating customized 'single-duct' or 'dual-duct' air systems or plants","title":"HVAC"},{"location":"about/features/#hot-chilled-and-condenser-water-systems","text":"Hot water boilers (all fuels) District heating and cooling Set-temperature heating/cooling source Single, two-speed, and variable-speed cooling towers Single and two-speed fluid coolers and evaporative fluid coolers Chillers (electric, absorption, indirect absorption, and central heat pump) Vertical and horizontal ground heat exchanger (bore fields & trenches for ground-source heat pumps) Water-to-water heat pumps Bypass pipes Constant and variable speed pumps, both individual and headered Fluid-to-fluid heat exchangers (for primary/secondary pumping and waterside economizers, etc.) Hot, chilled, and condenser water system controls Staging of equipment (based on load range, part-load, sequential, etc.) Solar hot water (with and without storage and integrated PV) Pipes (indoor heat loss, outdoor heat loss, or adiabatic) Load profile (model plant behavior with loads from a schedule) Ice and chilled water storage","title":"Hot, Chilled, and Condenser Water Systems"},{"location":"about/features/#air-system-components","text":"Constant speed and variable speed supply, return and exhaust fans Supply and return plenums Packaged unitary equipment Dual-duct CV and VAV systems, including customization Changeover bypass (VVT) systems Multi-stage unitary equipment (used with staged thermostats) Outdoor air intake with economizers (all types) and damper control Chilled water cooling coils One-speed, two-speed, multi-speed, and variable-speed DX cooling coils, including humidity controls One-speed, multi-speed, and variable-speed DX heating coils (heat pumps) Water-to-air heat pumps Gas, electric, hot water and DX (heat pump) heating and/or preheat coils Steam humidifiers (electrically powered) used with zone humidistats Direct and indirect evaporative coolers Sensible and latent heat recovery VAV-Reheat and CAV-Reheat terminals (gas, electric, and hot water reheat coils) VAV terminals without reheat Series and parallel fan powered boxes with reheat (all fuel types) Diffusers Two-pipe and four-pipe chilled beams (active and passive) Four-pipe induction terminals","title":"Air System Components"},{"location":"about/features/#air-system-controls","text":"Controls for all air systems: Air aystem availability manager controls Scheduled on/off Hybrid ventilation controls Night ventilation controls Hybrid ventilation controls Night-cycle controls (whole system and/or terminal fans) Optimum start controls Differential thermostat High temperature turn on/off Low temperature turn on/off Outdoor and supply air temperature/humidity controls Scheduled supply air temp Supply air temp reset based on OA Supply air temp follow OA Temp Supply air humidity minimum / maximum with deadband Demand-controlled ventilation controls Controls for single and multizone VAV air systems: Scheduled supply air temp Supply air temp reset based on OA Supply air temp reset based on zone temp (warmest) Supply air flow reset based on zone temp (warmest) Supply air humidity minimum/maximum (critical zone or average of zones) Single-zone VAV heat (one control zone, many slaves) Heating only Cooling only Both heating and cooling","title":"Air System Controls"},{"location":"about/features/#zone-level-heating-and-cooling-systems","text":"Unit heaters (all fuels) Unit ventilators Energy recovery ventilators Dehumidifiers Low temp radiant heating (electric, variable, and constant flow water) Low temp radiant cooling (variable and constant flow water) PTAC (DX cooling + fan + all heating fuels) PTHP (DX heating/cooling + fan + electric backup heat) Water-source heat pump Air-source heat pump Exhaust fans Four pipe fan coils (may be supplied via DOAS system) Electric and hot-water baseboards High temperature radiant heaters (gas and electric) Zone-to-zone transfer air (zone air mixing)","title":"Zone-level Heating and Cooling Systems"},{"location":"about/features/#variable-refrigerant-flow-systems","text":"Condenser plus zone-level terminals Heat recovery add/or heat pump VRF Air-cooled, evaporatively-cooled or water-cooled condensing units Piping correction factors account for performance degradation estimates Load, zone or scheduled thermostat priorities","title":"Variable Refrigerant Flow Systems"},{"location":"about/features/#commercial-refrigeration","text":"DX refrigeration systems Cascading DX refrigeration systems Fluid-filled DX secondary refrigeration systems Cases Walk-in freezers Compressors Air, water, and evaporatively-cooled condensers Liquid-suction heat exchangers and mechanical subcoolers Heat-recovery to domestic hot water systems (desuperheater) Heat-recovery to unitary air systems (desuperheater)","title":"Commercial Refrigeration"},{"location":"about/features/#domestic-water-systems","text":"Hot water heaters Tank type/tankless water heaters (all fuels) Heat pump water heaters Stratified tank water heaters Storage tank fed from boiler(s)/heat exchanger(s) Solar hot water (flat plate or integral collectors) for pre-heating Constant speed and/or variable speed recirculation/booster pumps Equipment that uses warm water (showers, faucets, etc.), can specify mixed water temp Equipment that uses cold water only","title":"Domestic Water Systems"},{"location":"about/features/#daylighting","text":"Add daylighting control points via the SketchUp plugin or OpenStudio Application Create interior partitions and glare sensors for modeling daylight analysis with improved accuracy, using the Sketchup Plugin Create and configure window shading controls for modeling daylight analysis using the Sketchup plugin Insert illuminance map for visualizing daylight analysis using the Sketchup plugin Use built-in OpenStudio measure to run daylighting analysis using Radiance, state-of-the-art ray-tracing daylight simulation engine without making a separate model Configure daylight analysis parameters used by radiance simulation Lights in the EnergyPlus Model controlled based on daylight available per radiance","title":"Daylighting"},{"location":"about/features/#custom-controls","text":"Within EnergyPlus, advanced controls that are not built-in can be implemented utilizing the EnergyManagementSystem (EMS) suite of objects. This involves defining Sensors and Actuators that interact with building parameters through Programs which are written in the EnergyPlus Runtime Language (ERL), which is based on a common building-controls language. OpenStudio Application supports the creation of EMS programs.","title":"Custom Controls"},{"location":"about/features/#location-specific-information","text":"Find typical weather data and ASHRAE design conditions for most locations in the world Use actual weather data (AMY) from a variety of vendors/sources Store ASHRAE/CEC climate zone to trigger calculations within measures","title":"Location-Specific Information"},{"location":"about/features/#economics","text":"Full lifecycle costing (NIST Handbook 135 compliant) including built-in EIA fuel escalation rates and inflation Adjustable analysis period length Add capital, recurring O&M, salvage, and replacement costs to model using measures Lifecycle is adjustable per-cost (IE windows can last longer than lamps) Add utility rates (which include time-of-use, demand charges, ratchets, seasonal values, etc.) to model using measures","title":"Economics"},{"location":"about/features/#import-and-export-options","text":"IDF import (geometry, constructions, loads, thermal zones, and schedules only) IDF export (full model including HVAC) gbXML import (geometry, constructions, thermal zones, and schedules only) gbXML export (geometry, constructions, and thermal zones only) SDD import (simulation format - full model including HVAC) SDD export (input format - geometry, constructions, and thermal zones only) IFC import (geometry only) Import resources (materials, constructions, loads, spacetypes) from .osm file Import surfaces, subsurfaces, spaces, and thermal zones from eQuest models using a Measure","title":"Import and Export Options"},{"location":"about/features/#analysis-of-existing-buildings","text":"Enter utility bills for all fuel types in building Run model using actual weather data (AMY) Automatically compare model results to bills and shows goodness-of-fit by fuel type Automatically show whether goodness of fit meets common calibration standards (FEMP, ASHRAE)","title":"Analysis of Existing Buildings"},{"location":"about/features/#libraries","text":"Space types (people, lights, equipment, ventilation, infiltration, schedules) for DOE reference buildings for all vintages (pre-1980, 1980-2004, and 2004), ASHRAE standard prototype buildings (189.1-2009, 90.1-2004, 90.1-2007, 90.1-2010, 90.1-2013), and DEER building types (pre-1975, 1985, 1996, 2003, 2007, 2011, 2014, 2015, 2017) Building constructions (walls, windows, doors, floors, etc.) for DOE reference buildings for all vintages (pre-1980, 1980-2004, and 2004), ASHRAE standard prototype buildings (189.1-2009, 90.1-2004, 90.1-2007, 90.1-2010, 90.1-2013), and DEER building types (pre-1975, 1985, 1996, 2003, 2007, 2011, 2014, 2015, 2017) Extensive online library of building materials from ASHRAE Handbook of Fundamentals Extensive online library of weather files and design day conditions","title":"Libraries"},{"location":"about/features/#parametric-analysis-using-pat","text":"OpenStudio Measures provide reliable and repeatable mechanism to apply transforms to models Eliminates ambiguity and user error; all rules encapsulated in measure itself More than 316 measures available online and always growing Write measure once and apply to many projects Perform complex ECMs, like full HVAC replacement, easily Quickly access online and local libraries of measures from drag-and-drop interface Edit user inputs to control how measure modifies the model Create meaningful results, ready for inclusion in reports to design team, building owners, etc.","title":"Parametric Analysis Using PAT"},{"location":"about/features/#qaqc","text":"Measures can be used to check for common modeling errors Users don't have to understand to use; gives expert review to junior modelers more inexpensively Automate key checks for utility regulators to keep up quality Lower time spent by reviewers on mundane checks; frees time to focus on real issues Users can modify Generic QAQC Measure to create custom checks","title":"QAQC"},{"location":"about/features/#reporting","text":"Measures can be used to create custom reports in HTML format (view in any web browser) Allows users to quickly visualize and summarize data for different audiences Reports are shareable via email Reports can be simple or highly interactive using standard JavaScript Libraries","title":"Reporting"},{"location":"about/features/#cloud-computing-using-pat","text":"Any user with an Amazon account can run simulations on cloud with 1 click Very affordable vs. engineer's time (16 simulations in parallel for ~$2.00/hr) Can run up to 300 simulations in parallel (costs scale in 16-processor increments) Enables small firms to access cloud computing without upfront hardware costs","title":"Cloud Computing Using PAT"},{"location":"about/features/#share-modeling-best-practices","text":"Online database called BCL (Building Component Library) can be used to share measures BCL can be used to share building components Instantaneous world-wide distribution and updating of content Allows utilities to ensure uniformity and best-practices across many energy consulting firms","title":"Share Modeling Best-Practices"},{"location":"about/mailing_list/","text":"OpenStudio Coalition Mailing List Sign up to stay up to date with the latest news from the OpenStudio Coalition. Loading\u2026","title":"Join the Mailing List"},{"location":"about/openstudio_coalition/","text":"Introducing the OpenStudio Coalition The OpenStudio Coalition is a newly formed organization founded to support the OpenStudio Application and to expand the use of energy modeling generally using the free and open source OpenStudio Application. The goals of the OpenStudio Coalition (OSC) include: Keeping the OpenStudio Application Free and Readily Available : Free to individual user energy modeling tools have been around for a long time, most notably eQUEST. These tools have made it easier to learn energy modeling and for energy models to be used in various publicly funded activities such as energy efficiency programs. A free and open version of the OpenStudio Application will help the EnergyPlus engine be adopted in these contexts. Similar to the OpenStudio Application, many energy modeling tools, including eQUEST, got their start with public funding and then transitioned to other forms of support. Keeping OpenStudio Application Current and Functional : As the OpenStudio SDK evolves, OSC will coordinate investments in the OpenStudio application to maintain the ability to work interchangeably in both environments. The OpenStudio Application is an important debugging tool for application developers and for those that need to evaluate the results from tools that use the OpenStudio SDK, such as energy program evaluators and model reviewers. Supporting OpenStudio Application Use : The energy modeling community benefits from access to a free and functional tool for new users of energy modeling tools. The Coalition plans to actively promote the use of the OpenStudio Application to potential energy modelers with the goal of expanding understanding of building performance and increasing the use of energy modeling. It is the intent of this effort to expand both the supply of energy modelers and the demand for energy modeling tools in general, not just for the OpenStudio Application. Organization The OpenStudio Coalition is managed by volunteers from the founding organizations, The Energy Coalition (TEC) , Vermont Energy Investment Corporation (VEIC) , Performance Systems Development (PSD) and EffiBEM . These organizations have worked together over the past several years, supporting development of and using the OpenStudio/EnergyPlus framework and have now formed this new organization to help support the OpenStudio Application and the expansion of the value and adoption of energy modeling. These organizations have been joined by expert developers who can help support the continued evolution of the OpenStudio Application. It is the intent of the founding members to seek external funding to support the goals of the organization. The primary focus of initial funding will be to fund incremental development of the OpenStudio application. Organization Resources The National Renewable Energy Laboratory (NREL) transferred control of the OpenStudioApplication and openstudio-sketchup-plugin repositories to the OpenStudio Coalition in July 2020. This transfer included all source code developed for these tools by NREL as well as issue tracking information, documentation, and release packages. The OpenStudio Coalition has assumed control of these resources and will be managing them going forward. Collaborators The following persons and organizations have been instrumental to the improvement and success of the application: Helix Energy Partners LLC Martin Duvanel Manu Varkey Dana Kang Eric Ringold Antoine Galataud Luis Lara kentakahas Jocelyn Lorrey Nick Schrader For More Information: Sign up to our email list: Email List Contact us at osc@openstudiocoalition.org Contact Us","title":"About the OpenStudio Coalition"},{"location":"about/openstudio_coalition/#organization","text":"The OpenStudio Coalition is managed by volunteers from the founding organizations, The Energy Coalition (TEC) , Vermont Energy Investment Corporation (VEIC) , Performance Systems Development (PSD) and EffiBEM . These organizations have worked together over the past several years, supporting development of and using the OpenStudio/EnergyPlus framework and have now formed this new organization to help support the OpenStudio Application and the expansion of the value and adoption of energy modeling. These organizations have been joined by expert developers who can help support the continued evolution of the OpenStudio Application. It is the intent of the founding members to seek external funding to support the goals of the organization. The primary focus of initial funding will be to fund incremental development of the OpenStudio application.","title":"Organization"},{"location":"about/openstudio_coalition/#organization-resources","text":"The National Renewable Energy Laboratory (NREL) transferred control of the OpenStudioApplication and openstudio-sketchup-plugin repositories to the OpenStudio Coalition in July 2020. This transfer included all source code developed for these tools by NREL as well as issue tracking information, documentation, and release packages. The OpenStudio Coalition has assumed control of these resources and will be managing them going forward.","title":"Organization Resources"},{"location":"about/openstudio_coalition/#collaborators","text":"The following persons and organizations have been instrumental to the improvement and success of the application: Helix Energy Partners LLC Martin Duvanel Manu Varkey Dana Kang Eric Ringold Antoine Galataud Luis Lara kentakahas Jocelyn Lorrey Nick Schrader","title":"Collaborators"},{"location":"about/openstudio_coalition/#for-more-information","text":"Sign up to our email list: Email List Contact us at osc@openstudiocoalition.org Contact Us","title":"For More Information:"},{"location":"about/privacy_policy/","text":"Privacy Policy The OpenStudio Coalition takes your privacy seriously. To better protect your privacy we provide this privacy policy notice explaining the way your personal information is collected and used. Collection of Routine Information This OpenStudio Coalition tracks basic information about visitors to its websites and users of its applications. This information includes, but is not limited to, IP addresses, browser and application details, timestamps and referring pages. None of this information can personally identify specific users. The information is aggregated and tracked to help understand the user communities interests for feature planning and maintenance purposes. Advertisement and Other Third Parties The OpenStudio Coalition uses Google Analytics services to track website and application use. Google's advertising partners and other third parties may use cookies, scripts and/or web beacons in order to display advertisements and other useful information. Such tracking is done directly by the third parties through their own servers and is subject to their own privacy policies. The OpenStudio Coalition has no access or control over these cookies, scripts and/or web beacons that may be used by third parties. Learn how to opt out of Google's cookie usage . Links to Third Party Websites The OpenStudio Coalition has included links on this website for your use and reference. We are not responsible for the privacy policies on these websites. You should be aware that the privacy policies of these websites may differ from our own. Changes To This Privacy Policy This Privacy Policy is effective as of posting and will remain in effect except with respect to any changes in its provisions in the future, which will be in effect immediately after being posted on this page. We reserve the right to update or change our Privacy Policy at any time and you should check this Privacy Policy periodically. If we make any material changes to this Privacy Policy, we will notify you by updating this page. Contact Information For any questions or concerns regarding the privacy policy, please send us an email to osc@openstudiocoalition.org .","title":"Privacy Policy"},{"location":"about/privacy_policy/#collection-of-routine-information","text":"This OpenStudio Coalition tracks basic information about visitors to its websites and users of its applications. This information includes, but is not limited to, IP addresses, browser and application details, timestamps and referring pages. None of this information can personally identify specific users. The information is aggregated and tracked to help understand the user communities interests for feature planning and maintenance purposes.","title":"Collection of Routine Information"},{"location":"about/privacy_policy/#advertisement-and-other-third-parties","text":"The OpenStudio Coalition uses Google Analytics services to track website and application use. Google's advertising partners and other third parties may use cookies, scripts and/or web beacons in order to display advertisements and other useful information. Such tracking is done directly by the third parties through their own servers and is subject to their own privacy policies. The OpenStudio Coalition has no access or control over these cookies, scripts and/or web beacons that may be used by third parties. Learn how to opt out of Google's cookie usage .","title":"Advertisement and Other Third Parties"},{"location":"about/privacy_policy/#links-to-third-party-websites","text":"The OpenStudio Coalition has included links on this website for your use and reference. We are not responsible for the privacy policies on these websites. You should be aware that the privacy policies of these websites may differ from our own.","title":"Links to Third Party Websites"},{"location":"about/privacy_policy/#changes-to-this-privacy-policy","text":"This Privacy Policy is effective as of posting and will remain in effect except with respect to any changes in its provisions in the future, which will be in effect immediately after being posted on this page. We reserve the right to update or change our Privacy Policy at any time and you should check this Privacy Policy periodically. If we make any material changes to this Privacy Policy, we will notify you by updating this page.","title":"Changes To This Privacy Policy"},{"location":"about/privacy_policy/#contact-information","text":"For any questions or concerns regarding the privacy policy, please send us an email to osc@openstudiocoalition.org .","title":"Contact Information"},{"location":"about/roadmap/","text":"Roadmap Features Background Effective early May 2020, NREL no longer maintains or updates the OpenStudio Application and the SketchUp Plug-in. The final NREL-provided software distribution of the OpenStudio Application remains available at https://github.com/NREL/OpenStudioApplication/releases . NREL will continue to develop, distribute, and maintain the OpenStudio SDK, OpenStudio Command Line Interface (CLI), OpenStudio Server, OpenStudio Standards, OpenStudio Measures, FloorspaceJS, Building Component Library (BCL), and Parametric Analysis Tool (PAT). See https://openstudio.net/news/1536268924 for more details. The OpenStudio Coalition After the final NREL-provided software distribution, the OpenStudio Coalition was formed to continue supporting the OpenStudio Application and SketchUp Plug-in. The OpenStudio Coalition plans to support releasing new versions of the OpenStudio Application and SketchUp Plug-in aligned with scheduled releases of the OpenStudio SDK. The current level of support includes high priority bug fixes and minimal or no changes to the user interface with each release. New Partnerships and Open Source Software Contribution Opportunities In order to support new features or enhancements beyond base maintenance activities, the OpenStudio Coalition is seeking additional companies, individual contributors, and organizations that are interested in providing development contributions, support and maintenance activities for the OpenStudio Application. A list of potential new features and activities are listed below as examples. Companies, individuals, and organizations interested in helping to expand support to include these types of features or activities are encouraged to contact OSC@openstudiocoalition.org . List of Potential Features and Activities Seeking Funding Distributed Energy Resources Expand capabilities for the app to model solar, storage, electric vehicles, and heat pumps (water and space conditioning) BCL Content Develop and support building component library (BCL) measures to allow for decarbonization analysis. This could include measures which integrate REopt, SAM, demand flexibility, or other DER focused tools. Interface Modernize UI design, add new tabs to support new features Language translation localization for English, French, Italian, German, Spanish (EFIGS) and beyond Wizards Gather feedback from user community on what wizards or simplified use cases are most helpful Compliance Capabilities Complete the testing and documentation required for California Title 24 software compliance Create and maintain OpenStudio Application interfaces and reporting measures for ASHRAE 229 comparison Trainings Recorded/OnDemand trainings Live trainings Customized trainings Other ways to help Non-monetary, in-kind support is also appreciated and includes: Testing of release candidates and new features Direct code contributions for bug fixes and new features Documentation or training material contributions","title":"Roadmap Features"},{"location":"about/roadmap/#background","text":"Effective early May 2020, NREL no longer maintains or updates the OpenStudio Application and the SketchUp Plug-in. The final NREL-provided software distribution of the OpenStudio Application remains available at https://github.com/NREL/OpenStudioApplication/releases . NREL will continue to develop, distribute, and maintain the OpenStudio SDK, OpenStudio Command Line Interface (CLI), OpenStudio Server, OpenStudio Standards, OpenStudio Measures, FloorspaceJS, Building Component Library (BCL), and Parametric Analysis Tool (PAT). See https://openstudio.net/news/1536268924 for more details.","title":"Background"},{"location":"about/roadmap/#the-openstudio-coalition","text":"After the final NREL-provided software distribution, the OpenStudio Coalition was formed to continue supporting the OpenStudio Application and SketchUp Plug-in. The OpenStudio Coalition plans to support releasing new versions of the OpenStudio Application and SketchUp Plug-in aligned with scheduled releases of the OpenStudio SDK. The current level of support includes high priority bug fixes and minimal or no changes to the user interface with each release.","title":"The OpenStudio Coalition"},{"location":"about/roadmap/#new-partnerships-and-open-source-software-contribution-opportunities","text":"In order to support new features or enhancements beyond base maintenance activities, the OpenStudio Coalition is seeking additional companies, individual contributors, and organizations that are interested in providing development contributions, support and maintenance activities for the OpenStudio Application. A list of potential new features and activities are listed below as examples. Companies, individuals, and organizations interested in helping to expand support to include these types of features or activities are encouraged to contact OSC@openstudiocoalition.org .","title":"New Partnerships and Open Source Software Contribution Opportunities"},{"location":"about/roadmap/#list-of-potential-features-and-activities-seeking-funding","text":"","title":"List of Potential Features and Activities Seeking Funding"},{"location":"about/roadmap/#distributed-energy-resources","text":"Expand capabilities for the app to model solar, storage, electric vehicles, and heat pumps (water and space conditioning)","title":"Distributed Energy Resources"},{"location":"about/roadmap/#bcl-content","text":"Develop and support building component library (BCL) measures to allow for decarbonization analysis. This could include measures which integrate REopt, SAM, demand flexibility, or other DER focused tools.","title":"BCL Content"},{"location":"about/roadmap/#interface","text":"Modernize UI design, add new tabs to support new features Language translation localization for English, French, Italian, German, Spanish (EFIGS) and beyond","title":"Interface"},{"location":"about/roadmap/#wizards","text":"Gather feedback from user community on what wizards or simplified use cases are most helpful","title":"Wizards"},{"location":"about/roadmap/#compliance-capabilities","text":"Complete the testing and documentation required for California Title 24 software compliance Create and maintain OpenStudio Application interfaces and reporting measures for ASHRAE 229 comparison","title":"Compliance Capabilities"},{"location":"about/roadmap/#trainings","text":"Recorded/OnDemand trainings Live trainings Customized trainings","title":"Trainings"},{"location":"about/roadmap/#other-ways-to-help","text":"Non-monetary, in-kind support is also appreciated and includes: Testing of release candidates and new features Direct code contributions for bug fixes and new features Documentation or training material contributions","title":"Other ways to help"},{"location":"about/software_license/","text":"Software License Description and Terms The OpenStudio Application and OpenStudio SketchUp Plug-in are licensed under the Revised Berkeley Software Distribution (BSD3) License, and are free for use and development. Visit the BSD3 license web page for details on the terms of use.","title":"Software License"},{"location":"about/training/","text":"Training, Support, and Consulting Below are companies and universities that are licensed OpenStudio training and support organizations. Licensed commercial organizations have been trained directly by the OpenStudio development team and have access to NREL's training material. For information on becoming a licensed training organization please see the RFP summary . Commercial Organizations Big Ladder Software - Denver, CO Contact: Peter Ellis Big Ladder Software is dedicated to providing software and services for the building energy modeling industry. The company provides training, support, software development, and consulting services for OpenStudio and EnergyPlus to mechanical, architectural, and design engineering firms across the US. With a unique combination of expertise in building science, computer simulation, and programming, Big Ladder has experienced steady growth and achieved significant success and recognition in the industry. Big Ladder offers in-person public and private (in-house) training workshops for OpenStudio and EnergyPlus. The Big Ladder team has trained scores of new users in the intricacies of energy modeling software in workshops at US and international locations. The company also offers hourly support services by phone and email. Support includes advising on best practices for modeling, helping with writing OpenStudio \"measures\", helping with the implementation of difficult HVAC systems or controls, debugging stubborn errors, checking models for correctness and quality assurance, and assistance with auxiliary software tools. As part of the EnergyPlus Development Team, Big Ladder provides deep insight into the simulation engine \"under the hood\" of OpenStudio. The Energy Simulation Academy - Milwaukee, WI Contact: Bob Fassbender The Energy Simulation Academy (TESA) was founded in 2010 with the single goal of creating high quality energy simulations through widely accessible education. The company provides training and consulting services for OpenStudio /EnergyPlus, TRACE 700, and eQUEST. Trainees include architects, engineers, design firms and consultants throughout the world. Through TESA and Energy-models.com , the company provides online training, both on-demand and via live webinars. The team also provides private and personalized training services remotely and in-house. We specialize in moving straight to the point and speeding up the learning curve through the use of step-by-step tutorials. Additionally, we combine our expertise in multiple energy modeling software packages with our experience troubleshooting thousands of models to offer a large range of consulting services, whether it's creating a model from scratch or evaluating existing models. Performance Systems Development - Ithaca, NY Contact: Chris Balbach Performance Systems Development (PSD) is a 15 year old technology enabled consulting firm that provides training, consulting, software enabled solution design, and implementation support to utilities, efficiency program implementers, energy service professionals, and building portfolio owners. PSD's clients include some of the largest utilities and efficiency program implementers in country. PSD staff have deep subject matter expertise, offer industry leadership and support key efficiency enabling standards in building science, energy simulation, measurement& verification, evaluation and energy efficiency data management. PSD is highly regarded for efficiency industry professional workforce development and delivers third party certification training on a range of topics. PSD's program implementation team supports market transforming efficiency program design and cost effective implementation and are responsible for industry changing program models that leverage market investments and drive investment in building performance. VILANDCO - Vietnam & South East Asia Contact: Nguyen Trung Kien The Viet Land Investment Consulting and Construction Joint-Stock Company (VILANDCO JSC) was established in 2007. The company aims to ensure harmony between humans and the natural environment in any project they undertake. VILANDCO is currently a Gold member of the Vietnam Green Building Council (VGBC) . The company's main services are Green Building design & consulting with projects for office buildings, schools, commercial centers, factories, etc. From 2015, VILANDCO has delivered training for DesignBuilder, OpenStudio\u00ae, and EnergyPlus\u2122. Trainees include architects, engineers, design firms and consultants in Vietnam and South East Asia countries. The company also provides consulting services in building performance simulation such as energy modeling, daylighting & CFD (wind, natural ventilation, thermal comfort analysis, etc.) to support design firms optimize their design's performance from concept to detailed design stage. Universities The City College of New York - New York, NY Contact: Nicholas Madamopulos The City College of New York (CCNY), founded in 1847, is a flagship college of The City University of New York (CUNY) system. CCNY is a comprehensive teaching, research, and service institution dedicated to accessibility and excellence in undergraduate and graduate education. CCNY offers a wide range of degrees related to engineering, architecture and science with focus on energy, sustainability and the environment. The Grove School of Engineering is active in Research and Training of graduate and undergraduate students. The Grove School of Engineering and The Bernard and Anne Spitzer School of Architecture offer a graduate program in \"Sustainability in the Urban Environment\"?. The program offers an interdisciplinary MS in Sustainability with two concentrations: an Architecture concentration suitable for students with backgrounds in architecture; and an Engineering-Science concentration appropriate for engineering or science majors. The overall aim of the program is to develop a workforce with the knowledge and skills that 21st century workplaces will increasingly demand, i.e., to enable them to be innovative and flexible contributors to sustainability solutions. As New York City's only public university, CUNY has a special role to play in helping to meet the city's needs. The Building Performance Lab-CUNY, is ideally positioned and equipped to serve as a catalyst for change. Through collaborations with other parties, the BP lab works to accelerate market transformation in the buildings sector. The Lab's multi-track approach also includes stimulating applied research, promoting technology transfer, and conducting outreach to the real estate sector to raise awareness of sustainability goals and how they can be achieved. One focus of our work is greening existing commercial properties by promoting advanced building system technologies and best practices that reduce energy use and improve indoor environmental conditions and waste management practices. Greater tenant satisfaction is one result.A crucial best practice is the monitoring and verification that ensure that, once achieved, optimum building performance is maintained. Another focus of our work is long-term workforce development, which we pursue through curriculum development, internships, and other technology training. The University of Colorado - Boulder, CO Contact: Gregor P. Henze, Ph.D., P.E. Architectural engineering is a long-established engineering degree program in the College of Engineering and Applied Science at the University of Colorado Boulder: Architectural engineering was established in 1925, awarded its first degree in 1929, and has been continuously accredited since 1936, along with dedicated graduate degree programs. Our CEAE department is ranked 20th overall and 14th among public graduate programs in 141 universities surveyed by U.S. News and World Report. The National Research Council gave the department an overall ranking of 7 in the civil engineering field, and in the top 5% of research doctorate programs in the nation. Moreover, the University of Colorado is ranked 25th among US universities and 34th in the Shanghai ranking of the world's best 500 universities. The University of Colorado offers BS, MS, and PhD in architectural engineering. While the architectural engineering graduate degrees have only be offered since 2012, the Building Systems Engineering group has been producing MS and PhD graduates through the CEAE department for over 30 years. Graduates from the program work in both the public and private sectors in the broad areas of building energy systems, including academic positions at universities around the world, researchers at national laboratories, and designers and analysis in the building industry. At the graduate level, the Building System Engineering group seeks to improve the sustainability and effectiveness of buildings. Research areas include the design, modeling, and analysis of integrated building energy systems, renewable energy technologies, sustainable materials for buildings, indoor environmental quality, grid-integration and model predictive control for building energy systems, and innovative HVAC and illumination technologies. The program includes seven faculty members with backgrounds in mechanical engineering, architecture, illumination engineering, sustainable materials, acoustics and renewable energy engineering. We offer three degree specializations align within our research area: Sustainable building design and operation, renewable energy systems for buildings, and illumination engineering. Training in OpenStudio and EnergyPlus is provided in the context of graduate classes on building energy simulation and sustainable building design. The University of Texas at Tyler - Tyler, TX Contact: Nelson Fumo, Ph.D. The University of Texas at Tyler Department of Mechanical Engineering provides engineering education needed for the development of a professional career in a variety of industrial and business operations, from large corporations and government organizations to small consulting firms. OpenStudio is taught in the technical elective course Introduction to Building Energy Simulation.","title":"Training"},{"location":"about/training/#commercial-organizations","text":"","title":"Commercial Organizations"},{"location":"about/training/#big-ladder-software-denver-co","text":"","title":"Big Ladder Software - Denver, CO"},{"location":"about/training/#contact-peter-ellis","text":"Big Ladder Software is dedicated to providing software and services for the building energy modeling industry. The company provides training, support, software development, and consulting services for OpenStudio and EnergyPlus to mechanical, architectural, and design engineering firms across the US. With a unique combination of expertise in building science, computer simulation, and programming, Big Ladder has experienced steady growth and achieved significant success and recognition in the industry. Big Ladder offers in-person public and private (in-house) training workshops for OpenStudio and EnergyPlus. The Big Ladder team has trained scores of new users in the intricacies of energy modeling software in workshops at US and international locations. The company also offers hourly support services by phone and email. Support includes advising on best practices for modeling, helping with writing OpenStudio \"measures\", helping with the implementation of difficult HVAC systems or controls, debugging stubborn errors, checking models for correctness and quality assurance, and assistance with auxiliary software tools. As part of the EnergyPlus Development Team, Big Ladder provides deep insight into the simulation engine \"under the hood\" of OpenStudio.","title":"Contact: Peter Ellis"},{"location":"about/training/#the-energy-simulation-academy-milwaukee-wi","text":"","title":"The Energy Simulation Academy - Milwaukee, WI"},{"location":"about/training/#contact-bob-fassbender","text":"The Energy Simulation Academy (TESA) was founded in 2010 with the single goal of creating high quality energy simulations through widely accessible education. The company provides training and consulting services for OpenStudio /EnergyPlus, TRACE 700, and eQUEST. Trainees include architects, engineers, design firms and consultants throughout the world. Through TESA and Energy-models.com , the company provides online training, both on-demand and via live webinars. The team also provides private and personalized training services remotely and in-house. We specialize in moving straight to the point and speeding up the learning curve through the use of step-by-step tutorials. Additionally, we combine our expertise in multiple energy modeling software packages with our experience troubleshooting thousands of models to offer a large range of consulting services, whether it's creating a model from scratch or evaluating existing models.","title":"Contact: Bob Fassbender"},{"location":"about/training/#performance-systems-development-ithaca-ny","text":"","title":"Performance Systems Development - Ithaca, NY"},{"location":"about/training/#contact-chris-balbach","text":"Performance Systems Development (PSD) is a 15 year old technology enabled consulting firm that provides training, consulting, software enabled solution design, and implementation support to utilities, efficiency program implementers, energy service professionals, and building portfolio owners. PSD's clients include some of the largest utilities and efficiency program implementers in country. PSD staff have deep subject matter expertise, offer industry leadership and support key efficiency enabling standards in building science, energy simulation, measurement& verification, evaluation and energy efficiency data management. PSD is highly regarded for efficiency industry professional workforce development and delivers third party certification training on a range of topics. PSD's program implementation team supports market transforming efficiency program design and cost effective implementation and are responsible for industry changing program models that leverage market investments and drive investment in building performance.","title":"Contact: Chris Balbach"},{"location":"about/training/#vilandco-vietnam-south-east-asia","text":"","title":"VILANDCO - Vietnam &amp; South East Asia"},{"location":"about/training/#contact-nguyen-trung-kien","text":"The Viet Land Investment Consulting and Construction Joint-Stock Company (VILANDCO JSC) was established in 2007. The company aims to ensure harmony between humans and the natural environment in any project they undertake. VILANDCO is currently a Gold member of the Vietnam Green Building Council (VGBC) . The company's main services are Green Building design & consulting with projects for office buildings, schools, commercial centers, factories, etc. From 2015, VILANDCO has delivered training for DesignBuilder, OpenStudio\u00ae, and EnergyPlus\u2122. Trainees include architects, engineers, design firms and consultants in Vietnam and South East Asia countries. The company also provides consulting services in building performance simulation such as energy modeling, daylighting & CFD (wind, natural ventilation, thermal comfort analysis, etc.) to support design firms optimize their design's performance from concept to detailed design stage.","title":"Contact: Nguyen Trung Kien"},{"location":"about/training/#universities","text":"","title":"Universities"},{"location":"about/training/#the-city-college-of-new-york-new-york-ny","text":"","title":"The City College of New York - New York, NY"},{"location":"about/training/#contact-nicholas-madamopulos","text":"The City College of New York (CCNY), founded in 1847, is a flagship college of The City University of New York (CUNY) system. CCNY is a comprehensive teaching, research, and service institution dedicated to accessibility and excellence in undergraduate and graduate education. CCNY offers a wide range of degrees related to engineering, architecture and science with focus on energy, sustainability and the environment. The Grove School of Engineering is active in Research and Training of graduate and undergraduate students. The Grove School of Engineering and The Bernard and Anne Spitzer School of Architecture offer a graduate program in \"Sustainability in the Urban Environment\"?. The program offers an interdisciplinary MS in Sustainability with two concentrations: an Architecture concentration suitable for students with backgrounds in architecture; and an Engineering-Science concentration appropriate for engineering or science majors. The overall aim of the program is to develop a workforce with the knowledge and skills that 21st century workplaces will increasingly demand, i.e., to enable them to be innovative and flexible contributors to sustainability solutions. As New York City's only public university, CUNY has a special role to play in helping to meet the city's needs. The Building Performance Lab-CUNY, is ideally positioned and equipped to serve as a catalyst for change. Through collaborations with other parties, the BP lab works to accelerate market transformation in the buildings sector. The Lab's multi-track approach also includes stimulating applied research, promoting technology transfer, and conducting outreach to the real estate sector to raise awareness of sustainability goals and how they can be achieved. One focus of our work is greening existing commercial properties by promoting advanced building system technologies and best practices that reduce energy use and improve indoor environmental conditions and waste management practices. Greater tenant satisfaction is one result.A crucial best practice is the monitoring and verification that ensure that, once achieved, optimum building performance is maintained. Another focus of our work is long-term workforce development, which we pursue through curriculum development, internships, and other technology training.","title":"Contact: Nicholas Madamopulos"},{"location":"about/training/#the-university-of-colorado-boulder-co","text":"","title":"The University of Colorado - Boulder, CO"},{"location":"about/training/#contact-gregor-p-henze-phd-pe","text":"Architectural engineering is a long-established engineering degree program in the College of Engineering and Applied Science at the University of Colorado Boulder: Architectural engineering was established in 1925, awarded its first degree in 1929, and has been continuously accredited since 1936, along with dedicated graduate degree programs. Our CEAE department is ranked 20th overall and 14th among public graduate programs in 141 universities surveyed by U.S. News and World Report. The National Research Council gave the department an overall ranking of 7 in the civil engineering field, and in the top 5% of research doctorate programs in the nation. Moreover, the University of Colorado is ranked 25th among US universities and 34th in the Shanghai ranking of the world's best 500 universities. The University of Colorado offers BS, MS, and PhD in architectural engineering. While the architectural engineering graduate degrees have only be offered since 2012, the Building Systems Engineering group has been producing MS and PhD graduates through the CEAE department for over 30 years. Graduates from the program work in both the public and private sectors in the broad areas of building energy systems, including academic positions at universities around the world, researchers at national laboratories, and designers and analysis in the building industry. At the graduate level, the Building System Engineering group seeks to improve the sustainability and effectiveness of buildings. Research areas include the design, modeling, and analysis of integrated building energy systems, renewable energy technologies, sustainable materials for buildings, indoor environmental quality, grid-integration and model predictive control for building energy systems, and innovative HVAC and illumination technologies. The program includes seven faculty members with backgrounds in mechanical engineering, architecture, illumination engineering, sustainable materials, acoustics and renewable energy engineering. We offer three degree specializations align within our research area: Sustainable building design and operation, renewable energy systems for buildings, and illumination engineering. Training in OpenStudio and EnergyPlus is provided in the context of graduate classes on building energy simulation and sustainable building design.","title":"Contact: Gregor P. Henze, Ph.D., P.E."},{"location":"about/training/#the-university-of-texas-at-tyler-tyler-tx","text":"","title":"The University of Texas at Tyler - Tyler, TX"},{"location":"about/training/#contact-nelson-fumo-phd","text":"The University of Texas at Tyler Department of Mechanical Engineering provides engineering education needed for the development of a professional career in a variety of industrial and business operations, from large corporations and government organizations to small consulting firms. OpenStudio is taught in the technical elective course Introduction to Building Energy Simulation.","title":"Contact: Nelson Fumo, Ph.D."},{"location":"getting_started/best_practices/","text":"Modeling Best Practices This page is a collection of best practices that have been developed over time and by experience. Following these best practices will help you avoid the issues that users experience most often. Another resource in development is the BEMcyclopedia . Please check the site for continued updates. General Save your model often and with different versions. Save multiple versions of your OpenStudio Model as you progress; this makes it easier to recover from an error and provides takeoff points for model variations. EnergyPlus is a detailed simulation engine, but you have to tell it how you want your building modeled. A common misunderstanding is that EnergyPlus will interpret \"voids\" between zones \"correctly.\" EnergyPlus does not compute heat transfer between zones if they do not share a surface, so you must input the shared surfaces and set appropriate boundary conditions. To correctly model air transfer between zones, you have to add input objects that describe the airflow between zones. To model daylight transmission between zones, you need to add interior windows. Just because a building looks right, does not mean it is modeled correctly; digging in to the IDF and looking at detailed results is the only way to determine that you have modeled your building correctly. When you import an IDF into OpenStudio, it may be altered as part of the import process. For example, if your windows are not in the same plane as their base surface, OpenStudio moves them into the base surface plane. There may be other changes as well. If you want to keep your raw IDF untouched, you should \"SaveAs\", either as soon as you import it, or before you import it. To rename objects, go to the OpenStudio Inspector. Do not alter the names in SketchUp's Entity Information dialog. The OpenStudio Inspector works on one object at a time. If you select multiple objects or surfaces and make a change, it will affect only one object. Guidelines for Spaces Spaces should be top-level objects. Do not combine multiple spaces into a group or component, or put a space under another group. Name your spaces to make large models easier to manage and search. You may want to name your surfaces and subsurfaces. Geometry within a space should be convex. Ideally, spaces, not just space surfaces, are also convex. After creating a new space or shading group, double-click the group to edit it. The Outliner or a keyboard shortcut can also be used to edit a zone, shading group, or interior partition group. Guidelines for Building Surfaces Do not group a selection of EnergyPlus surfaces or subsurfaces together. All surfaces under a zone should be ungrouped. Model exterior walls to the outside face of the wall. Draw interior walls to their centerlines if possible. You may, however, choose any edge, as long as you are consistent with adjacent zones. Surfaces for adjacent zones must not overlap each other. Divide a surface into two by drawing a line across the face. Try to avoid deleting a surface by erasing a shared edge with another surface. This does not update the subsurfaces of the deleted surface to point to the new base surface. If this becomes necessary, you can delete one edge of the subsurface to remove it and then redraw the edge to create a new subsurface assigned to the correct surface. As much as possible, you should avoid using curves (arcs or circles) to create your geometry. Curves and arcs will create faceted surfaces and increase simulation time. If you do use curves, set the segment count as low as possible. Before you extrude a curve in SketchUp, you can select it and right click to view the \"Entity Information\" window. There you can change the number of segments. If you want to make changes to curves via the Object Information window, you have to \"View Hidden Geometry\" to select individual facets. You cannot globally change the whole curve at once. Guidelines for Subsurfaces Do not place a subsurface (window or door) inside another subsurface. Do not place two subsurfaces against each other. Place a small space between them. Do not make a window the size of an entire base surface. Use SketchUp's Offset Tool to inset the sub-surface some nominal amount. Do not draw a subsurface that shares two edges with a base surface. This will create a new base surface. You can draw a window at the edge of wall, but not at the edge as well as the roof or floor. Delete a subsurface by either removing all the edges (one at a time) or by double-clicking to select the face and edges and then deleting. Do not delete the face only, as this leaves a visual hole in the base surface. Guidelines for Interior Partition Surfaces By default interior partition surfaces are included and converted to internal mass objects for EnergyPlus simulation. Adding a large number of interior partitions surfaces will increase your simulation runtime. If this is a concern, you can model similar internal mass objects within a space as a single larger object. Guidelines for Shading Surfaces Shading surfaces need to be drawn in their own group. This group can be outside or inside a zone. This is a change in behavior from previous versions where shading surfaces could be created as loose geometry in an EnergyPlus zone. By default EnergyPlus mirrors shading surfaces, so typically face orientation does not matter. In some cases, however, such as when you add PV to a shading surface, it must be oriented correctly. As with building surfaces, the darker side is the outward normal.","title":"Best Practices"},{"location":"getting_started/best_practices/#general","text":"Save your model often and with different versions. Save multiple versions of your OpenStudio Model as you progress; this makes it easier to recover from an error and provides takeoff points for model variations. EnergyPlus is a detailed simulation engine, but you have to tell it how you want your building modeled. A common misunderstanding is that EnergyPlus will interpret \"voids\" between zones \"correctly.\" EnergyPlus does not compute heat transfer between zones if they do not share a surface, so you must input the shared surfaces and set appropriate boundary conditions. To correctly model air transfer between zones, you have to add input objects that describe the airflow between zones. To model daylight transmission between zones, you need to add interior windows. Just because a building looks right, does not mean it is modeled correctly; digging in to the IDF and looking at detailed results is the only way to determine that you have modeled your building correctly. When you import an IDF into OpenStudio, it may be altered as part of the import process. For example, if your windows are not in the same plane as their base surface, OpenStudio moves them into the base surface plane. There may be other changes as well. If you want to keep your raw IDF untouched, you should \"SaveAs\", either as soon as you import it, or before you import it. To rename objects, go to the OpenStudio Inspector. Do not alter the names in SketchUp's Entity Information dialog. The OpenStudio Inspector works on one object at a time. If you select multiple objects or surfaces and make a change, it will affect only one object.","title":"General"},{"location":"getting_started/best_practices/#guidelines-for-spaces","text":"Spaces should be top-level objects. Do not combine multiple spaces into a group or component, or put a space under another group. Name your spaces to make large models easier to manage and search. You may want to name your surfaces and subsurfaces. Geometry within a space should be convex. Ideally, spaces, not just space surfaces, are also convex. After creating a new space or shading group, double-click the group to edit it. The Outliner or a keyboard shortcut can also be used to edit a zone, shading group, or interior partition group.","title":"Guidelines for Spaces"},{"location":"getting_started/best_practices/#guidelines-for-building-surfaces","text":"Do not group a selection of EnergyPlus surfaces or subsurfaces together. All surfaces under a zone should be ungrouped. Model exterior walls to the outside face of the wall. Draw interior walls to their centerlines if possible. You may, however, choose any edge, as long as you are consistent with adjacent zones. Surfaces for adjacent zones must not overlap each other. Divide a surface into two by drawing a line across the face. Try to avoid deleting a surface by erasing a shared edge with another surface. This does not update the subsurfaces of the deleted surface to point to the new base surface. If this becomes necessary, you can delete one edge of the subsurface to remove it and then redraw the edge to create a new subsurface assigned to the correct surface. As much as possible, you should avoid using curves (arcs or circles) to create your geometry. Curves and arcs will create faceted surfaces and increase simulation time. If you do use curves, set the segment count as low as possible. Before you extrude a curve in SketchUp, you can select it and right click to view the \"Entity Information\" window. There you can change the number of segments. If you want to make changes to curves via the Object Information window, you have to \"View Hidden Geometry\" to select individual facets. You cannot globally change the whole curve at once.","title":"Guidelines for Building Surfaces"},{"location":"getting_started/best_practices/#guidelines-for-subsurfaces","text":"Do not place a subsurface (window or door) inside another subsurface. Do not place two subsurfaces against each other. Place a small space between them. Do not make a window the size of an entire base surface. Use SketchUp's Offset Tool to inset the sub-surface some nominal amount. Do not draw a subsurface that shares two edges with a base surface. This will create a new base surface. You can draw a window at the edge of wall, but not at the edge as well as the roof or floor. Delete a subsurface by either removing all the edges (one at a time) or by double-clicking to select the face and edges and then deleting. Do not delete the face only, as this leaves a visual hole in the base surface.","title":"Guidelines for Subsurfaces"},{"location":"getting_started/best_practices/#guidelines-for-interior-partition-surfaces","text":"By default interior partition surfaces are included and converted to internal mass objects for EnergyPlus simulation. Adding a large number of interior partitions surfaces will increase your simulation runtime. If this is a concern, you can model similar internal mass objects within a space as a single larger object.","title":"Guidelines for Interior Partition Surfaces"},{"location":"getting_started/best_practices/#guidelines-for-shading-surfaces","text":"Shading surfaces need to be drawn in their own group. This group can be outside or inside a zone. This is a change in behavior from previous versions where shading surfaces could be created as loose geometry in an EnergyPlus zone. By default EnergyPlus mirrors shading surfaces, so typically face orientation does not matter. In some cases, however, such as when you add PV to a shading surface, it must be oriented correctly. As with building surfaces, the darker side is the outward normal.","title":"Guidelines for Shading Surfaces"},{"location":"getting_started/creating_your_model/","text":"Creating Your Model After completing the Introductory Tutorial , you can find additional information on using the OpenStudio Application by topic below. Envelope The building envelope is created using the either the integrated FloorspaceJS interface or the SketchUp OpenStudio Plug-in. Refer to the FloorspaceJS Interface Guide or the OpenStudio SketchUp Plug-in Interface Guide to learn more about the available interfaces and for creating OpenStudio geometry. Some information about the different capabilities of these geometry tools is also available on the Current Features page. Site Under site you can add the weather file, import design days, and set the year. You can set the day of the week the simulation should start or select a calendar year. Use a calendar year if you are going to calibrate the model with utility bills. The tab can also be used to configure and turn daylight savings time on and off. Above: Add weather file, select year, and import design days. Schedules To create and edit schedules in the OpenStudio Application go to the schedules tab. Check out the OpenStudio Application Interface Guide for an overview of the interface. Inspecting and Adjusting Schedule Sets A Schedule Set is a collection of schedules for building activities or elements. A schedule set can be applied to an entire building, a story, a space type, or an individual space. This sub-tab has two kinds of drop zones. You can drop schedule sets from My Model or Library into the bottom of the left pane, or you can drop individual schedules into the drop zones in the main body. Above: Create and edit schedule sets. Inspecting and Editing Ruleset Schedules This tab is a visual editor for Ruleset Schedules. As the name implies, a schedule consists of a series of rules. Each rule or profile can be applied for a specific date range and for specific days of the week. If two rules appear on the same day, the one with a higher priority is used. You can use the rule colors to visually scan the entire year in the calendar on the right of the body to see what rule is applied for a specific day. A new profile starts as a flat line. Double click to split the profile and then drag one segment up or down. Vertical sections can also be dragged left or right. Click Set Limits to change the vertical limits of your profile. To type precise values for a profile, mouse over the profile and enter a value with your keyboard. Although you can use Compact and other schedule types in your model, you can visualize and edit only Ruleset Schedules in the OpenStudio Application. The lower profile view is a navigation for when you are zoomed to 15-minute or 1-minute time steps. Above: An annotated screenshot of the schedules editing interface. Click image for a large view of the image. Constructions In an energy model, each surface must have a construction assigned. The construction determines the heat transfer through that surface. A construction set can be applied to an entire building, a story, a space type, or an individual space. Usually a majority of the exterior walls in a building will share the same construction. You can assign the exterior wall construction on the building level and that construction will be applied to all exterior walls. This will be the default construction, but you can still edit surfaces and subsurfaces that differ from the defaults. Construction Sets A Construction Set object is structured very much like the Schedule Set. It can contain constructions for different surface types and boundary conditions. Construction sets do not have to be complete sets. For example, you can have a construction set assigned to a story that has only an exterior wall. For the rest of the surface types, constructions will be inherited from the building object. Above: This screenshot shows an example of a construction set added from the library. Constructions The Constructions sub-tab lists construction objects that are in your model. You can drag additional constructions here from the library. Constructions download using the Online BCL window will appear in the library with a \"BCL\" flag. A construction consists of one or more material layers. You can add materials by dragging them from My Model or the Library to the drop zone. You can only add new materials to the bottom which represents the inside of the wall. You can delete any material by clicking the x next to the name. Above: Edit and create constructions on this tab. Materials Constructions are made of one or more layers of materials. The Materials sub-tab lets you inspect and edit those materials. There are various classes of material objects. When you add a new material, first select the heading for the type of material you want to add and then click the \"+\" icon at the bottom of the left pane. Different types of material will have different data fields available. Materials also have Measure Tags as optional inputs that are used by measures. Above: Edit and create materials on this tab. Internal Loads The Loads tab allows you to create and edit load definitions for the internal load objects you will use in your model. Types of loads are listed in the right panels. Select the type of load you want to create and hit the Plus button or drag a load definition from the library onto the drop zone in the lower right. Once you add a loads definition, it will be available to use from the My Model tab on the right panel. On the Space Type tab you can assign loads to a space type or directly to a space in the Facility tab, except for Water Use Equipment. Above: Edit and create internal loads on this tab. The types of loads that can be added in this tab follow: People Lights Luminaires Electric Equipment Gas Equipment Steam Equipment Other Equipment Internal Mass Water Use Equipment Internal mass is different from the other loads in that it does not use fuel; rather, it stores heat and then dissipates the heat over time. The inputs require a surface area assigned to a construction object. Water Use Equipment is also unique in that it takes schedules, and is not part of a space type. Water Use Equipment is applied in the HVAC Systems tab. Space Types Space types define specific spaces or groups of specific spaces in your model. Space types can define internal loads, schedule sets, and construction sets. The spaces inherit all objects of the space type. If you redefine a space type, or an underlying object, it will affect all spaces using that space type. The Space Types tab in the OpenStudio Application is organized into a grid view. You can look through all your space types and edit the settings. Above: The grid view provides a spreadsheet style layout. Editing Multiple Items You are now able to check rows and then select an item you want to apply to those rows. When you hit \"Apply to Selected\" the yellow selected item will be copied to the checked rows. Above: You can apply settings from one space to another using the Apply to Selected button at the top of the columns. General Rendering Color This feature can be adjusted in the SketchUp Plug-in as well and the color selected will be used in the other application as well. Above: Open the Choose Rendering Color dialogue by clicking the rendering color for any space type Default Construction and Schedule You can assign constructions and schedules to each space type that will be used whenever that space type is used in the model. Design Specification Outdoor Air This drop zone is located under the General button. Space Infiltration Design Flow Rates and Space Infiltration Effective Leakage Areas These can be added and edited under the General button by scrolling to the right. Drag-and-drop from library. Loads If you select the Loads button in the Space Type tab, you will see a drop zone to create new loads. You can have multiple loads of the same type. Above: Hit the Loads button to edit and view loads by space type. Click on the name of a component to inspect it, or delete the item, within the right panel Edit tab. The space types define loads such as lighting or electric equipment as simple area weighted power densities (e.g., W/ft2). However, you can add loads in several possible ways. For example, a space type could contain multiple types of lighting. You might define one lighting load for general lighting using a W/ft2 and then add another lighting load for decorative lighting using another watts per square foot. Measure Tags Measure Tags are used by scripts we call measures. Measure Tags identify intended use of space types and constructions for School and office AEDG measures. If you are not using measures you will not need to complete these. Custom Use the checkbox at the top of each column to select items that you want to have be part of the custom view in the grid. This allows you to compare important settings side-by-side. Downloading Components and Measures from the Building Component Library (BCL) In the OpenStudio Application you can download items directly from the BCL by going to the Components & Measures menu and choosing \"Find Measures\" or \"Find Components\". Your API key is available by registering on the BCL site and copying it from your account page. Above: Downloading components from the online BCL window The components are designed to provide data to the energy modeler and simplify the process of gathering inputs. Measures are scripts that can quickly alter your model or create different reports for viewing and checking your results. Learn more about measures in the About Measures section. Learn how to write your own custom measures . Using the Facility Tab The Facility tab includes settings for your building, stories, shading, and exterior equipment. The Building sub-tab contains top level (default) construction, schedule, or space type assignments, and sets the rotation of the building. Settings that customize each story, shading, and exterior equipment can edited within the remaining tabs. To view and edit the spaces in your model, use the Spaces tab below the Facility tab on the left. Above: A screenshot of the Facilities tab with the Building sub-tab selected. Above: This screenshot shows the contents of the Stories tab. You can add and edit story settings here. Spaces The Spaces tab lets you edit the spaces, and view the surfaces and sub-surfaces within those spaces. Use the horizontal tabs to inspect and edit space attributes. Properties Loads Surfaces Subsurfaces Interior Partitions Shading Each horizontal tab may have sub-buttons that hold additional settings. The available filters on each tab can help you find a particular space to edit. Some items are not editable within the Spaces tab. These items are within the Subsurfaces, Interior Partitions, and Shading tabs. These items have to be edited in the SketchUp Plug-in, Geometry tab, or using a measure. Above: The sub-buttons under the Properties tab are General, Airflow, and Custom. Above: The spaces in your model are listed with all their surfaces under the Surfaces tab. Above: The subsurfaces are organized under the space they belong, and the surface they are connected to is displayed. Thermal Zones OpenStudio's Thermal Zones parallel the EnergyPlus Zone. A thermal zone represents an isothermal volume of air that may have only one thermostat. The OpenStudio Thermal Zone forms the connection point between the air conditioned space and the HVAC equipment. Thermal zones can contain one or more spaces. An OpenStudio Space contains 3 dimensional geometry and thermal loads. When the OpenStudio Application performs an EnergyPlus simulation, the space objects associated with each thermal zone are geometrically combined, the space loads are averaged, and the ventilation rates from each space are added together. A thermostat must be defined before running an EnergyPlus simulations with connected HVAC systems. Zone equipment, thermostat, and humidistat settings can be viewed and edited on this tab. Click on the name of and item and you can inspect it in the right panel Edit tab on the right. Above: Screenshot of the OpenStudio Application thermal view with \"HVAC\" selected. Select the \"Cooling Sizing Parameters\" or \"Heating Sizing Parameters\" to edit those by thermal zone. Above: Screenshot of the OpenStudio Application thermal view with \"Heating Sizing Parameters\" selected. Air, Plant and Zone HVAC Systems The HVAC Systems tab is used to create, inspect, and edit air and plant loops. The green + at the top left is used to add template or empty loops, and the x next to it will delete them. The pull-down at the top right of the body is to select which loop to displayed. Hit the Green Plus button to add a loop. Above: Add an HVAC system to your model. When adding a template loop, there are images within the icon. For instance, a Packaged Rooftop VAV with Reheat has four images. From left to right they represent the type of cooling, heating, fan, and terminal unit, in the template. The example below has cold and hot water, a variable speed fan, and a hot water reheat terminal unit. The top half of the loop is for supply-side objects, the bottom half is for demand. Thermal Zones and other objects can be dragged onto drop zones or nodes. Optionally you can select the splitter or mixer to bring up a list of Thermal Zones, checking the ones you want included in the loop. OpenStudio Application names HVAC systems and components to match EnergyPlus. So if you are familiar with EnergyPlus you will be able to recognize components names, like FanConstantVolumeModel. Above: Annotated view of the HVAC interface. Above: Another way to add thermal zones, besides dragging them from \"My Model\", is to select the splitter or mixer and check the boxes on the right panel. Above: Select a component and edit it on the right panel Edit tab. Some components like the one above will have icons under the right panel Edit tab. The gear icons will let you edit the component's settings. Above: Select a component and adjust the connections, by hitting the link icon on the right panel Edit tab. Above: Select a component and adjust the controller, by hitting the dial icon on the right panel Edit tab. The control view is only available for the air loops. With an air loop selected in \"Layout\" view you can switch to \"Control\" view. In this view you can edit the time of operation, night cycle, supply air temperature, mechanical ventilation, and any availability managers that are dragged and dropped from the Library. Above: Control view only available for air loops. Cold Water Loop In the cold water loop the cooling coil that had been a supply side object on the air loop is now a demand object. The supply side has a pump and a water cooled chiller. The adiabatic pipes are a necessary part of the loop. There are no attributes to set for the pipes. You can click on the chiller to drill down further to the condenser loop. Or you can click on the cooling coil to go back to the air loop. Above: Click image to view a larger version. Condenser Loop In the condenser loop the chiller that had been a supply side object on the cold water loop is now a demand object. The supply side has a pump and a cooling tower. As with the cold water loop, the adiabatic pipes are a necessary part of the loop. You can click on the chiller to go back to the cold water loop. Above: Click image to view a larger version. Hot Water Loop In the hot water loop the heating coil that had been a supply side object on the air loop is now a demand object. The supply side has a pump and a boiler. The boiler can use a variety of fuels. The adiabatic pipes are a necessary part of the loop. There are no attributes to set for the pipes. You can click on the heating coil to go back to the air loop. The heating coils without links represent the reheat terminals for each connected thermal zone. Above: Click image to view a larger version. Return and Supply Plenums To add supply and return plenum zones: Access the plenum editor by selecting the zone on the layout view. Select the right panel Edit tab and click on the plenum icon on the blue bar. Choose a plenum from the drop down list or create a new plenum zone by selecting the Green Plus button. The zones available to be plenums will be selectable in a dialog. Create new zones for plenums in the Thermal Zones tab on the left. Shared plenums will be colored the same and will match the color selected for the plenum zone on the Thermal Zones tab. Above: Click image to view a larger version. Service Water Heating The first view into the HVAC Systems tab will be the water mains editor, which shows as \"Service Water\" on loops dropdown list. Water enters the system at the right and leave at the Sewer on the left. One or more water use connections can be added in the middle. Above: Service hot water interface. Click the image to view larger version. Clicking a water use connection will take you to a model window where you can add water use equipment. Above: Service hot water interface. Click the image to view larger version. Dragging a water use equipment object into the water use connection will create an instance of that definition. Much like lights, people and other loads, there is a fractional schedule to define usage patterns. Optionally you can associate the equipment with a space. There is no direct energy use to the space, but heat from the equipment will be added to the space. The equipment can be anything that uses water, hot or cold. The definition contains a peak flow rate and a target temperature schedule. Hot and cold water will mix to reach the target temperature at the fixture. Click the water main, sewer, or makeup water to go back to the water mains editor. If you have a plant loop associated with the water use connection the Loop button will take you to the loop. Refrigeration The refrigeration system interface can be accessed by selecting refrigeration from the drop down menu. To add a refrigeration system, select one from the library and drag it to the drop zone. Click on the Zoom button by the name of the refrigeration system to go to a view of that system, add components from the library. Above: Add refrigeration systems to your model under the HVAC Systems tab. Click image to view a larger version. This zoomed in view provides the layout view of one refrigeration rack. You may add refrigeration cases by dragging them on to the Drag and Drop Cases drop zone. Drop zones are provided to accommodate systems with a mechanical sub-cooler and a Suction Line Heat Exchanger (SLHX). The small arrow at the bottom of the refrigeration case summary will open an expanded view of cases. Each case can be selected and edited in the Edit panel on the right. Cascade systems can be added by dragging them from \"My Model\" or the \"Library\". Above: Single refrigeration system view. Click image to view a larger version. An alternate view of the refrigeration systems is provided by the grid view. The refrigeration grid view provides a method for entering case settings in a spreadsheet style. Cases can be added, assigned to racks, and edited in this view. There are two major divisions, one for Display Cases and another for Walk-ins. Under each division a drop box is available to add new cases. There are also buttons to move through the case settings and enter the data on each case. Click the shaded portion of any column headers that you want to view that column in the \"Custom\" category. Navigate to the created view by clicking the Custom button. No provision was made to delete a case or walk in within the grid view. To delete a case or walk in, assign it to a rack, then delete it from the layout view. VRF Systems Variable refrigerant flow (VRF) systems can be added by dragging them onto the large drop zone from the library. The layout view provides a view of all the VRF systems in the model. The zoom icon by the name of the system will open a detailed view of that system. Above: VRF system layout view. Click image to view a larger version. To create your VRF system, start by dropping a terminal from the \"Library\" onto the drop zone. Then add thermal zones from \"My Model\". When a thermal zone is added a new VRF terminal will automatically be created. Above: VRF system single system layout view. Click image to view a larger version. Set the terminal settings by selecting the terminal and editing in the right panel Edit tab. More than one terminal can connect with the same zone. Just drag the zone to the drop area again to add another connection. Apply Measure Now In addition to manually creating and editing your model, you can apply measures to your model live in the application. This allows you to customize your experience to your desired workflow. Measures can manipulate any part of the model and can also be used as a diagnostic tool. Above: Select \"Apply Measure Now\" from the menu. Above: Select measure. Above: Accept or cancel. Using the Measures Tab The measures selected on this tab will not run until you run your model, unlike the \"Apply Measure Now\" option. Download additional measures from The Building Component Library (BCL) . Drag measures from the library to the central panel. There are three types of measures: OpenStudio Measures are run on the OpenStudio Model file before it is converted to an EnergyPlus Input Data File (IDF). EnergyPlus Measures can be run on the IDF before it is handed to EnergyPlus. Reporting Measures produce reports to chart results, provide quality assurance, and quality control on models. Above: Select measures from the library and drag them into the correct drop zone. By selecting the measure and selecting the right panel Edit tab, inputs for the measure can be entered and adjusted. Above: Select a measure and edit the fields in the right panel. Lifecycle Costs The most basic parameters needed for a life cycle cost analysis are the analysis period length and the discount rate. A longer analysis period accumulates more energy cost savings than a shorter period; giving energy conservation measures a better pay back relative to their initial costs. A higher discount rate devalues future energy cost savings relative to money spent on capital improvements in the present; giving energy conservation measures a lower pay back relative to their initial costs. This tab allows users to set these parameters on their baseline model. With measures downloaded from the BCL, life cycle costs for different design alternatives can be calculated. Above: Add costs to measures to calculate and compare different options. This can also be done in the Parametric Analysis Tool. Calibration with Utility Bills Add utility bills for calibration on the Utility Bills tab under Site. First, you must select a weather file and a year before you can enter the bills. Select the type of utility on the left. Hit the Plus button to add bills. Name the Bill and complete the units fields. Select the billing period inputs and hit the plus sign to add a bill. To calibrate to the ASHRAE 14-2002 or FEMP standard the file must contain all utility data for one year and real weather data. Check the guidelines for additional requirements. Above: A screenshot of the Site Utility Bills sub-tab.","title":"Creating Your Model"},{"location":"getting_started/creating_your_model/#envelope","text":"The building envelope is created using the either the integrated FloorspaceJS interface or the SketchUp OpenStudio Plug-in. Refer to the FloorspaceJS Interface Guide or the OpenStudio SketchUp Plug-in Interface Guide to learn more about the available interfaces and for creating OpenStudio geometry. Some information about the different capabilities of these geometry tools is also available on the Current Features page.","title":"Envelope"},{"location":"getting_started/creating_your_model/#site","text":"Under site you can add the weather file, import design days, and set the year. You can set the day of the week the simulation should start or select a calendar year. Use a calendar year if you are going to calibrate the model with utility bills. The tab can also be used to configure and turn daylight savings time on and off. Above: Add weather file, select year, and import design days.","title":"Site"},{"location":"getting_started/creating_your_model/#schedules","text":"To create and edit schedules in the OpenStudio Application go to the schedules tab. Check out the OpenStudio Application Interface Guide for an overview of the interface.","title":"Schedules"},{"location":"getting_started/creating_your_model/#inspecting-and-adjusting-schedule-sets","text":"A Schedule Set is a collection of schedules for building activities or elements. A schedule set can be applied to an entire building, a story, a space type, or an individual space. This sub-tab has two kinds of drop zones. You can drop schedule sets from My Model or Library into the bottom of the left pane, or you can drop individual schedules into the drop zones in the main body. Above: Create and edit schedule sets.","title":"Inspecting and Adjusting Schedule Sets"},{"location":"getting_started/creating_your_model/#inspecting-and-editing-ruleset-schedules","text":"This tab is a visual editor for Ruleset Schedules. As the name implies, a schedule consists of a series of rules. Each rule or profile can be applied for a specific date range and for specific days of the week. If two rules appear on the same day, the one with a higher priority is used. You can use the rule colors to visually scan the entire year in the calendar on the right of the body to see what rule is applied for a specific day. A new profile starts as a flat line. Double click to split the profile and then drag one segment up or down. Vertical sections can also be dragged left or right. Click Set Limits to change the vertical limits of your profile. To type precise values for a profile, mouse over the profile and enter a value with your keyboard. Although you can use Compact and other schedule types in your model, you can visualize and edit only Ruleset Schedules in the OpenStudio Application. The lower profile view is a navigation for when you are zoomed to 15-minute or 1-minute time steps. Above: An annotated screenshot of the schedules editing interface. Click image for a large view of the image.","title":"Inspecting and Editing Ruleset Schedules"},{"location":"getting_started/creating_your_model/#constructions","text":"In an energy model, each surface must have a construction assigned. The construction determines the heat transfer through that surface. A construction set can be applied to an entire building, a story, a space type, or an individual space. Usually a majority of the exterior walls in a building will share the same construction. You can assign the exterior wall construction on the building level and that construction will be applied to all exterior walls. This will be the default construction, but you can still edit surfaces and subsurfaces that differ from the defaults.","title":"Constructions"},{"location":"getting_started/creating_your_model/#construction-sets","text":"A Construction Set object is structured very much like the Schedule Set. It can contain constructions for different surface types and boundary conditions. Construction sets do not have to be complete sets. For example, you can have a construction set assigned to a story that has only an exterior wall. For the rest of the surface types, constructions will be inherited from the building object. Above: This screenshot shows an example of a construction set added from the library.","title":"Construction Sets"},{"location":"getting_started/creating_your_model/#constructions_1","text":"The Constructions sub-tab lists construction objects that are in your model. You can drag additional constructions here from the library. Constructions download using the Online BCL window will appear in the library with a \"BCL\" flag. A construction consists of one or more material layers. You can add materials by dragging them from My Model or the Library to the drop zone. You can only add new materials to the bottom which represents the inside of the wall. You can delete any material by clicking the x next to the name. Above: Edit and create constructions on this tab.","title":"Constructions"},{"location":"getting_started/creating_your_model/#materials","text":"Constructions are made of one or more layers of materials. The Materials sub-tab lets you inspect and edit those materials. There are various classes of material objects. When you add a new material, first select the heading for the type of material you want to add and then click the \"+\" icon at the bottom of the left pane. Different types of material will have different data fields available. Materials also have Measure Tags as optional inputs that are used by measures. Above: Edit and create materials on this tab.","title":"Materials"},{"location":"getting_started/creating_your_model/#internal-loads","text":"The Loads tab allows you to create and edit load definitions for the internal load objects you will use in your model. Types of loads are listed in the right panels. Select the type of load you want to create and hit the Plus button or drag a load definition from the library onto the drop zone in the lower right. Once you add a loads definition, it will be available to use from the My Model tab on the right panel. On the Space Type tab you can assign loads to a space type or directly to a space in the Facility tab, except for Water Use Equipment. Above: Edit and create internal loads on this tab. The types of loads that can be added in this tab follow: People Lights Luminaires Electric Equipment Gas Equipment Steam Equipment Other Equipment Internal Mass Water Use Equipment Internal mass is different from the other loads in that it does not use fuel; rather, it stores heat and then dissipates the heat over time. The inputs require a surface area assigned to a construction object. Water Use Equipment is also unique in that it takes schedules, and is not part of a space type. Water Use Equipment is applied in the HVAC Systems tab.","title":"Internal Loads"},{"location":"getting_started/creating_your_model/#space-types","text":"Space types define specific spaces or groups of specific spaces in your model. Space types can define internal loads, schedule sets, and construction sets. The spaces inherit all objects of the space type. If you redefine a space type, or an underlying object, it will affect all spaces using that space type. The Space Types tab in the OpenStudio Application is organized into a grid view. You can look through all your space types and edit the settings. Above: The grid view provides a spreadsheet style layout.","title":"Space Types"},{"location":"getting_started/creating_your_model/#editing-multiple-items","text":"You are now able to check rows and then select an item you want to apply to those rows. When you hit \"Apply to Selected\" the yellow selected item will be copied to the checked rows. Above: You can apply settings from one space to another using the Apply to Selected button at the top of the columns.","title":"Editing Multiple Items"},{"location":"getting_started/creating_your_model/#general","text":"","title":"General"},{"location":"getting_started/creating_your_model/#rendering-color","text":"This feature can be adjusted in the SketchUp Plug-in as well and the color selected will be used in the other application as well. Above: Open the Choose Rendering Color dialogue by clicking the rendering color for any space type","title":"Rendering Color"},{"location":"getting_started/creating_your_model/#default-construction-and-schedule","text":"You can assign constructions and schedules to each space type that will be used whenever that space type is used in the model.","title":"Default Construction and Schedule"},{"location":"getting_started/creating_your_model/#design-specification-outdoor-air","text":"This drop zone is located under the General button.","title":"Design Specification Outdoor Air"},{"location":"getting_started/creating_your_model/#space-infiltration-design-flow-rates-and-space-infiltration-effective-leakage-areas","text":"These can be added and edited under the General button by scrolling to the right. Drag-and-drop from library.","title":"Space Infiltration Design Flow Rates and Space Infiltration Effective Leakage Areas"},{"location":"getting_started/creating_your_model/#loads","text":"If you select the Loads button in the Space Type tab, you will see a drop zone to create new loads. You can have multiple loads of the same type. Above: Hit the Loads button to edit and view loads by space type. Click on the name of a component to inspect it, or delete the item, within the right panel Edit tab. The space types define loads such as lighting or electric equipment as simple area weighted power densities (e.g., W/ft2). However, you can add loads in several possible ways. For example, a space type could contain multiple types of lighting. You might define one lighting load for general lighting using a W/ft2 and then add another lighting load for decorative lighting using another watts per square foot.","title":"Loads"},{"location":"getting_started/creating_your_model/#measure-tags","text":"Measure Tags are used by scripts we call measures. Measure Tags identify intended use of space types and constructions for School and office AEDG measures. If you are not using measures you will not need to complete these.","title":"Measure Tags"},{"location":"getting_started/creating_your_model/#custom","text":"Use the checkbox at the top of each column to select items that you want to have be part of the custom view in the grid. This allows you to compare important settings side-by-side.","title":"Custom"},{"location":"getting_started/creating_your_model/#downloading-components-and-measures-from-the-building-component-library-bcl","text":"In the OpenStudio Application you can download items directly from the BCL by going to the Components & Measures menu and choosing \"Find Measures\" or \"Find Components\". Your API key is available by registering on the BCL site and copying it from your account page. Above: Downloading components from the online BCL window The components are designed to provide data to the energy modeler and simplify the process of gathering inputs. Measures are scripts that can quickly alter your model or create different reports for viewing and checking your results. Learn more about measures in the About Measures section. Learn how to write your own custom measures .","title":"Downloading Components and Measures from the Building Component Library (BCL)"},{"location":"getting_started/creating_your_model/#using-the-facility-tab","text":"The Facility tab includes settings for your building, stories, shading, and exterior equipment. The Building sub-tab contains top level (default) construction, schedule, or space type assignments, and sets the rotation of the building. Settings that customize each story, shading, and exterior equipment can edited within the remaining tabs. To view and edit the spaces in your model, use the Spaces tab below the Facility tab on the left. Above: A screenshot of the Facilities tab with the Building sub-tab selected. Above: This screenshot shows the contents of the Stories tab. You can add and edit story settings here.","title":"Using the Facility Tab"},{"location":"getting_started/creating_your_model/#spaces","text":"The Spaces tab lets you edit the spaces, and view the surfaces and sub-surfaces within those spaces. Use the horizontal tabs to inspect and edit space attributes. Properties Loads Surfaces Subsurfaces Interior Partitions Shading Each horizontal tab may have sub-buttons that hold additional settings. The available filters on each tab can help you find a particular space to edit. Some items are not editable within the Spaces tab. These items are within the Subsurfaces, Interior Partitions, and Shading tabs. These items have to be edited in the SketchUp Plug-in, Geometry tab, or using a measure. Above: The sub-buttons under the Properties tab are General, Airflow, and Custom. Above: The spaces in your model are listed with all their surfaces under the Surfaces tab. Above: The subsurfaces are organized under the space they belong, and the surface they are connected to is displayed.","title":"Spaces"},{"location":"getting_started/creating_your_model/#thermal-zones","text":"OpenStudio's Thermal Zones parallel the EnergyPlus Zone. A thermal zone represents an isothermal volume of air that may have only one thermostat. The OpenStudio Thermal Zone forms the connection point between the air conditioned space and the HVAC equipment. Thermal zones can contain one or more spaces. An OpenStudio Space contains 3 dimensional geometry and thermal loads. When the OpenStudio Application performs an EnergyPlus simulation, the space objects associated with each thermal zone are geometrically combined, the space loads are averaged, and the ventilation rates from each space are added together. A thermostat must be defined before running an EnergyPlus simulations with connected HVAC systems. Zone equipment, thermostat, and humidistat settings can be viewed and edited on this tab. Click on the name of and item and you can inspect it in the right panel Edit tab on the right. Above: Screenshot of the OpenStudio Application thermal view with \"HVAC\" selected. Select the \"Cooling Sizing Parameters\" or \"Heating Sizing Parameters\" to edit those by thermal zone. Above: Screenshot of the OpenStudio Application thermal view with \"Heating Sizing Parameters\" selected.","title":"Thermal Zones"},{"location":"getting_started/creating_your_model/#air-plant-and-zone-hvac-systems","text":"The HVAC Systems tab is used to create, inspect, and edit air and plant loops. The green + at the top left is used to add template or empty loops, and the x next to it will delete them. The pull-down at the top right of the body is to select which loop to displayed. Hit the Green Plus button to add a loop. Above: Add an HVAC system to your model. When adding a template loop, there are images within the icon. For instance, a Packaged Rooftop VAV with Reheat has four images. From left to right they represent the type of cooling, heating, fan, and terminal unit, in the template. The example below has cold and hot water, a variable speed fan, and a hot water reheat terminal unit. The top half of the loop is for supply-side objects, the bottom half is for demand. Thermal Zones and other objects can be dragged onto drop zones or nodes. Optionally you can select the splitter or mixer to bring up a list of Thermal Zones, checking the ones you want included in the loop. OpenStudio Application names HVAC systems and components to match EnergyPlus. So if you are familiar with EnergyPlus you will be able to recognize components names, like FanConstantVolumeModel. Above: Annotated view of the HVAC interface. Above: Another way to add thermal zones, besides dragging them from \"My Model\", is to select the splitter or mixer and check the boxes on the right panel. Above: Select a component and edit it on the right panel Edit tab. Some components like the one above will have icons under the right panel Edit tab. The gear icons will let you edit the component's settings. Above: Select a component and adjust the connections, by hitting the link icon on the right panel Edit tab. Above: Select a component and adjust the controller, by hitting the dial icon on the right panel Edit tab. The control view is only available for the air loops. With an air loop selected in \"Layout\" view you can switch to \"Control\" view. In this view you can edit the time of operation, night cycle, supply air temperature, mechanical ventilation, and any availability managers that are dragged and dropped from the Library. Above: Control view only available for air loops.","title":"Air, Plant and Zone HVAC Systems"},{"location":"getting_started/creating_your_model/#cold-water-loop","text":"In the cold water loop the cooling coil that had been a supply side object on the air loop is now a demand object. The supply side has a pump and a water cooled chiller. The adiabatic pipes are a necessary part of the loop. There are no attributes to set for the pipes. You can click on the chiller to drill down further to the condenser loop. Or you can click on the cooling coil to go back to the air loop. Above: Click image to view a larger version.","title":"Cold Water Loop"},{"location":"getting_started/creating_your_model/#condenser-loop","text":"In the condenser loop the chiller that had been a supply side object on the cold water loop is now a demand object. The supply side has a pump and a cooling tower. As with the cold water loop, the adiabatic pipes are a necessary part of the loop. You can click on the chiller to go back to the cold water loop. Above: Click image to view a larger version.","title":"Condenser Loop"},{"location":"getting_started/creating_your_model/#hot-water-loop","text":"In the hot water loop the heating coil that had been a supply side object on the air loop is now a demand object. The supply side has a pump and a boiler. The boiler can use a variety of fuels. The adiabatic pipes are a necessary part of the loop. There are no attributes to set for the pipes. You can click on the heating coil to go back to the air loop. The heating coils without links represent the reheat terminals for each connected thermal zone. Above: Click image to view a larger version.","title":"Hot Water Loop"},{"location":"getting_started/creating_your_model/#return-and-supply-plenums","text":"To add supply and return plenum zones: Access the plenum editor by selecting the zone on the layout view. Select the right panel Edit tab and click on the plenum icon on the blue bar. Choose a plenum from the drop down list or create a new plenum zone by selecting the Green Plus button. The zones available to be plenums will be selectable in a dialog. Create new zones for plenums in the Thermal Zones tab on the left. Shared plenums will be colored the same and will match the color selected for the plenum zone on the Thermal Zones tab. Above: Click image to view a larger version.","title":"Return and Supply Plenums"},{"location":"getting_started/creating_your_model/#service-water-heating","text":"The first view into the HVAC Systems tab will be the water mains editor, which shows as \"Service Water\" on loops dropdown list. Water enters the system at the right and leave at the Sewer on the left. One or more water use connections can be added in the middle. Above: Service hot water interface. Click the image to view larger version. Clicking a water use connection will take you to a model window where you can add water use equipment. Above: Service hot water interface. Click the image to view larger version. Dragging a water use equipment object into the water use connection will create an instance of that definition. Much like lights, people and other loads, there is a fractional schedule to define usage patterns. Optionally you can associate the equipment with a space. There is no direct energy use to the space, but heat from the equipment will be added to the space. The equipment can be anything that uses water, hot or cold. The definition contains a peak flow rate and a target temperature schedule. Hot and cold water will mix to reach the target temperature at the fixture. Click the water main, sewer, or makeup water to go back to the water mains editor. If you have a plant loop associated with the water use connection the Loop button will take you to the loop.","title":"Service Water Heating"},{"location":"getting_started/creating_your_model/#refrigeration","text":"The refrigeration system interface can be accessed by selecting refrigeration from the drop down menu. To add a refrigeration system, select one from the library and drag it to the drop zone. Click on the Zoom button by the name of the refrigeration system to go to a view of that system, add components from the library. Above: Add refrigeration systems to your model under the HVAC Systems tab. Click image to view a larger version. This zoomed in view provides the layout view of one refrigeration rack. You may add refrigeration cases by dragging them on to the Drag and Drop Cases drop zone. Drop zones are provided to accommodate systems with a mechanical sub-cooler and a Suction Line Heat Exchanger (SLHX). The small arrow at the bottom of the refrigeration case summary will open an expanded view of cases. Each case can be selected and edited in the Edit panel on the right. Cascade systems can be added by dragging them from \"My Model\" or the \"Library\". Above: Single refrigeration system view. Click image to view a larger version. An alternate view of the refrigeration systems is provided by the grid view. The refrigeration grid view provides a method for entering case settings in a spreadsheet style. Cases can be added, assigned to racks, and edited in this view. There are two major divisions, one for Display Cases and another for Walk-ins. Under each division a drop box is available to add new cases. There are also buttons to move through the case settings and enter the data on each case. Click the shaded portion of any column headers that you want to view that column in the \"Custom\" category. Navigate to the created view by clicking the Custom button. No provision was made to delete a case or walk in within the grid view. To delete a case or walk in, assign it to a rack, then delete it from the layout view.","title":"Refrigeration"},{"location":"getting_started/creating_your_model/#vrf-systems","text":"Variable refrigerant flow (VRF) systems can be added by dragging them onto the large drop zone from the library. The layout view provides a view of all the VRF systems in the model. The zoom icon by the name of the system will open a detailed view of that system. Above: VRF system layout view. Click image to view a larger version. To create your VRF system, start by dropping a terminal from the \"Library\" onto the drop zone. Then add thermal zones from \"My Model\". When a thermal zone is added a new VRF terminal will automatically be created. Above: VRF system single system layout view. Click image to view a larger version. Set the terminal settings by selecting the terminal and editing in the right panel Edit tab. More than one terminal can connect with the same zone. Just drag the zone to the drop area again to add another connection.","title":"VRF Systems"},{"location":"getting_started/creating_your_model/#apply-measure-now","text":"In addition to manually creating and editing your model, you can apply measures to your model live in the application. This allows you to customize your experience to your desired workflow. Measures can manipulate any part of the model and can also be used as a diagnostic tool. Above: Select \"Apply Measure Now\" from the menu. Above: Select measure. Above: Accept or cancel.","title":"Apply Measure Now"},{"location":"getting_started/creating_your_model/#using-the-measures-tab","text":"The measures selected on this tab will not run until you run your model, unlike the \"Apply Measure Now\" option. Download additional measures from The Building Component Library (BCL) . Drag measures from the library to the central panel. There are three types of measures: OpenStudio Measures are run on the OpenStudio Model file before it is converted to an EnergyPlus Input Data File (IDF). EnergyPlus Measures can be run on the IDF before it is handed to EnergyPlus. Reporting Measures produce reports to chart results, provide quality assurance, and quality control on models. Above: Select measures from the library and drag them into the correct drop zone. By selecting the measure and selecting the right panel Edit tab, inputs for the measure can be entered and adjusted. Above: Select a measure and edit the fields in the right panel.","title":"Using the Measures Tab"},{"location":"getting_started/creating_your_model/#lifecycle-costs","text":"The most basic parameters needed for a life cycle cost analysis are the analysis period length and the discount rate. A longer analysis period accumulates more energy cost savings than a shorter period; giving energy conservation measures a better pay back relative to their initial costs. A higher discount rate devalues future energy cost savings relative to money spent on capital improvements in the present; giving energy conservation measures a lower pay back relative to their initial costs. This tab allows users to set these parameters on their baseline model. With measures downloaded from the BCL, life cycle costs for different design alternatives can be calculated. Above: Add costs to measures to calculate and compare different options. This can also be done in the Parametric Analysis Tool.","title":"Lifecycle Costs"},{"location":"getting_started/creating_your_model/#calibration-with-utility-bills","text":"Add utility bills for calibration on the Utility Bills tab under Site. First, you must select a weather file and a year before you can enter the bills. Select the type of utility on the left. Hit the Plus button to add bills. Name the Bill and complete the units fields. Select the billing period inputs and hit the plus sign to add a bill. To calibrate to the ASHRAE 14-2002 or FEMP standard the file must contain all utility data for one year and real weather data. Check the guidelines for additional requirements. Above: A screenshot of the Site Utility Bills sub-tab.","title":"Calibration with Utility Bills"},{"location":"getting_started/getting_started/","text":"Installation and Introductory Tutorial This page walks you through installing the OpenStudio Application, the basics of its suite of applications, and the fundamental workflow. Installation Instructions OpenStudio Application is supported on 64-bit versions of Windows, OS X, and Ubuntu. OpenStudio Application is supported on 64-bit ARM versions of OS X. Each OpenStudio Application release supports the latest EnergyPlus release which is bundled with the OpenStudio Application installer. Check the version compatibility-matrix for more details about each version. Installation Steps Download and install OpenStudio Application Download the latest release of OpenStudio Application here . Choose the installer that matches your operating system. The OpenStudio Application package contains the following components: OpenStudio Application EnergyPlus Ruby API C# API Command Line Interface Radiance Application Resources Optional - Download and install SketchUp and the Openstudio SketchUp Plug-in here There are a few options for generating geometry for the OpenStudio Application, including the built-in FloorspaceJS interface. One option is to use the OpenStudio Sketchup Plug-in. To use the plug-in: Download and install SketchUp , only the Pro or Studio versions of SketchUp are compatible . Check the version compatibility-matrix to see which versions of SketchUp and the OpenStudio SketchUp Plug-in are compatible with the installed version of the OpenStudio Application. Download the OpenStudio SketchUp Plug-in RBZ package here . Follow the Installing extensions manually in SketchUp Preferences to install the Plug-in. Optional - Setup a Building Component Library (BCL) Account Building Component Library (BCL) content can now be accessed from within the OpenStudio SketchUp Plug-in and from the standalone OpenStudio Application without a BCL key. Optional - Install Parametric Analysis Tool (PAT) Download the latest release of PAT here (not available for Linux). Workflow Overview The typical OpenStudio Application workflow is shown in the diagram below. About: Click on the diagram above to view a larger version. Data Viewer is used to view simulation results. The section within documentation for Running Simulation & Viewing Results has information on using Data Viewer . The Parametric Analysis Tool Interface Guide provides an introduction to the interface and workflow for creating multiple design alternatives from a seed model. Introductory Tutorial The tutorial below was created before the grid view was added to the Space Types and Thermal Zones tabs. Grid view allows you to view and edit more than one space type or thermal zone at a time. Go to the OpenStudio Application Interface Guide to learn more about grid view. Selecting a Library for Constructions, Loads, and Schedules Libraries that are included with the OpenStudio Application contain data for constructions, loads, and schedules for 6 vintages across all U.S. climate zones. They also contain data for 9 vintages specific to DEER. The Libraries do not contain any geometry. Load libraries by using the menu under File/Load Library . Then select your vintage from the default file set. The Library data is organized such that you can access specific constructions and loads, or you can apply construction sets and space types that contain whole packages of subsequent dependent characteristics. For example a Library Space Type contains several specific loads and associated schedules for that space type, all of which become part of your model if you add the Space Type to your model. You can also load previously generated models as Libraries through the File/Load Library menu by navigating to any OpenStudio Model file from the browser window that pops up. It can take a few minutes to load. Above: Load a new Library using the menu. It is good practice to regularly clear the Libraries that load when the OpenStudio Application opens by using the menu under Preferences/Change Default Libraries and selecting Restore Defaults . If the OpenStudio Application is loading several Libraries it will slow down significantly. Vintages: DOE reference (Pre-1980, 1980-2004) ASHRAE standard (189.1-2009, 90.1-2004, 90.1-2007, 90.1-2010, 90.1-2013) DEER (pre-1975, 1985, 1996, 2003, 2007, 2011, 2014, 2015, 2017) Climate Zones: 1 - 8 FloorspaceJS - Building Envelope For additional information on the integrated FloorspaceJS interface, go to the FloorspaceJS Interface Guide SketchUp Plug-in - Building Envelope For additional information on the SketchUp Plug-in interface, go to the OpenStudio SketchUp Plug-in Interface Guide .","title":"Installation and Introductory Tutorial"},{"location":"getting_started/getting_started/#installation-instructions","text":"OpenStudio Application is supported on 64-bit versions of Windows, OS X, and Ubuntu. OpenStudio Application is supported on 64-bit ARM versions of OS X. Each OpenStudio Application release supports the latest EnergyPlus release which is bundled with the OpenStudio Application installer. Check the version compatibility-matrix for more details about each version.","title":"Installation Instructions"},{"location":"getting_started/getting_started/#installation-steps","text":"Download and install OpenStudio Application Download the latest release of OpenStudio Application here . Choose the installer that matches your operating system. The OpenStudio Application package contains the following components: OpenStudio Application EnergyPlus Ruby API C# API Command Line Interface Radiance Application Resources Optional - Download and install SketchUp and the Openstudio SketchUp Plug-in here There are a few options for generating geometry for the OpenStudio Application, including the built-in FloorspaceJS interface. One option is to use the OpenStudio Sketchup Plug-in. To use the plug-in: Download and install SketchUp , only the Pro or Studio versions of SketchUp are compatible . Check the version compatibility-matrix to see which versions of SketchUp and the OpenStudio SketchUp Plug-in are compatible with the installed version of the OpenStudio Application. Download the OpenStudio SketchUp Plug-in RBZ package here . Follow the Installing extensions manually in SketchUp Preferences to install the Plug-in. Optional - Setup a Building Component Library (BCL) Account Building Component Library (BCL) content can now be accessed from within the OpenStudio SketchUp Plug-in and from the standalone OpenStudio Application without a BCL key. Optional - Install Parametric Analysis Tool (PAT) Download the latest release of PAT here (not available for Linux).","title":"Installation Steps"},{"location":"getting_started/getting_started/#workflow-overview","text":"The typical OpenStudio Application workflow is shown in the diagram below. About: Click on the diagram above to view a larger version. Data Viewer is used to view simulation results. The section within documentation for Running Simulation & Viewing Results has information on using Data Viewer . The Parametric Analysis Tool Interface Guide provides an introduction to the interface and workflow for creating multiple design alternatives from a seed model.","title":"Workflow Overview"},{"location":"getting_started/getting_started/#introductory-tutorial","text":"The tutorial below was created before the grid view was added to the Space Types and Thermal Zones tabs. Grid view allows you to view and edit more than one space type or thermal zone at a time. Go to the OpenStudio Application Interface Guide to learn more about grid view.","title":"Introductory Tutorial"},{"location":"getting_started/getting_started/#selecting-a-library-for-constructions-loads-and-schedules","text":"Libraries that are included with the OpenStudio Application contain data for constructions, loads, and schedules for 6 vintages across all U.S. climate zones. They also contain data for 9 vintages specific to DEER. The Libraries do not contain any geometry. Load libraries by using the menu under File/Load Library . Then select your vintage from the default file set. The Library data is organized such that you can access specific constructions and loads, or you can apply construction sets and space types that contain whole packages of subsequent dependent characteristics. For example a Library Space Type contains several specific loads and associated schedules for that space type, all of which become part of your model if you add the Space Type to your model. You can also load previously generated models as Libraries through the File/Load Library menu by navigating to any OpenStudio Model file from the browser window that pops up. It can take a few minutes to load. Above: Load a new Library using the menu. It is good practice to regularly clear the Libraries that load when the OpenStudio Application opens by using the menu under Preferences/Change Default Libraries and selecting Restore Defaults . If the OpenStudio Application is loading several Libraries it will slow down significantly. Vintages: DOE reference (Pre-1980, 1980-2004) ASHRAE standard (189.1-2009, 90.1-2004, 90.1-2007, 90.1-2010, 90.1-2013) DEER (pre-1975, 1985, 1996, 2003, 2007, 2011, 2014, 2015, 2017) Climate Zones: 1 - 8","title":"Selecting a Library for Constructions, Loads, and Schedules"},{"location":"getting_started/getting_started/#floorspacejs-building-envelope","text":"For additional information on the integrated FloorspaceJS interface, go to the FloorspaceJS Interface Guide","title":"FloorspaceJS - Building Envelope"},{"location":"getting_started/getting_started/#sketchup-plug-in-building-envelope","text":"For additional information on the SketchUp Plug-in interface, go to the OpenStudio SketchUp Plug-in Interface Guide .","title":"SketchUp Plug-in - Building Envelope"},{"location":"getting_started/large_scale_analysis/","text":"Large Scale Analysis Although building energy modeling has been common for many years, large-scale analyses have more recently become achievable for more users with access to affordable and vast computing power in the cloud. Recently, the OpenStudio Parametric Analysis Tool was enhanced, allowing users to launch their own cloud resources to run a large number of simulations. The Parametric Analysis Tool (PAT) now exports a spreadsheet format compatible with the OpenStudio-analysis-spreadsheet project for running large parametric analyses using cloud resources. Go to the GitHub repository for information and code for the analysis spreadsheet. There are instructions and examples on the GitHub site. The Workflow Build your baseline model with the OpenStudio Application Manipulate the Model with measures Run basic parametrics via PAT Export a spreadsheet view from PAT Fill in ranges, distributions, defaults, algorithms, objective functions Large Analyses via OpenStudio-Server Start Cluster Upload Data: Measures Variables Seed Model Weather Data Simulation Executive Runs Analysis Browse Results and Download Files Everything has a JSON-based API to access data programmatically Download results in CSV or R dataframe Starting OpenStudio's Cloud gem install bundler git clone https://github.com/NREL/OpenStudio-analysis-spreadsheet.git bundle install Export Spreadsheet Select the measures you want to use in the analysis and export a spreadsheet by selecting that option under the File menu. Edit the Template Spreadsheet After exporting the spreadsheet from PAT, open the spreadsheet in Excel to edit fields. Above: Click to see a larger screenshot of the spreadsheet. Running OpenStudio's Cloud rake run Buildings Specific Chef Cookbooks Provisioning ensures that the appropriate tools are ready on the server, that there are consistent images across platforms, and makes it easier to test and deploy. The OpenStudio Server uses Chef to help automate the workflow. Chef Documentation OpenStudio - https://github.com/NREL-cookbooks/openstudio EnergyPlus - https://github.com/NREL-cookbooks/energyplus Radiance - https://github.com/NREL-cookbooks/radiance R - https://github.com/NREL-cookbooks/cookbook-r Server Architecture Publications A GRAPHICAL TOOL FOR CLOUD-BASED BUILDING ENERGY SIMULATION (PDF) SCALING BUILDING ENERGY MODELING HORIZONTALLY IN THE CLOUD WITH OPENSTUDIO (PDF).","title":"Large Scale Analysis"},{"location":"getting_started/large_scale_analysis/#the-workflow","text":"Build your baseline model with the OpenStudio Application Manipulate the Model with measures Run basic parametrics via PAT Export a spreadsheet view from PAT Fill in ranges, distributions, defaults, algorithms, objective functions Large Analyses via OpenStudio-Server Start Cluster Upload Data: Measures Variables Seed Model Weather Data Simulation Executive Runs Analysis Browse Results and Download Files Everything has a JSON-based API to access data programmatically Download results in CSV or R dataframe","title":"The Workflow"},{"location":"getting_started/large_scale_analysis/#starting-openstudios-cloud","text":"gem install bundler git clone https://github.com/NREL/OpenStudio-analysis-spreadsheet.git bundle install","title":"Starting OpenStudio's Cloud"},{"location":"getting_started/large_scale_analysis/#export-spreadsheet","text":"Select the measures you want to use in the analysis and export a spreadsheet by selecting that option under the File menu.","title":"Export Spreadsheet"},{"location":"getting_started/large_scale_analysis/#edit-the-template-spreadsheet","text":"After exporting the spreadsheet from PAT, open the spreadsheet in Excel to edit fields. Above: Click to see a larger screenshot of the spreadsheet.","title":"Edit the Template Spreadsheet"},{"location":"getting_started/large_scale_analysis/#running-openstudios-cloud","text":"rake run","title":"Running OpenStudio's Cloud"},{"location":"getting_started/large_scale_analysis/#buildings-specific-chef-cookbooks","text":"Provisioning ensures that the appropriate tools are ready on the server, that there are consistent images across platforms, and makes it easier to test and deploy. The OpenStudio Server uses Chef to help automate the workflow. Chef Documentation OpenStudio - https://github.com/NREL-cookbooks/openstudio EnergyPlus - https://github.com/NREL-cookbooks/energyplus Radiance - https://github.com/NREL-cookbooks/radiance R - https://github.com/NREL-cookbooks/cookbook-r","title":"Buildings Specific Chef Cookbooks"},{"location":"getting_started/large_scale_analysis/#server-architecture","text":"","title":"Server Architecture"},{"location":"getting_started/large_scale_analysis/#publications","text":"A GRAPHICAL TOOL FOR CLOUD-BASED BUILDING ENERGY SIMULATION (PDF) SCALING BUILDING ENERGY MODELING HORIZONTALLY IN THE CLOUD WITH OPENSTUDIO (PDF).","title":"Publications"},{"location":"getting_started/running_your_simulation/","text":"Running Simulations & Viewing Results These guides provide a handy reference to the features of the applications that are installed with the OpenStudio Application. Weather File and Design Days Add weather files in the OpenStudio application under the Site tab (first vertical tab) on the left and the Weather File & Design Days sub-tab across the top. You can download weather files on the EnergyPlus site. Above: Screenshot of browsing for design day file. Requesting Output Variables To select an output variable turn the toggle button to show a blue on. Then set the detail level you want from the drop down menu. Above: Screenshot of selecting output variables. You can also choose variables to collect data on by using the Add Output Variable measure after downloading it from the BCL . Above: Screenshot of the variable measure being added to a project. Just type in the variable you want to collect. This will return the variable's value for all associated objects within the model. To get the variable's value for a specific object, enter the full name of this object. Running a Simulation To run your simulation click the green Run button. Above: The progress bar displays the status of the run. Looking at Results Standard OpenStudio Results are provided with your run. Learn more about the OpenStudio Standard Results measure in our References Section . Above: This screenshot shows an example of the standard OpenStudio Results. Above: This is another chart available in the standard OpenStudio Results. You can also use measures to add additional reports. For instance, you can download the calibration report measure from the BCL . This measure allows you to view simulation results that are associated with any added utility bills. Another option available for adding additional reports is the generation of custom reports. These are created by writing your own measures. Downloaded or created reporting measures are applied within the OpenStudio Application Measures tab. Above: The calibration report compares utility bills with the model. Using Data Viewer Data Viewer (DView) displays time series results, which are produced from EnergyPlus report variable requests. It reads the SQLite database of the EnergyPlus engine and presents the time series data using line plots and heat maps. Furthermore, additional graphical/tabular formats can be harnessed to visualize simulation variables that are independent of time. Learn more about DView using guides created by researchers at the National Renewable Energy Laboratory .","title":"Running Simulations & Viewing Results"},{"location":"getting_started/running_your_simulation/#weather-file-and-design-days","text":"Add weather files in the OpenStudio application under the Site tab (first vertical tab) on the left and the Weather File & Design Days sub-tab across the top. You can download weather files on the EnergyPlus site. Above: Screenshot of browsing for design day file.","title":"Weather File and Design Days"},{"location":"getting_started/running_your_simulation/#requesting-output-variables","text":"To select an output variable turn the toggle button to show a blue on. Then set the detail level you want from the drop down menu. Above: Screenshot of selecting output variables. You can also choose variables to collect data on by using the Add Output Variable measure after downloading it from the BCL . Above: Screenshot of the variable measure being added to a project. Just type in the variable you want to collect. This will return the variable's value for all associated objects within the model. To get the variable's value for a specific object, enter the full name of this object.","title":"Requesting Output Variables"},{"location":"getting_started/running_your_simulation/#running-a-simulation","text":"To run your simulation click the green Run button. Above: The progress bar displays the status of the run.","title":"Running a Simulation"},{"location":"getting_started/running_your_simulation/#looking-at-results","text":"Standard OpenStudio Results are provided with your run. Learn more about the OpenStudio Standard Results measure in our References Section . Above: This screenshot shows an example of the standard OpenStudio Results. Above: This is another chart available in the standard OpenStudio Results. You can also use measures to add additional reports. For instance, you can download the calibration report measure from the BCL . This measure allows you to view simulation results that are associated with any added utility bills. Another option available for adding additional reports is the generation of custom reports. These are created by writing your own measures. Downloaded or created reporting measures are applied within the OpenStudio Application Measures tab. Above: The calibration report compares utility bills with the model.","title":"Looking at Results"},{"location":"getting_started/running_your_simulation/#using-data-viewer","text":"Data Viewer (DView) displays time series results, which are produced from EnergyPlus report variable requests. It reads the SQLite database of the EnergyPlus engine and presents the time series data using line plots and heat maps. Furthermore, additional graphical/tabular formats can be harnessed to visualize simulation variables that are independent of time. Learn more about DView using guides created by researchers at the National Renewable Energy Laboratory .","title":"Using Data Viewer"},{"location":"getting_started/troubleshooting/","text":"Troubleshooting This page is a collection of troubleshooting advice that helps users deal with common issues. OpenStudio SketchUp Plug-in Does Not Load For the OpenStudio Application 1.0.0, ensure that your are working with SketchUp Pro 2019. Try opening the \"Window->Preferences->Extensions\" window in SketchUp, enable the OpenStudio SketchUp Plug-in if it is listed. If the OpenStudio SketchUp Plug-in is not listed you may have to manually install it (this is the case if you are using a different version of SketchUp than the OpenStudio Installer targets). To install the OpenStudio SketchUp Plug-in manually on Windows please copy the files in: C:\\openstudio-%VERSION%\\SketchUpPlugin\\plugin\\ to: C:\\Users\\%YOURUSERNAME%\\AppData\\Roaming\\SketchUp\\SketchUp %VERSION%\\SketchUp\\Plugins\\ where %YOURUSERNAME% is replaced by your user name and %VERSION% is the version of the software you are using. To install the OpenStudio SketchUp Plug-in manually on macOS please copy the files in: /Applications/OpenStudio-%VERSION%/SketchUpPlugin/plugin/ to: ~/Library/Application Support/SketchUp %VERSION%/SketchUp/Plugins/ where %VERSION% is the version of the software you are using. Model Will Not Open in OpenStudio SketchUp Plug-in If you have an OpenStudio Model file (0SM file) that will not open, or opens incorrectly in the SketchUp Plug-in, then running the \"OSM Diagnostic Script\" can help identify the problem objects and create a new diagnostic copy of your file. This script creates a report identifying problem objects, and saves a new copy of your file leaving the original untouched. To run the script, go to the \"Extensions->OpenStudio User Scripts->Reports\" menu and choose \"OSM Diagnostic Script\". SketchUp Crashes on Launch The first thing to do is to remove SketchUp and install it again. To do this, run the SketchUp uninstaller. Also check that all OpenStudio Plug-ins are removed from the SketchUp plugin directories. On Windows these directories are: C:\\Users\\%YOURUSERNAME%\\AppData\\Roaming\\SketchUp\\SketchUp %VERSION%\\SketchUp\\Plugins C:\\ProgramData\\SketchUp\\SketchUp %VERSION%\\SketchUp\\Plugins C:\\Program Files\\SketchUp\\SketchUp %VERSION%\\SketchUp\\Plugins On Mac these are: ~/Library/Application Support/SketchUp %VERSION%/SketchUp/Plugins/ /Library/Application Support/SketchUp %VERSION%/SketchUp/Plugins If SketchUp crashes without the OpenStudio SketchUp Plug-in installed then something else is wrong, contact the SketchUp support team for help. Check that your system meets the SketchUp Hardware and Software Requirements . If SketchUp launches, try installing OpenStudio Plugin again. If SketchUp crashes on launch again, remove the OpenStudio Plugin files from the SketchUp plugin directories again. Open SketchUp, go to \"Window->Preferences->Extensions\" and disable the OpenStudio SketchUp Plug-in. Re-install OpenStudio Plugin and relaunch SketchUp. Open the Ruby console by going to \"Window->Ruby Console\" and then go back to \"Window->Preferences->Extensions\" and enable the OpenStudio SketchUp Plug-in, you may see useful output in the Ruby console. If you have other extensions installed, try disabling them and enabling the OpenStudio SketchUp Plug-in. If none of the steps above work and you are on Windows, it is likely that there is a dynamic library being loaded from another application that is interfering with the OpenStudio Application. If you just want to fix your problem, try copying the files libeay32.dll and ssleay32.dll from C:\\openstudio-%VERSION%\\bin to C:\\Program Files \\SketchUp\\SketchUp %VERSION% , this will fix the problem 80% of the time. If you want to investigate in more depth, download Dependency Walker . Extract the files and launch depends.exe. Navigate to \"File->Open\" and then browse to choose the SketchUp.exe under C:\\Program Files \\SketchUp\\SketchUp %VERSION% . This will examine all of the libraries loaded by SketchUp but not the libraries loaded by the OpenStudio Plugin. Navigate to \"Profile->Start Profiling\" then press Ok in the dialog that pops up. This will launch SketchUp and attempt to load the OpenStudio Plugin. Scroll down in the list of loaded libraries and look for the OpenStudio dlls. Expand the paths under the OpenStudio dlls and look for libraries that are being loaded from other locations. Often, some other program will install a different version of one of the libraries (usually libeay32.dll or ssleay32.dll) that OpenStudio uses. This other library will be in the path ahead of OpenStudio and will be loaded instead, this results in a hard crash of SketchUp. Correcting your path or copying the dlls from the OpenStudio bin directory into the SketchUp install directory will cause the correct dlls to be loaded when SketchUp starts. OpenStudio Application and SketchUp Plug-in Crash Several users have reported an OpenStudio Application and OpenStudio SketchUp Plug-in crash occurring when saving or opening a file is related to the Dell Backup and Recovery software. It appears that this program is known to cause issues with Qt based applications (such as OpenStudio). Graphics Problems in OpenStudio Application Several users have reported graphics issues with the Geometry and Results Summary tabs within the OpenStudio Application. In many cases, adjusting power saving settings of the graphics cards has resolved these issues. For computers with NVIDA graphics cards, you can access these settings via the NVIDIA Control Panel under \"3D Settings->Manage 3D Settings\". In this panel, make sure that \"Preferred graphics processor\" is set to \"High-performance NVIDIA processor\". Additionally, you may be able to find more information by running the OpenStudio Application from a command prompt and capturing the standard output in a file: set OPENSTUDIO_APPLICATION_DEBUG=1 C:\\openstudio-%VERSION%\\bin\\OpenStudioApp.exe > out.txt 2>&1 Orphan Objects and Unused Resources At times OpenStudio objects that should have a parent, such as surfaces and internal load instances, may become detached from their parent. Possibly the parent is deleted but for some reason the child is not. These often are not visible in the GUI, and while it is possible to fix remove these orphans with a text editor it isn't ideal. To provide a better workflow for this we created a measure Remove Orphan Objects and Unused Resources that can be run either using the Apply Measure Now feature or at run time. If you see an EnergyPlus error about an object you don't think you have in your model, you may try running this to clean up the model. Additionally this measure also provides checkboxes that allow you to remove unused resources. While unused resources can be cleaned up in the GUI, the measure provides a robust and quick way to do this. Over time we will increase the functionality of the orphan cleanup as well as purging of unused resources. Below is a screenshot of what the measure looks like in the Apply Measure Now window. By default the remove unused objects boxes are un-checked. You will always get the remove orphan functionality. Below is a screenshot of the log after running the measure. The log will list each section being checked, so as the functionality is expanded you will know what object types are being checked for for orphan. Energy Modeling Forum Post your questions to the forum below for general and OpenStudio specific energy modeling information. Unmet Hours Submit a Bug Please let us know if you find a bug in the OpenStudio software. Submit an OpenStudio Application Bug Submit an OpenStudio SketchUp Plugin Bug Useful SketchUp Links SketchUp's On-Line Help Forum for SketchUp Google's user forum for SketchUp SketchUcation's SketchUp forum","title":"Troubleshooting"},{"location":"getting_started/troubleshooting/#openstudio-sketchup-plug-in-does-not-load","text":"For the OpenStudio Application 1.0.0, ensure that your are working with SketchUp Pro 2019. Try opening the \"Window->Preferences->Extensions\" window in SketchUp, enable the OpenStudio SketchUp Plug-in if it is listed. If the OpenStudio SketchUp Plug-in is not listed you may have to manually install it (this is the case if you are using a different version of SketchUp than the OpenStudio Installer targets). To install the OpenStudio SketchUp Plug-in manually on Windows please copy the files in: C:\\openstudio-%VERSION%\\SketchUpPlugin\\plugin\\ to: C:\\Users\\%YOURUSERNAME%\\AppData\\Roaming\\SketchUp\\SketchUp %VERSION%\\SketchUp\\Plugins\\ where %YOURUSERNAME% is replaced by your user name and %VERSION% is the version of the software you are using. To install the OpenStudio SketchUp Plug-in manually on macOS please copy the files in: /Applications/OpenStudio-%VERSION%/SketchUpPlugin/plugin/ to: ~/Library/Application Support/SketchUp %VERSION%/SketchUp/Plugins/ where %VERSION% is the version of the software you are using.","title":"OpenStudio SketchUp Plug-in Does Not Load"},{"location":"getting_started/troubleshooting/#model-will-not-open-in-openstudio-sketchup-plug-in","text":"If you have an OpenStudio Model file (0SM file) that will not open, or opens incorrectly in the SketchUp Plug-in, then running the \"OSM Diagnostic Script\" can help identify the problem objects and create a new diagnostic copy of your file. This script creates a report identifying problem objects, and saves a new copy of your file leaving the original untouched. To run the script, go to the \"Extensions->OpenStudio User Scripts->Reports\" menu and choose \"OSM Diagnostic Script\".","title":"Model Will Not Open in OpenStudio SketchUp Plug-in"},{"location":"getting_started/troubleshooting/#sketchup-crashes-on-launch","text":"The first thing to do is to remove SketchUp and install it again. To do this, run the SketchUp uninstaller. Also check that all OpenStudio Plug-ins are removed from the SketchUp plugin directories. On Windows these directories are: C:\\Users\\%YOURUSERNAME%\\AppData\\Roaming\\SketchUp\\SketchUp %VERSION%\\SketchUp\\Plugins C:\\ProgramData\\SketchUp\\SketchUp %VERSION%\\SketchUp\\Plugins C:\\Program Files\\SketchUp\\SketchUp %VERSION%\\SketchUp\\Plugins On Mac these are: ~/Library/Application Support/SketchUp %VERSION%/SketchUp/Plugins/ /Library/Application Support/SketchUp %VERSION%/SketchUp/Plugins If SketchUp crashes without the OpenStudio SketchUp Plug-in installed then something else is wrong, contact the SketchUp support team for help. Check that your system meets the SketchUp Hardware and Software Requirements . If SketchUp launches, try installing OpenStudio Plugin again. If SketchUp crashes on launch again, remove the OpenStudio Plugin files from the SketchUp plugin directories again. Open SketchUp, go to \"Window->Preferences->Extensions\" and disable the OpenStudio SketchUp Plug-in. Re-install OpenStudio Plugin and relaunch SketchUp. Open the Ruby console by going to \"Window->Ruby Console\" and then go back to \"Window->Preferences->Extensions\" and enable the OpenStudio SketchUp Plug-in, you may see useful output in the Ruby console. If you have other extensions installed, try disabling them and enabling the OpenStudio SketchUp Plug-in. If none of the steps above work and you are on Windows, it is likely that there is a dynamic library being loaded from another application that is interfering with the OpenStudio Application. If you just want to fix your problem, try copying the files libeay32.dll and ssleay32.dll from C:\\openstudio-%VERSION%\\bin to C:\\Program Files \\SketchUp\\SketchUp %VERSION% , this will fix the problem 80% of the time. If you want to investigate in more depth, download Dependency Walker . Extract the files and launch depends.exe. Navigate to \"File->Open\" and then browse to choose the SketchUp.exe under C:\\Program Files \\SketchUp\\SketchUp %VERSION% . This will examine all of the libraries loaded by SketchUp but not the libraries loaded by the OpenStudio Plugin. Navigate to \"Profile->Start Profiling\" then press Ok in the dialog that pops up. This will launch SketchUp and attempt to load the OpenStudio Plugin. Scroll down in the list of loaded libraries and look for the OpenStudio dlls. Expand the paths under the OpenStudio dlls and look for libraries that are being loaded from other locations. Often, some other program will install a different version of one of the libraries (usually libeay32.dll or ssleay32.dll) that OpenStudio uses. This other library will be in the path ahead of OpenStudio and will be loaded instead, this results in a hard crash of SketchUp. Correcting your path or copying the dlls from the OpenStudio bin directory into the SketchUp install directory will cause the correct dlls to be loaded when SketchUp starts.","title":"SketchUp Crashes on Launch"},{"location":"getting_started/troubleshooting/#openstudio-application-and-sketchup-plug-in-crash","text":"Several users have reported an OpenStudio Application and OpenStudio SketchUp Plug-in crash occurring when saving or opening a file is related to the Dell Backup and Recovery software. It appears that this program is known to cause issues with Qt based applications (such as OpenStudio).","title":"OpenStudio Application and SketchUp Plug-in Crash"},{"location":"getting_started/troubleshooting/#graphics-problems-in-openstudio-application","text":"Several users have reported graphics issues with the Geometry and Results Summary tabs within the OpenStudio Application. In many cases, adjusting power saving settings of the graphics cards has resolved these issues. For computers with NVIDA graphics cards, you can access these settings via the NVIDIA Control Panel under \"3D Settings->Manage 3D Settings\". In this panel, make sure that \"Preferred graphics processor\" is set to \"High-performance NVIDIA processor\". Additionally, you may be able to find more information by running the OpenStudio Application from a command prompt and capturing the standard output in a file: set OPENSTUDIO_APPLICATION_DEBUG=1 C:\\openstudio-%VERSION%\\bin\\OpenStudioApp.exe > out.txt 2>&1","title":"Graphics Problems in OpenStudio Application"},{"location":"getting_started/troubleshooting/#orphan-objects-and-unused-resources","text":"At times OpenStudio objects that should have a parent, such as surfaces and internal load instances, may become detached from their parent. Possibly the parent is deleted but for some reason the child is not. These often are not visible in the GUI, and while it is possible to fix remove these orphans with a text editor it isn't ideal. To provide a better workflow for this we created a measure Remove Orphan Objects and Unused Resources that can be run either using the Apply Measure Now feature or at run time. If you see an EnergyPlus error about an object you don't think you have in your model, you may try running this to clean up the model. Additionally this measure also provides checkboxes that allow you to remove unused resources. While unused resources can be cleaned up in the GUI, the measure provides a robust and quick way to do this. Over time we will increase the functionality of the orphan cleanup as well as purging of unused resources. Below is a screenshot of what the measure looks like in the Apply Measure Now window. By default the remove unused objects boxes are un-checked. You will always get the remove orphan functionality. Below is a screenshot of the log after running the measure. The log will list each section being checked, so as the functionality is expanded you will know what object types are being checked for for orphan.","title":"Orphan Objects and Unused Resources"},{"location":"getting_started/troubleshooting/#energy-modeling-forum","text":"Post your questions to the forum below for general and OpenStudio specific energy modeling information. Unmet Hours","title":"Energy Modeling Forum"},{"location":"getting_started/troubleshooting/#submit-a-bug","text":"Please let us know if you find a bug in the OpenStudio software. Submit an OpenStudio Application Bug Submit an OpenStudio SketchUp Plugin Bug","title":"Submit a Bug"},{"location":"getting_started/troubleshooting/#useful-sketchup-links","text":"SketchUp's On-Line Help Forum for SketchUp Google's user forum for SketchUp SketchUcation's SketchUp forum","title":"Useful SketchUp Links"},{"location":"getting_started/using_bcl/","text":"The Building Component Library The Building Component Library is one of the most powerful and time saving features associated with OpenStudio. Users can simply drag and drop BCL retrofit measures into a model to create quick and replicable analysis. It is a collection of building data used to create building energy models. The data are broken down into components that represent parts of a building and measures that describe changes made to a building. BCL content is stored across multiple GitHub repositories contributed by the building energy modeling community. Search for components and measures by type or keyword. Once you find the content you need, download and use it in your energy modeling workflow.","title":"Building Component Library"},{"location":"reference/geometry_editor/","text":"FloorspaceJS The OpenStudio Application has integrated the FloorspaceJS web-based geometry editor for simplified entry of 2D floor plans. More information about FloorspaceJS, including a tutorial on its use, can be found at the FloorspaceJS project site . FloorspaceJS is an open source software module that developers can leverage for geometry creation. FloorspaceJS is meant to cover simple building geometry use cases only. More complex building geometry is best developed in a full featured CAD tool and exported to gbXML for building energy modeling. FloorspaceJS reads and writes a custom floorplan.json JSON file format. New methods have been added to the OpenStudio Software Development KIt (SDK), which can translate this file format to ThreeJS JSON, as well as to an OpenStudio Model file. Additionally, new methods have been added to the SDK, which allows two OpenStudio Models to be merged. These functionalities are demonstrated by integrating FloorspaceJS directly within the OpenStudio Application. Getting Started To try FloorspaceJS within the OpenStudio Application, first navigate to the Geometry tab and then to the Editor sub-tab. At this time, FloorspaceJS cannot be used on OpenStudio Models with existing geometry (either developed in the OpenStudio SketchUp Plug-in, imported through gbXML, or procedurally generated from scripts like the DOE Prototype measure) as these models do not include the requisite floorplan.json file used by the editor. For models with no existing geometry, a new floorplan may be created by pressing the New button. Existing OpenStudio Models that include a floorplan.json model may be edited. Using FloorspaceJS A detailed tutorial on FloorspaceJS usage is available at the FloorspaceJS project site . Preview and Merge At any time, you can preview your floorplan in 3D by pressing the Preview tab. Your OpenStudio Model is not altered until you press the Merge button. Performing a merge translates your floorplan to a new OpenStudio Model that is merged them with your current OpenStudio Model file (OSM file). Any geometry in your current OSM file will be replaced by new geometry from the floorplan OpenStudio Model. However, non-geometry objects such as HVAC in your current OSM file will be preserved. Once your floorplan has been merged with the current OSM file, you will see new objects associated with your floorplan throughout the rest of the OpenStudio Application. The intention of integrating FloorspaceJS with the OpenStudio Application is to demonstrate how geometry data may be merged seamlessly into the OpenStudio Model to support a variety of sophisticated workflows. Thermal zones, space types, default construction sets, and building units are synchronized between the two interfaces intuitively and with little effort on the part of the user. As with any new software feature, some rough edges are expected. Please let us know of issues you find by sending email to OpenStudio@nrel.gov . If FloorspaceJS becomes unresponsive, please press the Debug button, navigate to the console, and cut/paste diagnostic messages that may help us identify and fix any issues.","title":"FloorspaceJS"},{"location":"reference/geometry_editor/#floorspacejs","text":"The OpenStudio Application has integrated the FloorspaceJS web-based geometry editor for simplified entry of 2D floor plans. More information about FloorspaceJS, including a tutorial on its use, can be found at the FloorspaceJS project site . FloorspaceJS is an open source software module that developers can leverage for geometry creation. FloorspaceJS is meant to cover simple building geometry use cases only. More complex building geometry is best developed in a full featured CAD tool and exported to gbXML for building energy modeling. FloorspaceJS reads and writes a custom floorplan.json JSON file format. New methods have been added to the OpenStudio Software Development KIt (SDK), which can translate this file format to ThreeJS JSON, as well as to an OpenStudio Model file. Additionally, new methods have been added to the SDK, which allows two OpenStudio Models to be merged. These functionalities are demonstrated by integrating FloorspaceJS directly within the OpenStudio Application.","title":"FloorspaceJS"},{"location":"reference/geometry_editor/#getting-started","text":"To try FloorspaceJS within the OpenStudio Application, first navigate to the Geometry tab and then to the Editor sub-tab. At this time, FloorspaceJS cannot be used on OpenStudio Models with existing geometry (either developed in the OpenStudio SketchUp Plug-in, imported through gbXML, or procedurally generated from scripts like the DOE Prototype measure) as these models do not include the requisite floorplan.json file used by the editor. For models with no existing geometry, a new floorplan may be created by pressing the New button. Existing OpenStudio Models that include a floorplan.json model may be edited.","title":"Getting Started"},{"location":"reference/geometry_editor/#using-floorspacejs","text":"A detailed tutorial on FloorspaceJS usage is available at the FloorspaceJS project site .","title":"Using FloorspaceJS"},{"location":"reference/geometry_editor/#preview-and-merge","text":"At any time, you can preview your floorplan in 3D by pressing the Preview tab. Your OpenStudio Model is not altered until you press the Merge button. Performing a merge translates your floorplan to a new OpenStudio Model that is merged them with your current OpenStudio Model file (OSM file). Any geometry in your current OSM file will be replaced by new geometry from the floorplan OpenStudio Model. However, non-geometry objects such as HVAC in your current OSM file will be preserved. Once your floorplan has been merged with the current OSM file, you will see new objects associated with your floorplan throughout the rest of the OpenStudio Application. The intention of integrating FloorspaceJS with the OpenStudio Application is to demonstrate how geometry data may be merged seamlessly into the OpenStudio Model to support a variety of sophisticated workflows. Thermal zones, space types, default construction sets, and building units are synchronized between the two interfaces intuitively and with little effort on the part of the user. As with any new software feature, some rough edges are expected. Please let us know of issues you find by sending email to OpenStudio@nrel.gov . If FloorspaceJS becomes unresponsive, please press the Debug button, navigate to the console, and cut/paste diagnostic messages that may help us identify and fix any issues.","title":"Preview and Merge"},{"location":"reference/openstudio_application_interface/","text":"OpenStudio Application Interface Guide Overview The tabs on the left that move vertically are ordered in a suggested workflow. Above: Overview of the OpenStudio Application Interface. Sub-tabs Sub-tabs are designed to move from more general categories on the left to more specific on the right. On the Constructions tab, the sub-tabs are Construction Sets, Constructions, and Materials. If you are not building your own materials and constructions you may not need to go to the Materials sub-tab. Right Panel The right panel provides access to items in the library or in your Model, and allows you to edit some of these items. \"My Model\" displays items that are part of your Model already. \"Library\" includes components and measures that come with the application or are downloaded from the Building Component Library (BCL). \"Edit\" allows you to select certain Components and edit the settings for that Component. It is used in the HVAC Systemstab to edit component settings, assign thermal zones to loops, and to add plenums. Above: Edit settings on some objects in the right panel Edit tab. Left Panel Bottom Add New Item allows the user to add a new Component to the interface. Sometimes the type of item added depends on the selection in the left panel. Above: On the Utility Bill sub-tab, select the type of bill you want to add before hitting the Add button. Duplicate a selected object with this button. Delete a selected object with this button. Purge unused objects with this button. Adding Objects from the Library To add items from the library, select the Library tab on the right panel and find the item you want to add to the Model. Select that item and drag and drop it into the correct drop zone. Drop zones are surrounded by a dotted line and are programmed to only accept items that will work for that field. Above: Drag-and-drop items from the library to the drop zones in the Model. Above: Drag-and-drop example on the HVAC service hot water. Grid View and Multi-edit: Thermal Zones, Space Types, and Refrigeration Earlier releases have included a grid view for the refrigeration section in the HVAC Systems tab. Now you can edit thermal zones and space types in a grid view. This makes it easier to view all your Zones and Space Types at once and compare settings. By selecting the buttons across the top you can select the fields you would like to see and edit. Above: The grid view provides a spreadsheet style layout. Click on the image to view a larger version. Drag Components and Schedules into the grid view. Most items on the grid can be inspected in the right panel Edit tab, except schedules. To edit or view schedules, go to the Schedules tab. A yellow highlight indicates the item you have selected in the grid. When you start editing the item in the right panel Edit tab, the highlight will disappear, indicating that the focus is now on editing the item. Use the Delete button in the Edit tab to remove a Component from the grid. Click the shaded portion of a column header if you want to view that column in the \"Custom\" category. Click on the color box on the General button to change the rendering color of the Space Type. This will change the rendering color in the SketchUp Plug-in as well. You can use the Multi-edit feature on individual columns (as shown below) or on whole rows by selecting a row or rows and hitting the Copy button on the bottom left to duplicate those rows. Above: The steps for using the multi-edit function are shown above. Above: Hit the Loads button to edit and view loads by space type. Click on the name of a component and select the right panel Edit tab to inspect and edit that item. File Menu If you launch the OpenStudio Application from the SketchUp Plug-in, your open file will automatically open in the application. To save a file or open a new file from within the OpenStudio Application, access the corresponding options within the File menu. When you save an OpenStudio Model (OSM) in the OpenStudio Application or the SketchUp Plug-in, a folder is saved next to the OSM file. This folder contains external resources such as the weather file, scripts, and simulation results. Load Library is also a very important feature. This allows you to load building component libraries for specific building types. These libraries are the same as those used in the SketchUp Plug-in templates. Above: The File menu contains the new, open, revert, save, import, and export functions. Preferences Menu The Units menu lets you switch between SI and IP units. This affects both input fields and output data on the Results Summary tab. It does not currently affect standard EnergyPlus output files. The SketchUp Plug-in has access to this as well under Extensions->OpenStudio->Preferences . \"Change Default Libraries\" allows one to restore default libraries. This feature complements the Load Library feature within the File menu. Loading several libraries could increase the duration to boot the OpenStudio Application. To reduce this duration, restore default libraries. Above: The Preferences menu contains the units, measure directory, and tool location options. Components & Measures Menu Above: The Components & Measures menu contains the Apply Measure Now, Find Measures, and Find Components features Apply Measures Now You can apply measures to your Model at any time by going to the Components and Measures menu and selecting the Apply Measures Now option. This will open a dialog that allows you to choose a measure (downloaded from the BCL) to apply, or even write your own measure and test it. Once you select a measure you may edit the measure inputs on the right side of the dialog. Click \"Apply Measure\" to start. Above: This menu item allows you to run one measure on your model. Find Measures and Find Components The Online BCL window gives you access to an online repository of building energy modeling data called the Building Component Library. Although you can access the BCL website on its own, OpenStudio Application has integrated access to the BCL. You can access this through the Components & Measures menu. Above: This window gives you access to the online BCL to download measures or components. Environment Variables A variety of environment variables can be used to modify the OpenStudio Application's operation. Environment variables can be set on the command line for a specific session or stored permanently in the advanced system settings on Windows or in your profile file (eg ~/.bashrc ) on Unix. OpenStudio Application Environment Variables OPENSTUDIO_APPLICATION_DEBUG , if set then debug level logging is enabled OPENSTUDIO_APPLICATION_LOGFILE_PATH , if set to a path then logging information is sent to the file path OPENSTUDIO_APPLICATION_SLEEP_AT_START , if set to an integer the application sleeps that many seconds before starting to allow a debugger to attach OPENSTUDIO_APPLICATION_START_TAB_INDEX , if set to an integer the application opens the specified tab first (enum VerticalTabID in OSDocument.hpp) { SITE = 0, SCHEDULES = 1, CONSTRUCTIONS = 2, LOADS = 3, SPACE_TYPES = 4, GEOMETRY = 5, FACILITY = 6, SPACES = 7, THERMAL_ZONES = 8, HVAC_SYSTEMS = 9, OUTPUT_VARIABLES = 10, SIMULATION_SETTINGS = 11, RUBY_SCRIPTS = 12, RUN_SIMULATION = 13, RESULTS_SUMMARY = 14 } Qt Environment Variables Qt Environment Variables are described in the Qt documentation. QT_AUTO_SCREEN_SCALE_FACTOR QT_DEVICE_PIXEL_RATIO QT_SCALE_FACTOR QT_SCREEN_SCALE_FACTORS QTWEBENGINE_CHROMIUM_FLAGS QTWEBENGINEPROCESS_PATH QTWEBENGINE_REMOTE_DEBUGGING","title":"OpenStudio Application Interface Guide"},{"location":"reference/openstudio_application_interface/#overview","text":"The tabs on the left that move vertically are ordered in a suggested workflow. Above: Overview of the OpenStudio Application Interface.","title":"Overview"},{"location":"reference/openstudio_application_interface/#sub-tabs","text":"Sub-tabs are designed to move from more general categories on the left to more specific on the right. On the Constructions tab, the sub-tabs are Construction Sets, Constructions, and Materials. If you are not building your own materials and constructions you may not need to go to the Materials sub-tab.","title":"Sub-tabs"},{"location":"reference/openstudio_application_interface/#right-panel","text":"The right panel provides access to items in the library or in your Model, and allows you to edit some of these items. \"My Model\" displays items that are part of your Model already. \"Library\" includes components and measures that come with the application or are downloaded from the Building Component Library (BCL). \"Edit\" allows you to select certain Components and edit the settings for that Component. It is used in the HVAC Systemstab to edit component settings, assign thermal zones to loops, and to add plenums. Above: Edit settings on some objects in the right panel Edit tab.","title":"Right Panel"},{"location":"reference/openstudio_application_interface/#left-panel-bottom","text":"Add New Item allows the user to add a new Component to the interface. Sometimes the type of item added depends on the selection in the left panel. Above: On the Utility Bill sub-tab, select the type of bill you want to add before hitting the Add button. Duplicate a selected object with this button. Delete a selected object with this button. Purge unused objects with this button.","title":"Left Panel Bottom"},{"location":"reference/openstudio_application_interface/#adding-objects-from-the-library","text":"To add items from the library, select the Library tab on the right panel and find the item you want to add to the Model. Select that item and drag and drop it into the correct drop zone. Drop zones are surrounded by a dotted line and are programmed to only accept items that will work for that field. Above: Drag-and-drop items from the library to the drop zones in the Model. Above: Drag-and-drop example on the HVAC service hot water.","title":"Adding Objects from the Library"},{"location":"reference/openstudio_application_interface/#grid-view-and-multi-edit-thermal-zones-space-types-and-refrigeration","text":"Earlier releases have included a grid view for the refrigeration section in the HVAC Systems tab. Now you can edit thermal zones and space types in a grid view. This makes it easier to view all your Zones and Space Types at once and compare settings. By selecting the buttons across the top you can select the fields you would like to see and edit. Above: The grid view provides a spreadsheet style layout. Click on the image to view a larger version. Drag Components and Schedules into the grid view. Most items on the grid can be inspected in the right panel Edit tab, except schedules. To edit or view schedules, go to the Schedules tab. A yellow highlight indicates the item you have selected in the grid. When you start editing the item in the right panel Edit tab, the highlight will disappear, indicating that the focus is now on editing the item. Use the Delete button in the Edit tab to remove a Component from the grid. Click the shaded portion of a column header if you want to view that column in the \"Custom\" category. Click on the color box on the General button to change the rendering color of the Space Type. This will change the rendering color in the SketchUp Plug-in as well. You can use the Multi-edit feature on individual columns (as shown below) or on whole rows by selecting a row or rows and hitting the Copy button on the bottom left to duplicate those rows. Above: The steps for using the multi-edit function are shown above. Above: Hit the Loads button to edit and view loads by space type. Click on the name of a component and select the right panel Edit tab to inspect and edit that item.","title":"Grid View and Multi-edit: Thermal Zones, Space Types, and Refrigeration"},{"location":"reference/openstudio_application_interface/#file-menu","text":"If you launch the OpenStudio Application from the SketchUp Plug-in, your open file will automatically open in the application. To save a file or open a new file from within the OpenStudio Application, access the corresponding options within the File menu. When you save an OpenStudio Model (OSM) in the OpenStudio Application or the SketchUp Plug-in, a folder is saved next to the OSM file. This folder contains external resources such as the weather file, scripts, and simulation results. Load Library is also a very important feature. This allows you to load building component libraries for specific building types. These libraries are the same as those used in the SketchUp Plug-in templates. Above: The File menu contains the new, open, revert, save, import, and export functions.","title":"File Menu"},{"location":"reference/openstudio_application_interface/#preferences-menu","text":"The Units menu lets you switch between SI and IP units. This affects both input fields and output data on the Results Summary tab. It does not currently affect standard EnergyPlus output files. The SketchUp Plug-in has access to this as well under Extensions->OpenStudio->Preferences . \"Change Default Libraries\" allows one to restore default libraries. This feature complements the Load Library feature within the File menu. Loading several libraries could increase the duration to boot the OpenStudio Application. To reduce this duration, restore default libraries. Above: The Preferences menu contains the units, measure directory, and tool location options.","title":"Preferences Menu"},{"location":"reference/openstudio_application_interface/#components-measures-menu","text":"Above: The Components & Measures menu contains the Apply Measure Now, Find Measures, and Find Components features","title":"Components &amp; Measures Menu"},{"location":"reference/openstudio_application_interface/#apply-measures-now","text":"You can apply measures to your Model at any time by going to the Components and Measures menu and selecting the Apply Measures Now option. This will open a dialog that allows you to choose a measure (downloaded from the BCL) to apply, or even write your own measure and test it. Once you select a measure you may edit the measure inputs on the right side of the dialog. Click \"Apply Measure\" to start. Above: This menu item allows you to run one measure on your model.","title":"Apply Measures Now"},{"location":"reference/openstudio_application_interface/#find-measures-and-find-components","text":"The Online BCL window gives you access to an online repository of building energy modeling data called the Building Component Library. Although you can access the BCL website on its own, OpenStudio Application has integrated access to the BCL. You can access this through the Components & Measures menu. Above: This window gives you access to the online BCL to download measures or components.","title":"Find Measures and Find Components"},{"location":"reference/openstudio_application_interface/#environment-variables","text":"A variety of environment variables can be used to modify the OpenStudio Application's operation. Environment variables can be set on the command line for a specific session or stored permanently in the advanced system settings on Windows or in your profile file (eg ~/.bashrc ) on Unix.","title":"Environment Variables"},{"location":"reference/openstudio_application_interface/#openstudio-application-environment-variables","text":"OPENSTUDIO_APPLICATION_DEBUG , if set then debug level logging is enabled OPENSTUDIO_APPLICATION_LOGFILE_PATH , if set to a path then logging information is sent to the file path OPENSTUDIO_APPLICATION_SLEEP_AT_START , if set to an integer the application sleeps that many seconds before starting to allow a debugger to attach OPENSTUDIO_APPLICATION_START_TAB_INDEX , if set to an integer the application opens the specified tab first (enum VerticalTabID in OSDocument.hpp) { SITE = 0, SCHEDULES = 1, CONSTRUCTIONS = 2, LOADS = 3, SPACE_TYPES = 4, GEOMETRY = 5, FACILITY = 6, SPACES = 7, THERMAL_ZONES = 8, HVAC_SYSTEMS = 9, OUTPUT_VARIABLES = 10, SIMULATION_SETTINGS = 11, RUBY_SCRIPTS = 12, RUN_SIMULATION = 13, RESULTS_SUMMARY = 14 }","title":"OpenStudio Application Environment Variables"},{"location":"reference/openstudio_application_interface/#qt-environment-variables","text":"Qt Environment Variables are described in the Qt documentation. QT_AUTO_SCREEN_SCALE_FACTOR QT_DEVICE_PIXEL_RATIO QT_SCALE_FACTOR QT_SCREEN_SCALE_FACTORS QTWEBENGINE_CHROMIUM_FLAGS QTWEBENGINEPROCESS_PATH QTWEBENGINE_REMOTE_DEBUGGING","title":"Qt Environment Variables"},{"location":"reference/openstudio_results_measure/","text":"OpenStudio Results Measure Measure Overview This is the default measure on any simulation. You don't have to add it to your workflow; it just runs. This measure creates high level tables and charts pulling both from model inputs and EnergyPlus results, all data is in IP units. It has building level information as well as detail on space types, thermal zones, HVAC systems, envelope characteristics, and economics. Click the heading above a chart to view a table of the chart data. You can also download a copy of this from the BCL , and view charts offline. If you are viewing the report through a web browser you won't see charts if you are offline, but you will still see tables. While the report generally uses high level model data or tabular results, a few sections do request hourly or monthly time-series data. This applies to the HVAC Load Profiles and Zone Conditions sections. The report is broken down into 21 sections which can be navigated using the table of contents at the left side of the report. If the table of contents and the main body of the report start to overlap with each other, increase the width of your application or web browser window. Each section has one or moore tables or charts. Be default where there is a chart, table data is hidden, but you can expand it by clicking on the blue title above the chart that says \"view table\". If there is no data for a section, the header for the section will still show but you will see a message that says \"No Data to Show for ...\". For some tables or charts within a section the table may be hidden if there isn't any content. This is true for example for Renewable Energy Source Summary in Model Summary, Fuel Tables in Monthly Overview, and Thermal Zones in Zone Equipment Detail. As this measure develops more data may be added to specific sections and new sections may be added, but we don't want this to be an all purpose measure. It is meant to provide general data that you would typically want on any simulation. If you want to trouble shoot specific aspects of your model or have use case or specific reporting requirements, you can add additional reporting measures to the workflow. As described in the Developing Your Own Reporting Measures section below, we hope both internally and externally to see the same framework and charting libraries used as much as possible. This will provide a more consistent experience for users and measure writers. The rest of this section describes the specific sections of the current version of the measure. Model Summary This section provides quick access to high level information about your model such as the building area and the Energy Use Intensity (EUI). It includes tables for Building Summary, Weather Summary Sizing Period Design Days, Unmet Hours Summary, and Renewable Energy Source Summary. Above: First few tables in Model Summary section. Annual Overview This section consists of a number of pie charts that break down annual consumption by end use, fuel or both. The chart legend is sorted for largest (top) to smallest (bottom) and only shows end uses or fuels which are used in the model. The end use and fuel color keys are consistent with charts in other sections of the report. As is typical in charts throughout the report, hovering over chart elements provides additional information. Above: First few charts in Annual Summary section. Monthly Overview This section is most like what the previous default report looked like. It has consumption charts by month, fuel, and end use. It will create charts as needed based on fuel types used in the model. This includes district heating and cooling. In addition to monthly consumption breakdown, there are also charts for monthly demand by fuel. The end uses shown in the demand charts are the value of that end use at peak demand for that fuel. Keep in mind that this may not represent the monthly peak load for that end use by itself, it is just a snapshot at the monthly peak demand for that fuel. Above: Monthly Electricity Consumption table. Utility Bills/Rates This section includes a table showing average utility rate by fuel as well as a table that shows process and total energy costs by fuel. Note that on the Energy Cost Summary table the \"Other\" row includes water. To get an accurate total water cost the model would need to include Water Use Equipment that are representative of both hot and cold water use. Traditionally many energy models only include hot water use. Therefore, the user should be cautious about using water costs without inspecting the OpenStudio Model to know whether cold water use is included. Above: Utility Bills/Rates tables. Envelope This section lists constructions used for base and sub surfaces in the model along with the area, surface count, and R value or U-Factor for the construction. This data comes from the OpenStudio Model, however the orientation specific window-wall ratios and skylight-roof ratio come from the EnergyPlus results. Above: Envelope tables. Space Type Breakdown This chart is generated from the OpenStudio Model. If you expand the table or hover over pie chart sections you can see the floor area in the model accounted for by each space type. If you have spaces in your model that don't have a space type assigned, they will show under a heading of \"No Space Type Assigned\". This accounts for zone multipliers. If you have spaces in your model that are not included in a thermal zone you may have unexpected results. Above: Space Type Breakdown chart and first Space Type Summary table. Space Type Summary These tables provide detail on internal loads for each of the space types used in the model. This includes loads such as people, lights, and electric and gas equipment, as well as internal mass, outdoor air requirements, infiltration. Currently Water Use Equipment isn't part of a space type and doesn't show on these tables. There is a separate section for water use equipment. If you have multiple instances of a specific load type such as lights, each instance will each be listed individually vs. having a lighting total for the space type. Note that loads assigned directly to a space don't show anywhere in this section. This would occur for all loads in a space when there is no space type assigned, and can also occur when a space type is assigned to a space, but the space also has additional loads assigned to it, beyond what it inherits from the space type. Interior Lighting Summary This section contains one table that lists all lighting instances in the model by thermal zone. This comes from EnergyPlus post simulation. As a result we can include \"Actual Load Hours/Week\" and \"Consumption\". Actual load horus per week account for reductions due to daylight controls. Additional information such as schedule name and return air fraction are included. This can be a very long table on a large model. For convenience you can click the blue heading to collapse a table, but you can also use the left navigation to skip past it. Above: Interior Lighting Summary table. Plug Loads Summary The Plug Loads summary section is similar to Interior Lighting Summary in that it lists all plug loads. There are two sets of tables, the Plug Load Consumption tables that display annual plug load consumption by thermal zone, and the Space-level Plug Loads that display the space-level Equipment Definitions. There are separate tables for electric equipment and gas equipment, if both types of loads exist in the model. Above: Electric Plug Load Consumption table. Above: Space-level Electric Plug Loads table. Exterior Lighting This section has a single table that last all exterior lights objects in the model along with their power and consumption. As this comes from the EnergyPlus results consumption accounts for schedules adjusted for an astronomical clock. Above: Exterior Lighting and Water Use Equipment section. Water Use Equipment The water use equipment table lists all water use equipment objects in the model. This comes from the model, so it doesn't provide consumption but it does identify the service water heating loop, the load definition, the space the equipment is in, along with the peak flow rate, flow rate schedule, and the target temperature range. In a number of places in this reporting measure where an object refers to a temperature schedule or schedules, a range of values is listed vs. the name of the schedules. This allows for quick validation of reasonable values. HVAC Load Profiles This measure overlays monthly heating and cooling demand, that we saw earlier in the Monthly Overview section with the monthly average outdoor dry bulb temperature. This is the first section in the measure that requires time series output, although in this case just the monthly values for one variable (dry bulb temperature). Above: HVAC Load Profiles chart. Zone Conditions The zone conditions section has two tables. Both tables list all of the zones in the model and break down the hours of the simulation that are spent in a specific value range. The first table catagories hours of simulation (8760 if running a full year) by temperature ranges in 5 degree(F) bins. Additionally the number of hours heating and cooling setpoints are not met are also shown, along with the mean zone temperature. The unmet hours and mean temperature include both occupied and unoccupied hours. Above: Zone Conditions - Temperature table. The second table shows relative humidity in 5% bins, along with mean relative humidity for each zone. In both cases the table cells are color coded to make it easier to quickly can over. Cells with under 500 hours are not colored. Cells with more than 500 hours are yellow. More than 1000 hours - orange. More than 2000 hours - red. Above: Zone Conditions - Humidity Table. Zone Overview This section gives an overview of zone geometry and internal loads. It also identifies if a zone is conditioned, is part of the flor area, and what its zone multiplier is. Above: Zone Overview section. Zone Equipment Detail This section lists creates a table for each thermal zone that has zone equipment, other than a terminal. Each table lists all zone equipment except for terminals, information on terminal types used can be found in the Air Loops Details section. For some types of equipment we list additional information, for others we just list the object type. Over time we will provide more information on additional object types. This is also true for the Air Loops and Plant Loops Detail sections. Above: Zone Equipment section. Air Loops Detail This section has a table for each air loop in the model. Each table is broken down into supply, demand, and controls sub-tables. The demand supply section lists objects on the supply side of the air loop. As with Zone Equipment Detail section, some objects have additional information listed, other objects just list the class of object. The demand section summaries the number of zones on the air loop along with the floor area of those thermal zones, the range of thermostat setpoint values for both heating and cooling, and a list of the types of terminals used on the air loop. The controls sub-table provides high level controls information about the air loop. Above: First table in Air Loops Detail section. Plant Loops Detail This section has a table for each plant loop in the model. It is organized very much like the Air Loops Detail section. The demand section of the plant loop summary will list thermal zones, air loops or other plant loops that are on the demand side of the loop. In addition to loops that condition the building, loops providing service water heating will also appear hear. Above: First table in Plant Loops Detail section. Outdoor Air This section has a table that lists the number of occupants and volume of each zone along with the average and minimum values for mechanical ventilation and infiltration. Above: Outdoor Air section. Cash Flow This section shows the cash flow over the analysis period for your project, which defaults to 25 years. You wont see any data in this section unless you have added lifecycle costs and or utility rates to your model. As with other charts you can hover over chart data or click the blue heading above the chart to view precise value in tabular form. Above: Cash Flow chart. Site and Source Summary This section has two tables. The lists total and net values for both site and source energy. The second table lists the site to source conversion factors by fuel to calculate values in the first table. Above: Site and Source Summary section. Schedule Overview This section provides a small chart for each schedule used in the model. All of the possible day profiles for a schedule are overlaid on each other. Rules are listed by their priority with a description for the days of the week and dates of the year they are applicable. The colors for the default profile and rules match what is used in the application. You can expand the table for this section to see the use count for each schedule. Above: Schedule Overview charts. Measure Arguments For this measure, there is a check box for each section to determine if you want to generate that section or not. You could use this to create a streamline report with only the sections are are interested visible. If you disable sections that request time-series data, then those output variables won't be requested, resulting in a smaller SQL file. Since most sections in this report only request tabular data, it won't affect much, but for other future reports this could be more useful. The Zone Conditions section requests hourly zone temperature and humidity values and the HVAC Load Profiles section requests monthly outdoor air dry bulb temperatures. Above: View of Arguments in OpenStudio Results measure. Developing Your Own Reporting Measures This measure was created to fill a need in providing easy access to more detailed model and simulation results data, but it serves another role as well. It was created in a way that was very easy to use as a template for custom user reports. We setup a framework and added support for a variety of chart types. The only coding required to make your own custom report is to provide the data. While there is a Measure Writing Guide within the OpenStudio Software Development Kit (SDK) documentation, it seemed fitting to explain here how you would add your own tables and charts to this report, or to create a new clean report. The first step is to gather the data you want in a table or chart. This could be simulation results, model inputs, or even just hard coded table as in this example. It could also be read in from a text file. In the \"resources\" folder of the measure this is a file named \"os_lib_reporting.rb\". Most of the methods (start with \"def OsLib_Reporting.my_method\") in this file do one of two things. They define a section used in the report or they define a table that is used by one of the sections. The code below shows two sample methods with hard coded table data about tasty treats. You can copy and modify these methods to show what you want. The section description and all of the table data can be in one method, or if it is easier to break things up you can have a method for each table, and then call it from the method that makes the section. in this case. template_tables << OsLib_Reporting.template_table(model,sqlFile,runner) adds in a table defined elsewhere. The code for a sample section method and table method are shown below. # create template section def OsLib_Reporting.template_section(model,sqlFile,runner,name_only = false) # array to hold tables template_tables = [] # gather data for section @template_section = {} @template_section[:title] = 'Tasty Treats' @template_section[:tables] = template_tables # stop here if only name is requested this is used to populate display name for arguments if name_only == true return @template_section end # notes: # The data below would typically come from the model or simulation results # You can loop through objects to make a table for each item of that type, such as air loops # If a section will only have one table you can leave the table title blank and just rely on the section title # these will be updated later to support graphs # create table template_table_01= {} template_table_01[:title] = 'Fruit' template_table_01[:header] = ['Definition','Value'] template_table_01[:units] = ['','$/pound'] template_table_01[:data] = [] # add rows to table template_table_01[:data] << ['Banana',0.23] template_table_01[:data] << ['Apple',0.75] template_table_01[:data] << ['Orange',0.50] # add table to array of tables template_tables << template_table_01 # using helper method that generates table for second example template_tables << OsLib_Reporting.template_table(model,sqlFile,runner) return @template_section end # create template section def OsLib_Reporting.template_table(model,sqlFile,runner) # create a second table template_table = {} template_table[:title] = 'Ice Cream' template_table[:header] = ['Definition','Base Flavor','Toppings','Value'] template_table[:units] = ['','','','scoop'] template_table[:data] = [] # add rows to table template_table[:data] << ['Vanilla','Vanilla','NA',1.5] template_table[:data] << ['Rocky Road','Chocolate','Nuts',1.5] template_table[:data] << ['Mint Chip','Mint','Chocolate Chips',1.5] return template_table end This example doesn't discuss charts, but you can look at other methods to learn how to add charts. It looks something like this output_data_space_type_breakdown[:chart_type] = 'simple_pie' output_data_space_type_breakdown[:chart] = [] # data for graph output_data_space_type_breakdown[:chart] << JSON.generate({:label =>display,:value => value, :color => color}) Once you have defined your need to tell the measure to use the new section method. For this last step you need to add a line to the possible_sections method of the measure.rb file. In this example I added result << \"template_section\" to the top of the table of contents. def possible_sections result = [] # methods for sections in order that they will appear in report result << \"template_section\" result << \"building_summary_section\" result << \"annual_overview_section\" result << \"monthly_overview_section\" result << \"utility_bills_rates_section\" result << \"envelope_section_section\" result << \"space_type_breakdown_section\" result << \"space_type_details_section\" # removed other sections from code example to make it shorter return result end Adding that line of code will not only add the new section to the arguments for the measure, but will also call the method in the run method of the measure to gather the data and generate an HTML table. If you don't want to extend the os_lib_reporting.rb file, you can create your own version that functions in the same way, but only has code for sections you are using. You just need to modify this line at the top of the \"measure.rb\" file to point to your library require \"#{File.dirname(__FILE__)}/resources/os_lib_reporting\" . Below is a screenshot of the resting Tasty Treats section. If you want to change the title in the HTML file it is in this code in the \"report.html.erb\" file in the \"resources\" directory <title>OpenStudio Results</title> . Above: Example section with two tables. You can write completely custom measure reports that don't look anything like this, and use different html and charting technologies. This framework is just provided as a way to make reports where all you want to worry about is how to get the data you want to see, and not how to generate the HTML code.","title":"OpenStudio Results Measure"},{"location":"reference/openstudio_results_measure/#measure-overview","text":"This is the default measure on any simulation. You don't have to add it to your workflow; it just runs. This measure creates high level tables and charts pulling both from model inputs and EnergyPlus results, all data is in IP units. It has building level information as well as detail on space types, thermal zones, HVAC systems, envelope characteristics, and economics. Click the heading above a chart to view a table of the chart data. You can also download a copy of this from the BCL , and view charts offline. If you are viewing the report through a web browser you won't see charts if you are offline, but you will still see tables. While the report generally uses high level model data or tabular results, a few sections do request hourly or monthly time-series data. This applies to the HVAC Load Profiles and Zone Conditions sections. The report is broken down into 21 sections which can be navigated using the table of contents at the left side of the report. If the table of contents and the main body of the report start to overlap with each other, increase the width of your application or web browser window. Each section has one or moore tables or charts. Be default where there is a chart, table data is hidden, but you can expand it by clicking on the blue title above the chart that says \"view table\". If there is no data for a section, the header for the section will still show but you will see a message that says \"No Data to Show for ...\". For some tables or charts within a section the table may be hidden if there isn't any content. This is true for example for Renewable Energy Source Summary in Model Summary, Fuel Tables in Monthly Overview, and Thermal Zones in Zone Equipment Detail. As this measure develops more data may be added to specific sections and new sections may be added, but we don't want this to be an all purpose measure. It is meant to provide general data that you would typically want on any simulation. If you want to trouble shoot specific aspects of your model or have use case or specific reporting requirements, you can add additional reporting measures to the workflow. As described in the Developing Your Own Reporting Measures section below, we hope both internally and externally to see the same framework and charting libraries used as much as possible. This will provide a more consistent experience for users and measure writers. The rest of this section describes the specific sections of the current version of the measure.","title":"Measure Overview"},{"location":"reference/openstudio_results_measure/#model-summary","text":"This section provides quick access to high level information about your model such as the building area and the Energy Use Intensity (EUI). It includes tables for Building Summary, Weather Summary Sizing Period Design Days, Unmet Hours Summary, and Renewable Energy Source Summary. Above: First few tables in Model Summary section.","title":"Model Summary"},{"location":"reference/openstudio_results_measure/#annual-overview","text":"This section consists of a number of pie charts that break down annual consumption by end use, fuel or both. The chart legend is sorted for largest (top) to smallest (bottom) and only shows end uses or fuels which are used in the model. The end use and fuel color keys are consistent with charts in other sections of the report. As is typical in charts throughout the report, hovering over chart elements provides additional information. Above: First few charts in Annual Summary section.","title":"Annual Overview"},{"location":"reference/openstudio_results_measure/#monthly-overview","text":"This section is most like what the previous default report looked like. It has consumption charts by month, fuel, and end use. It will create charts as needed based on fuel types used in the model. This includes district heating and cooling. In addition to monthly consumption breakdown, there are also charts for monthly demand by fuel. The end uses shown in the demand charts are the value of that end use at peak demand for that fuel. Keep in mind that this may not represent the monthly peak load for that end use by itself, it is just a snapshot at the monthly peak demand for that fuel. Above: Monthly Electricity Consumption table.","title":"Monthly Overview"},{"location":"reference/openstudio_results_measure/#utility-billsrates","text":"This section includes a table showing average utility rate by fuel as well as a table that shows process and total energy costs by fuel. Note that on the Energy Cost Summary table the \"Other\" row includes water. To get an accurate total water cost the model would need to include Water Use Equipment that are representative of both hot and cold water use. Traditionally many energy models only include hot water use. Therefore, the user should be cautious about using water costs without inspecting the OpenStudio Model to know whether cold water use is included. Above: Utility Bills/Rates tables.","title":"Utility Bills/Rates"},{"location":"reference/openstudio_results_measure/#envelope","text":"This section lists constructions used for base and sub surfaces in the model along with the area, surface count, and R value or U-Factor for the construction. This data comes from the OpenStudio Model, however the orientation specific window-wall ratios and skylight-roof ratio come from the EnergyPlus results. Above: Envelope tables.","title":"Envelope"},{"location":"reference/openstudio_results_measure/#space-type-breakdown","text":"This chart is generated from the OpenStudio Model. If you expand the table or hover over pie chart sections you can see the floor area in the model accounted for by each space type. If you have spaces in your model that don't have a space type assigned, they will show under a heading of \"No Space Type Assigned\". This accounts for zone multipliers. If you have spaces in your model that are not included in a thermal zone you may have unexpected results. Above: Space Type Breakdown chart and first Space Type Summary table.","title":"Space Type Breakdown"},{"location":"reference/openstudio_results_measure/#space-type-summary","text":"These tables provide detail on internal loads for each of the space types used in the model. This includes loads such as people, lights, and electric and gas equipment, as well as internal mass, outdoor air requirements, infiltration. Currently Water Use Equipment isn't part of a space type and doesn't show on these tables. There is a separate section for water use equipment. If you have multiple instances of a specific load type such as lights, each instance will each be listed individually vs. having a lighting total for the space type. Note that loads assigned directly to a space don't show anywhere in this section. This would occur for all loads in a space when there is no space type assigned, and can also occur when a space type is assigned to a space, but the space also has additional loads assigned to it, beyond what it inherits from the space type.","title":"Space Type Summary"},{"location":"reference/openstudio_results_measure/#interior-lighting-summary","text":"This section contains one table that lists all lighting instances in the model by thermal zone. This comes from EnergyPlus post simulation. As a result we can include \"Actual Load Hours/Week\" and \"Consumption\". Actual load horus per week account for reductions due to daylight controls. Additional information such as schedule name and return air fraction are included. This can be a very long table on a large model. For convenience you can click the blue heading to collapse a table, but you can also use the left navigation to skip past it. Above: Interior Lighting Summary table.","title":"Interior Lighting Summary"},{"location":"reference/openstudio_results_measure/#plug-loads-summary","text":"The Plug Loads summary section is similar to Interior Lighting Summary in that it lists all plug loads. There are two sets of tables, the Plug Load Consumption tables that display annual plug load consumption by thermal zone, and the Space-level Plug Loads that display the space-level Equipment Definitions. There are separate tables for electric equipment and gas equipment, if both types of loads exist in the model. Above: Electric Plug Load Consumption table. Above: Space-level Electric Plug Loads table.","title":"Plug Loads Summary"},{"location":"reference/openstudio_results_measure/#exterior-lighting","text":"This section has a single table that last all exterior lights objects in the model along with their power and consumption. As this comes from the EnergyPlus results consumption accounts for schedules adjusted for an astronomical clock. Above: Exterior Lighting and Water Use Equipment section.","title":"Exterior Lighting"},{"location":"reference/openstudio_results_measure/#water-use-equipment","text":"The water use equipment table lists all water use equipment objects in the model. This comes from the model, so it doesn't provide consumption but it does identify the service water heating loop, the load definition, the space the equipment is in, along with the peak flow rate, flow rate schedule, and the target temperature range. In a number of places in this reporting measure where an object refers to a temperature schedule or schedules, a range of values is listed vs. the name of the schedules. This allows for quick validation of reasonable values.","title":"Water Use Equipment"},{"location":"reference/openstudio_results_measure/#hvac-load-profiles","text":"This measure overlays monthly heating and cooling demand, that we saw earlier in the Monthly Overview section with the monthly average outdoor dry bulb temperature. This is the first section in the measure that requires time series output, although in this case just the monthly values for one variable (dry bulb temperature). Above: HVAC Load Profiles chart.","title":"HVAC Load Profiles"},{"location":"reference/openstudio_results_measure/#zone-conditions","text":"The zone conditions section has two tables. Both tables list all of the zones in the model and break down the hours of the simulation that are spent in a specific value range. The first table catagories hours of simulation (8760 if running a full year) by temperature ranges in 5 degree(F) bins. Additionally the number of hours heating and cooling setpoints are not met are also shown, along with the mean zone temperature. The unmet hours and mean temperature include both occupied and unoccupied hours. Above: Zone Conditions - Temperature table. The second table shows relative humidity in 5% bins, along with mean relative humidity for each zone. In both cases the table cells are color coded to make it easier to quickly can over. Cells with under 500 hours are not colored. Cells with more than 500 hours are yellow. More than 1000 hours - orange. More than 2000 hours - red. Above: Zone Conditions - Humidity Table.","title":"Zone Conditions"},{"location":"reference/openstudio_results_measure/#zone-overview","text":"This section gives an overview of zone geometry and internal loads. It also identifies if a zone is conditioned, is part of the flor area, and what its zone multiplier is. Above: Zone Overview section.","title":"Zone Overview"},{"location":"reference/openstudio_results_measure/#zone-equipment-detail","text":"This section lists creates a table for each thermal zone that has zone equipment, other than a terminal. Each table lists all zone equipment except for terminals, information on terminal types used can be found in the Air Loops Details section. For some types of equipment we list additional information, for others we just list the object type. Over time we will provide more information on additional object types. This is also true for the Air Loops and Plant Loops Detail sections. Above: Zone Equipment section.","title":"Zone Equipment Detail"},{"location":"reference/openstudio_results_measure/#air-loops-detail","text":"This section has a table for each air loop in the model. Each table is broken down into supply, demand, and controls sub-tables. The demand supply section lists objects on the supply side of the air loop. As with Zone Equipment Detail section, some objects have additional information listed, other objects just list the class of object. The demand section summaries the number of zones on the air loop along with the floor area of those thermal zones, the range of thermostat setpoint values for both heating and cooling, and a list of the types of terminals used on the air loop. The controls sub-table provides high level controls information about the air loop. Above: First table in Air Loops Detail section.","title":"Air Loops Detail"},{"location":"reference/openstudio_results_measure/#plant-loops-detail","text":"This section has a table for each plant loop in the model. It is organized very much like the Air Loops Detail section. The demand section of the plant loop summary will list thermal zones, air loops or other plant loops that are on the demand side of the loop. In addition to loops that condition the building, loops providing service water heating will also appear hear. Above: First table in Plant Loops Detail section.","title":"Plant Loops Detail"},{"location":"reference/openstudio_results_measure/#outdoor-air","text":"This section has a table that lists the number of occupants and volume of each zone along with the average and minimum values for mechanical ventilation and infiltration. Above: Outdoor Air section.","title":"Outdoor Air"},{"location":"reference/openstudio_results_measure/#cash-flow","text":"This section shows the cash flow over the analysis period for your project, which defaults to 25 years. You wont see any data in this section unless you have added lifecycle costs and or utility rates to your model. As with other charts you can hover over chart data or click the blue heading above the chart to view precise value in tabular form. Above: Cash Flow chart.","title":"Cash Flow"},{"location":"reference/openstudio_results_measure/#site-and-source-summary","text":"This section has two tables. The lists total and net values for both site and source energy. The second table lists the site to source conversion factors by fuel to calculate values in the first table. Above: Site and Source Summary section.","title":"Site and Source Summary"},{"location":"reference/openstudio_results_measure/#schedule-overview","text":"This section provides a small chart for each schedule used in the model. All of the possible day profiles for a schedule are overlaid on each other. Rules are listed by their priority with a description for the days of the week and dates of the year they are applicable. The colors for the default profile and rules match what is used in the application. You can expand the table for this section to see the use count for each schedule. Above: Schedule Overview charts.","title":"Schedule Overview"},{"location":"reference/openstudio_results_measure/#measure-arguments","text":"For this measure, there is a check box for each section to determine if you want to generate that section or not. You could use this to create a streamline report with only the sections are are interested visible. If you disable sections that request time-series data, then those output variables won't be requested, resulting in a smaller SQL file. Since most sections in this report only request tabular data, it won't affect much, but for other future reports this could be more useful. The Zone Conditions section requests hourly zone temperature and humidity values and the HVAC Load Profiles section requests monthly outdoor air dry bulb temperatures. Above: View of Arguments in OpenStudio Results measure.","title":"Measure Arguments"},{"location":"reference/openstudio_results_measure/#developing-your-own-reporting-measures","text":"This measure was created to fill a need in providing easy access to more detailed model and simulation results data, but it serves another role as well. It was created in a way that was very easy to use as a template for custom user reports. We setup a framework and added support for a variety of chart types. The only coding required to make your own custom report is to provide the data. While there is a Measure Writing Guide within the OpenStudio Software Development Kit (SDK) documentation, it seemed fitting to explain here how you would add your own tables and charts to this report, or to create a new clean report. The first step is to gather the data you want in a table or chart. This could be simulation results, model inputs, or even just hard coded table as in this example. It could also be read in from a text file. In the \"resources\" folder of the measure this is a file named \"os_lib_reporting.rb\". Most of the methods (start with \"def OsLib_Reporting.my_method\") in this file do one of two things. They define a section used in the report or they define a table that is used by one of the sections. The code below shows two sample methods with hard coded table data about tasty treats. You can copy and modify these methods to show what you want. The section description and all of the table data can be in one method, or if it is easier to break things up you can have a method for each table, and then call it from the method that makes the section. in this case. template_tables << OsLib_Reporting.template_table(model,sqlFile,runner) adds in a table defined elsewhere. The code for a sample section method and table method are shown below. # create template section def OsLib_Reporting.template_section(model,sqlFile,runner,name_only = false) # array to hold tables template_tables = [] # gather data for section @template_section = {} @template_section[:title] = 'Tasty Treats' @template_section[:tables] = template_tables # stop here if only name is requested this is used to populate display name for arguments if name_only == true return @template_section end # notes: # The data below would typically come from the model or simulation results # You can loop through objects to make a table for each item of that type, such as air loops # If a section will only have one table you can leave the table title blank and just rely on the section title # these will be updated later to support graphs # create table template_table_01= {} template_table_01[:title] = 'Fruit' template_table_01[:header] = ['Definition','Value'] template_table_01[:units] = ['','$/pound'] template_table_01[:data] = [] # add rows to table template_table_01[:data] << ['Banana',0.23] template_table_01[:data] << ['Apple',0.75] template_table_01[:data] << ['Orange',0.50] # add table to array of tables template_tables << template_table_01 # using helper method that generates table for second example template_tables << OsLib_Reporting.template_table(model,sqlFile,runner) return @template_section end # create template section def OsLib_Reporting.template_table(model,sqlFile,runner) # create a second table template_table = {} template_table[:title] = 'Ice Cream' template_table[:header] = ['Definition','Base Flavor','Toppings','Value'] template_table[:units] = ['','','','scoop'] template_table[:data] = [] # add rows to table template_table[:data] << ['Vanilla','Vanilla','NA',1.5] template_table[:data] << ['Rocky Road','Chocolate','Nuts',1.5] template_table[:data] << ['Mint Chip','Mint','Chocolate Chips',1.5] return template_table end This example doesn't discuss charts, but you can look at other methods to learn how to add charts. It looks something like this output_data_space_type_breakdown[:chart_type] = 'simple_pie' output_data_space_type_breakdown[:chart] = [] # data for graph output_data_space_type_breakdown[:chart] << JSON.generate({:label =>display,:value => value, :color => color}) Once you have defined your need to tell the measure to use the new section method. For this last step you need to add a line to the possible_sections method of the measure.rb file. In this example I added result << \"template_section\" to the top of the table of contents. def possible_sections result = [] # methods for sections in order that they will appear in report result << \"template_section\" result << \"building_summary_section\" result << \"annual_overview_section\" result << \"monthly_overview_section\" result << \"utility_bills_rates_section\" result << \"envelope_section_section\" result << \"space_type_breakdown_section\" result << \"space_type_details_section\" # removed other sections from code example to make it shorter return result end Adding that line of code will not only add the new section to the arguments for the measure, but will also call the method in the run method of the measure to gather the data and generate an HTML table. If you don't want to extend the os_lib_reporting.rb file, you can create your own version that functions in the same way, but only has code for sections you are using. You just need to modify this line at the top of the \"measure.rb\" file to point to your library require \"#{File.dirname(__FILE__)}/resources/os_lib_reporting\" . Below is a screenshot of the resting Tasty Treats section. If you want to change the title in the HTML file it is in this code in the \"report.html.erb\" file in the \"resources\" directory <title>OpenStudio Results</title> . Above: Example section with two tables. You can write completely custom measure reports that don't look anything like this, and use different html and charting technologies. This framework is just provided as a way to make reports where all you want to worry about is how to get the data you want to see, and not how to generate the HTML code.","title":"Developing Your Own Reporting Measures"},{"location":"reference/parametric_analysis_tool_2/","text":"Parametric Analysis Tool 2.x (PAT) Interface Guide PAT allows you to quickly try out and compare manually specified combinations of measures, optimize designs, calibrate models, perform parametric sensitivity analysis, and much more. Manually specified combinations of measures may be run locally on your computer. Algorithmic analyses (e.g. optimization, design of experiments, etc) can be run by connecting to a separately provisioned instance of the OpenStudio Server. Create a Project When you launch PAT you have the option to create a new project or open an existing project. To create a new project : Click the \"Make New Project\" button. Type the name for the project, and click \"Continue.\" Note that project names should not include spaces. Browse to the directory where you want the project saved, and click the \"Open\" button. PAT will create a new directory for your project at this location. Open an Existing Project You can open an existing PAT project when you first launch PAT or from the file menu. In either case a dialog will open to find the path where you created your Project. There is no file to select, just browse to the top level project directory. Interface Overview PAT 2.x functionality is broken down into six tabs along the left side of the window: Specify analysis mode (manual or algorithmic), seed models, weather files, measures, and measure options. Manually create design alternatives (Not used for algorithmic analysis) Specify outputs for algorithm-based analysis (Not used for manual analysis) Run an analysis and manage the analysis server View reports View the server In general, a PAT workflow moves through the six vertical tabs from top to bottom. PAT allows the user to specify design alternatives manually or automate the process using a selection of algorithms - e.g. sampling, optimization, etc. The analysis mode is selected at the top of tab one, and dictates whether tabs two or three are used along with the types of computing resources (local or cloud) that can be selected on tab four. Load a Seed Model and Weather File Select your seed model, the model that will serve as the basis for creating design alternatives, by clicking the folder symbol for the \"Default Seed Model\". Select your weather file by clicking the folder symbol for the \"Default Weather File.\" Note: PAT 2.x allows the user to specify multiple seed and weather files that may all be used within a project. Add Measures and Create Measure Options If you want to learn more about measures, check out the About Measures section. Check out the Measure Writing Guide to start writing your own custom measures. PAT works with three classes of measures: OpenStudio Measures operate on the OpenStudio Model (.osm) before it is converted to an EnergyPlus input file (.idf). EnergyPlus Measures operate on the .idf file just before it is simulated in EnergyPlus. Reporting Measures run after the simulation has been performed and are used to produce postprocess results, automate quality checks, and create custom reports and chart. Click the \"Add Measure\" buttons by the OpenStudio, EnergyPlus, or Reporting Measure text to add measures of that type to your project. The Building Component Library (BCL) dialog that opens after clicking the buttons allows you to add measures stored on your computer or to find new measures from the online BCL. Download Measures From the Building Component Library (BCL) The Building Component Library dialog allows you to filter by measure location, measure type, measure category, and measures sub-category. When it first opens it will have all locations checked except for BCL (Online). It will also have only one measure type checked, based on which button you clicked in the measures tab. Nothing is checked by default in the \"Category\" section which has the effect of all categories showing. Once you check one or more categories or sub-categories only those will be shown. That filter will remain in place when you come back to this dialog in the future. So if you don't see the measure you expect, make sure the category filters are setup correctly. PAT keeps track of four distinct measure locations: My Project - includes measures that have already been added to your current PAT project. Measure Directory - shows measures you have stored in a user configurable \"MyMeasures\" directory on your computer. A best practice is to only create or modify measures in your \"MyMeasures\" directory. __Local __ - includes any BCL measures you may have already downloaded to your computer. BCL (Online) - contains all publicly available measures located in the online BCL. To use add these to a project they must first be downloaded, which copies them to your local library. Note: In rare instances, the BCL dialog may appear empty even when local content exists or the online BCL has been added to the filter. This can happen when OpenStudio's \"measure manager\" process is not halted normally. The issue is easily resolved by quitting PAT, and using your computer's task manager to look for an \"openstudio\" process. Halting this process enables the BCL dialog to work normally again. To download measures: Check the \"BCL (Online)\" box under filter options to show BCL content. Check filters to narrow down the list of measures by type, category, and subcategory. Click the black arrow in the \"Edit/Copy\" column of the grid once you've found a measure you're interested in. When the symbol changes from a black download arrow to the green document symbol the measure has been downloaded and added to your local library. Clicking the green document symbol will create a copy of the measure in your \"MyMeasures\" directory. This is useful when creating variations of existing measures. Once downloaded, PAT will continue to check to see if an updated version is available in the BCL. Available updates will be indicated with a symbol in the \"updates\" column. Simply click the symbol to download the latest version to your local library. Add Measures to the Project Clicking the blue plus will add a measure from your local library or \"MyMeasures\" directory to your project. Measures with a gray plus have not yet been downloaded from the BCL, and cannot be added. Above: Filtered View showing Online BCL OpenStudio Fenestration Measures. The \"Set Window to Wall Ratio\" Measure has been downloaded from the BCL but not yet added to the project. After adding a measure to your project the blue plus will change to a green check mark. After closing the BCL dialog, measures are now loaded into the project. In this example, two measures have been added. The ordering of measures in PAT matters. Measures run from top to bottom in the user interface, and they may be reordered using the up or down arrows at the right. The \"x,\" also at the right, may be used to delete a measure from the project. Note that each measure also has an arrow just to its left. This arrow is used to expand and collapse the measure, allowing the user to specify variables, arguments, and more. Create Measure Options and Define Variables Every measure in the manual analysis project needs at least one measure \"option.\" An option describes a measure and particular set of measure arguments that will be applied to create a specific design alternative. For example, a generic fan efficiency measure would likely have an efficiency argument. Applying that generic measure with a specific value for efficiency would constitute an option representing a specific fan product. Clicking the \"Add Measure Option\" button adds a column to the right side of the grid for the measure. Newly created options have a generic option name, description, and inherit any default values specified by the measure. The variable column and associated checkboxes are used to specify which arguments will vary across design options. Each option must be given a unique (and meaningful) name that will be referenced when constructing design alternatives. The option description field is free-form, and can be used to capture notes regarding the option that may be used by reporting measures. In this example, three design options have been created with variable window to wall ratios. Add the OpenStudio Results Reporting Measure to the Project The standard OpenStudio Results Measure must be added to every project as an option for each design alternative. Manual project reports and most algorithmic workflows rely on outputs defined by this measure to work properly. PAT will run without this measure and an associated measure option, but results will not appear correctly. Create Design Alternatives The second tab is used to create design alternatives. Buttons can be used to create and copy individual alternatives or create one alternative for each measure option in the project. Design alternatives appear in a simple grid that allows rapid \"pull down menu\" selection of seed model, weather file, and measure options. Design alternative name and description fields are free form. It is considered a best practice to enter meaningful descriptions in these fields to document the project. Design alternatives may be deleted using the \"x\" button on the left side of the screen. Rows may be rearranged manually using the up and down arrows to the left, or sorted alphabetically by clicking the grid headings. The order of design alternatives on this tab has no bearing on simulation order or results reporting. Note: Recall from the previous section that each design alternative must have an OpenStudio Results Measure option. A useful tip for accomplishing this quickly is to highlight the first option cell in the OpenStudio Results column, type the first letter of your Option (the letter O in this example), tap the down arrow, and repeat. Adding Outputs in Manual Mode This tab is unused in manual mode, and is revisted later in this document when discussing algorithmic workflows. Running an Analysis Locally PAT 2.x configures a \"mini server\" on your computer to perform local analysis. This is essentially the same server that is used to run large-scale cloud analyses, enabling projects to scale and migrate between computing systems easily. The local server begins to start up as soon as you launch PAT, and is usually ready to perform analysis within a minute. This is indicated by a server status green checkmark at the top of the screen. Clicking the Run Entire Workflow button starts an analysis. As simulation results are completed, PAT's status will update to appraise you of progress. Changing tabs during active simulation is prevented to avoid accidentally altering an analysis mid-run. Completed design alternatives may be expanded to view measure or simulation log messages. The OpenStudio Standard Report, EnergyPlus output, results from any other reporting measure options may be viewed by clicking the graph symbol and selecting the report of interest. View Analysis Reports PAT 2.x includes three built-in reports that help the user compare design alternatives. The default summary table compares consumption, demand, and economic metrics for all of the design alternatives. A selection field near the top of the table allows the user to specify which of the alternatives is to be used as the datum for performance comparison. Analysis results shown in subsequent rows are relative to the datum's modeled values. The reports selection field at the top of the window may also be used to produce end use stacked bar charts broken down by fuel type. The third default report is intended for use by modelers working with utility design assistance programs and the Energy Design Assistance Project Tracker (EDAPT). This report is used to generate data for upload to EDAPT. View OpenStudio Server The final tab provides a view into PAT's OpenStudio Server, and will not be necessary for users performing manual analyses. It is of greater importance when performing algorithmic analysis, and will be discussed later in this document. Menu Bar Functions The File menu allows you to create a new project, open an existing project, save a project, or save a copy of a project under a new name. Saving a copy of a project creates a new directory structure including copies of seed models, weather files, project measures, etc. The Windows menu allows the user to open the BCL dialog, set the location of the \"MyMeasures\" directory, and open up a set of server troubleshooting tools that may be helpful for advanced users. Algorithmic Mode Setting Up an Algorithm with the Measures Tab PAT 2.x has also been designed to enable large-scale exploration of design spaces using a range of sampling, optimization, and machine learning algorithms. Switching from \"Manual\" to \"Algorithmic\" in the Analysis selection field of tab one alters PAT's interface and functionality in a number of ways. The first distinction is the addition of \"sampling method\" as a selection field near the top of tab one. This field includes a number of methods. In this example, Latin Hypercube Sampling (LHS) is selected as the algorithm that will be used to guide exploration of the design space. Immediately below the sampling method field are collapsable sections for algorithm settings, supplementary analysis files, and server scripts. A documentation button provides guidance relevant to each algorithm and its settings. Algorithmic mode significantly alters the measure section of tab one. The concept of manual mode's measure \"option\" no longer applies and variable checkboxes now become selection fields that allow the user to specify the nature of measure quantities. Argument - Fixes the quanity as a static value for the analysis. Continuous - Assigns a continuous probability density function to a variable. Available distributions include uniform, triangular, normal, and log normal. Discrete - Allows the user to specify a specific set of distinct values with associated weights. Pivot - Forces the entire analysis to be performed against each specified value. e.g. An analysis problem with 25 samples and 3 pivots would create a total of 75 data points. Above: A measure contains both continuous and discrete variables. Above: The DOE Prototype Measure is applied to an empty seed model with three pivots: SmallOffice, MediumOffice, and LargeOffice. Subsequent measures will be applied to each of these building types, perhaps creating an office-centric technology potential analysis. This project is available as the Office Study example here . The Design Alternatives Tab in Algorithmic Mode Since the algorithm is specifying the design algorithms, there is no need to use the second tab. The Outputs Tab in Algorithmic Mode Analysis via algorithm tends to produce very large data sets. As such, the methods for visualizing results and teasing out valuable insights differ from the simple table views available in manual mode. In addition, some algorithms (e.g. optimizers) are goal seeking, and require specification of performance metrics to function properly. PAT's outputs tab is designed to specify key simulation outputs for use in post-processing large sets of simulation results or in forming performance objective functions. By default the outputs tab expects the OpenStudio Results Measure to be available to provide a nominal set of outputs, although additional reporting measures can be used to add more outputs. Pressing the \"Select Outputs\" button brings up a dialog of all measures specified by the reporting measure. The user can choose to select all of the outputs, or individual outputs. Selected outputs appear in the outputs tab along with additional fields. Visualize - Should be set to true for any variables the user wishes to examine via interactive visualizations, spreadsheet, or R dataframe export. Objective Function - Should be set to true for any variables that will be used by a goal-seeking algorithm as part of an objective function. Target Value - The target value for the output variable that will be sought by the goal-seeking algorithm. Weighting Factor - A multiplier used to create linear combinations of error functions in multi-objective optimization problems. The Run Tab in Algorithmic Mode The size of algorithm-based analysis problems generally exceeds the computational capability of a personal computer. PAT 2.x has been designed to run these sorts of analysis in the cloud or on dedicated servers. While PAT's \"mini-server\" still launches in the background, the application does not currently support simulation using local computing resources. Instead, PAT expects the user to select \"Run on Cloud\" as the Run option. This selection produces a dialog that enables the user to specify either an \"Existing Remote Server\" or Amazon Cloud. Provisioning a dedicated server with OpenStudio Server is beyond the scope of this tutorial. Interested users are referred to the OpenStudio-Server GitHub repository for further guidance on the topic. Amazon Web Service (AWS) has been pre-provisioned with Amazon Machine Images (AMIs) for OpenStudio Server that enable users to leverage large-scale computing with minimal effort and cost. New users will need to establish an account . Once created, use your AWS account to generate an Access and Secret key pair. In the PAT Run Tab, select \"Run on Cloud\" with \"Amazon Cloud\" as the server type. Press the New Cluster button and choose a cluster name to store your AWS cluster settings. Press the New AWS Credentials button and follow the prompts to enter your Access and Secret Keys. Like the Cluster name, the AWS credential name is used by PAT to help you manage multiple cluster or credential configurations. A field labeled \"AMI Name\" is used to specify the version of OpenStudio that the server and worker nodes will be provisioned with. The specific version of OpenStudio and the Standards Gem are listed next to this field once selected. The user is referred to AWS documentation related to server and worker options. The PAT UI provides an a brief description of the compute node configuration and approximate cost/hour. A PAT analysis requires a server and a minimum of one worker. Once configured, the user should press the start button next to the Cluster Status indicator on the right side of the UI. A dialog explaining the user's responsibility to monitor and manage AWS computing resources appears and must be acknowledge before proceeding. At this point, the server and worker provisioning process begins. As the dialog states, this process can take many minutes. Clicking on the View AWS Console button allows the user to monitor the process. Once the server is running, clicking the \"Run Entire Workflow\" button starts the analysis. Progress can be monitored within PAT or via the OpenStudio Server. One notable difference between running in manual mode with local computing resources and on the server is that detailed simulations are not automatically downloaded. These files can be quite large. Clicking on the blue \"OSM\" or \"Results\" cloud next to a data point will download the OpenStudio Model or completed data point zip file. The cloud buttons appear as green checkmarks when a download has occurred. Data point files are lost when the server shuts down, so it is important to download results that may be of particular interest. Exploring Algorithm Results with OpenStudio Server The OpenStudio Server tab is of much greater importance with algorithmic workflows. This same content may also be accessed through any web browser by clinking PAT's \"View Server\" button in the run tab or manually directing a web browser to http:// yourserverurl :8080. The top level view of OpenStudio Server provides a summary of completed or in-progress projects and analyses along with navigation options. The top level of an analysis (a specific run of a project) provides a high level summary of the project, links to more detail about the analysis, and status updates for all data points that have been completed, queued for simulation, or are in process. Important links on this page include: Project JSON - The JSON link near the top left of this screen is the OpenStudio Analysis (OSA) JSON that PAT produces for the Server. It is a complete definition of the analysis to be performed including SEED models, weather files, measures, arguments & variables, outputs, algorithms, etc. Project Log - Immediately next to the Project JSON is a log file, which can be helpful in debugging failed analyses. Downloads - These links download high level meta data and simulation results as CSV or R Data Frames for subsequent analysis. These results include only analysis inputs and outputs that have been defined in PAT. Detailed simulation results associated with individual data points must be downloaded in PAT or via individual data point web links. Data points - The bottom of the analysis page includes a snapshot of all data points along with their status, run times, and data point-specific links including the data point JSON file (OSW) and the data point zip file. Data and Visualizations - A number of useful project summaries and interactive visualization tools are built into OpenStudio Server. One of these, the parallel coordinate plot, is described in further detail below. The variables link near the top center of the analysis web page provides a concise summary of variables and arguments utilized by the analysis' algorithm. While any applicable measures are summarized in an adjacent page, this section provides more detail about how data points have been generated. In the example below, three building types form the core of the analysis. A five level \"Design of Experiments\" with lighting power density reduction percentage and window to wall ratio variables complete the study space. Other sampling methods (e.g. LHS) include thumbail graphics illustrating variable distributions. Parallel coordinate plots provide an interactive means of exploring large data sets and teasing out valuable insights. OpenStudio enables the user to select inputs and outputs that have been pre-defined in PAT's measures and outputs tabs. Checkboxes turn inputs on and off, and the individual plot axes can be re-ordered via drag and drop. In this first example, LHS is used to sample the parameter space for lighting power density, window to wall ratio, and the facade on which windows are placed. Energy Use Intensity (EUI) is selected as the output of interest. Example Projects Several sample PAT projects may be found here . Both the Office_Hvac and Office_Study projects are configured to run in manual model using local computing resources. The remaining \"SEB\" projects pertain to NREL's Site Entrance Building (SEB), and demonstrate the various algorithms available for use in the cloud. Several of the SEB projects are also notable as examples of performing sampling or optimization-based calibrations of a model using Actual Meteorlogic Year (AMY) and consumption data. The \"AddMonthlyJSONUtilityData\" measure is used to add electric and gas consumption data to the model. The \"CalibrationReportsEnhanced20\" reporting measure is used to create analysis outputs and charts that describe the calibration's \"goodness of fit.\" A Model Calibration Example As a closing example, consider the SEB \"PSO_2013\" project. This project utilizes the particle swarm algorithm to explore variations of the SEB seed model. OpenStudio Server's parallel coordinate plot is a convenient means of interacting with the large number of solutions generated during the analysis. Input or output coordinate ranges may be selected using the mouse to filter out solutions of interest - in this case, data points with low Coefficient of Variation of the Root Mean Squared Error (CVRMSE) and Net Mean Bias Error (NMBE) for both gas and electricity consumption. Data points which fall within the filtered ranges (indicated in blue) are provided as links below the plot. Clicking on one of these data points allows us to see the specific measure variable values that define the data point. This page also allows convenient download of the specific OpenStudio Workflow (OSW) that generate the point, the resulting model, simulation results, and associated reports. Output from the Enhanced Calibration Report for this data point is one of the available report links, and allows us to quickly visualize the performance of this particular model variant relative to the building's original measured consumption data.","title":"Parametric analysis tool 2"},{"location":"reference/parametric_analysis_tool_2/#create-a-project","text":"When you launch PAT you have the option to create a new project or open an existing project. To create a new project : Click the \"Make New Project\" button. Type the name for the project, and click \"Continue.\" Note that project names should not include spaces. Browse to the directory where you want the project saved, and click the \"Open\" button. PAT will create a new directory for your project at this location.","title":"Create a Project"},{"location":"reference/parametric_analysis_tool_2/#open-an-existing-project","text":"You can open an existing PAT project when you first launch PAT or from the file menu. In either case a dialog will open to find the path where you created your Project. There is no file to select, just browse to the top level project directory.","title":"Open an Existing Project"},{"location":"reference/parametric_analysis_tool_2/#interface-overview","text":"PAT 2.x functionality is broken down into six tabs along the left side of the window: Specify analysis mode (manual or algorithmic), seed models, weather files, measures, and measure options. Manually create design alternatives (Not used for algorithmic analysis) Specify outputs for algorithm-based analysis (Not used for manual analysis) Run an analysis and manage the analysis server View reports View the server In general, a PAT workflow moves through the six vertical tabs from top to bottom. PAT allows the user to specify design alternatives manually or automate the process using a selection of algorithms - e.g. sampling, optimization, etc. The analysis mode is selected at the top of tab one, and dictates whether tabs two or three are used along with the types of computing resources (local or cloud) that can be selected on tab four.","title":"Interface Overview"},{"location":"reference/parametric_analysis_tool_2/#load-a-seed-model-and-weather-file","text":"Select your seed model, the model that will serve as the basis for creating design alternatives, by clicking the folder symbol for the \"Default Seed Model\". Select your weather file by clicking the folder symbol for the \"Default Weather File.\" Note: PAT 2.x allows the user to specify multiple seed and weather files that may all be used within a project.","title":"Load a Seed Model and Weather File"},{"location":"reference/parametric_analysis_tool_2/#add-measures-and-create-measure-options","text":"If you want to learn more about measures, check out the About Measures section. Check out the Measure Writing Guide to start writing your own custom measures. PAT works with three classes of measures: OpenStudio Measures operate on the OpenStudio Model (.osm) before it is converted to an EnergyPlus input file (.idf). EnergyPlus Measures operate on the .idf file just before it is simulated in EnergyPlus. Reporting Measures run after the simulation has been performed and are used to produce postprocess results, automate quality checks, and create custom reports and chart. Click the \"Add Measure\" buttons by the OpenStudio, EnergyPlus, or Reporting Measure text to add measures of that type to your project. The Building Component Library (BCL) dialog that opens after clicking the buttons allows you to add measures stored on your computer or to find new measures from the online BCL.","title":"Add Measures and Create Measure Options"},{"location":"reference/parametric_analysis_tool_2/#download-measures-from-the-building-component-library-bcl","text":"The Building Component Library dialog allows you to filter by measure location, measure type, measure category, and measures sub-category. When it first opens it will have all locations checked except for BCL (Online). It will also have only one measure type checked, based on which button you clicked in the measures tab. Nothing is checked by default in the \"Category\" section which has the effect of all categories showing. Once you check one or more categories or sub-categories only those will be shown. That filter will remain in place when you come back to this dialog in the future. So if you don't see the measure you expect, make sure the category filters are setup correctly. PAT keeps track of four distinct measure locations: My Project - includes measures that have already been added to your current PAT project. Measure Directory - shows measures you have stored in a user configurable \"MyMeasures\" directory on your computer. A best practice is to only create or modify measures in your \"MyMeasures\" directory. __Local __ - includes any BCL measures you may have already downloaded to your computer. BCL (Online) - contains all publicly available measures located in the online BCL. To use add these to a project they must first be downloaded, which copies them to your local library. Note: In rare instances, the BCL dialog may appear empty even when local content exists or the online BCL has been added to the filter. This can happen when OpenStudio's \"measure manager\" process is not halted normally. The issue is easily resolved by quitting PAT, and using your computer's task manager to look for an \"openstudio\" process. Halting this process enables the BCL dialog to work normally again. To download measures: Check the \"BCL (Online)\" box under filter options to show BCL content. Check filters to narrow down the list of measures by type, category, and subcategory. Click the black arrow in the \"Edit/Copy\" column of the grid once you've found a measure you're interested in. When the symbol changes from a black download arrow to the green document symbol the measure has been downloaded and added to your local library. Clicking the green document symbol will create a copy of the measure in your \"MyMeasures\" directory. This is useful when creating variations of existing measures. Once downloaded, PAT will continue to check to see if an updated version is available in the BCL. Available updates will be indicated with a symbol in the \"updates\" column. Simply click the symbol to download the latest version to your local library.","title":"Download Measures From the Building Component Library (BCL)"},{"location":"reference/parametric_analysis_tool_2/#add-measures-to-the-project","text":"Clicking the blue plus will add a measure from your local library or \"MyMeasures\" directory to your project. Measures with a gray plus have not yet been downloaded from the BCL, and cannot be added. Above: Filtered View showing Online BCL OpenStudio Fenestration Measures. The \"Set Window to Wall Ratio\" Measure has been downloaded from the BCL but not yet added to the project. After adding a measure to your project the blue plus will change to a green check mark. After closing the BCL dialog, measures are now loaded into the project. In this example, two measures have been added. The ordering of measures in PAT matters. Measures run from top to bottom in the user interface, and they may be reordered using the up or down arrows at the right. The \"x,\" also at the right, may be used to delete a measure from the project. Note that each measure also has an arrow just to its left. This arrow is used to expand and collapse the measure, allowing the user to specify variables, arguments, and more.","title":"Add Measures to the Project"},{"location":"reference/parametric_analysis_tool_2/#create-measure-options-and-define-variables","text":"Every measure in the manual analysis project needs at least one measure \"option.\" An option describes a measure and particular set of measure arguments that will be applied to create a specific design alternative. For example, a generic fan efficiency measure would likely have an efficiency argument. Applying that generic measure with a specific value for efficiency would constitute an option representing a specific fan product. Clicking the \"Add Measure Option\" button adds a column to the right side of the grid for the measure. Newly created options have a generic option name, description, and inherit any default values specified by the measure. The variable column and associated checkboxes are used to specify which arguments will vary across design options. Each option must be given a unique (and meaningful) name that will be referenced when constructing design alternatives. The option description field is free-form, and can be used to capture notes regarding the option that may be used by reporting measures. In this example, three design options have been created with variable window to wall ratios.","title":"Create Measure Options and Define Variables"},{"location":"reference/parametric_analysis_tool_2/#add-the-openstudio-results-reporting-measure-to-the-project","text":"The standard OpenStudio Results Measure must be added to every project as an option for each design alternative. Manual project reports and most algorithmic workflows rely on outputs defined by this measure to work properly. PAT will run without this measure and an associated measure option, but results will not appear correctly.","title":"Add the OpenStudio Results Reporting Measure to the Project"},{"location":"reference/parametric_analysis_tool_2/#create-design-alternatives","text":"The second tab is used to create design alternatives. Buttons can be used to create and copy individual alternatives or create one alternative for each measure option in the project. Design alternatives appear in a simple grid that allows rapid \"pull down menu\" selection of seed model, weather file, and measure options. Design alternative name and description fields are free form. It is considered a best practice to enter meaningful descriptions in these fields to document the project. Design alternatives may be deleted using the \"x\" button on the left side of the screen. Rows may be rearranged manually using the up and down arrows to the left, or sorted alphabetically by clicking the grid headings. The order of design alternatives on this tab has no bearing on simulation order or results reporting. Note: Recall from the previous section that each design alternative must have an OpenStudio Results Measure option. A useful tip for accomplishing this quickly is to highlight the first option cell in the OpenStudio Results column, type the first letter of your Option (the letter O in this example), tap the down arrow, and repeat.","title":"Create Design Alternatives"},{"location":"reference/parametric_analysis_tool_2/#adding-outputs-in-manual-mode","text":"This tab is unused in manual mode, and is revisted later in this document when discussing algorithmic workflows.","title":"Adding Outputs in Manual Mode"},{"location":"reference/parametric_analysis_tool_2/#running-an-analysis-locally","text":"PAT 2.x configures a \"mini server\" on your computer to perform local analysis. This is essentially the same server that is used to run large-scale cloud analyses, enabling projects to scale and migrate between computing systems easily. The local server begins to start up as soon as you launch PAT, and is usually ready to perform analysis within a minute. This is indicated by a server status green checkmark at the top of the screen. Clicking the Run Entire Workflow button starts an analysis. As simulation results are completed, PAT's status will update to appraise you of progress. Changing tabs during active simulation is prevented to avoid accidentally altering an analysis mid-run. Completed design alternatives may be expanded to view measure or simulation log messages. The OpenStudio Standard Report, EnergyPlus output, results from any other reporting measure options may be viewed by clicking the graph symbol and selecting the report of interest.","title":"Running an Analysis Locally"},{"location":"reference/parametric_analysis_tool_2/#view-analysis-reports","text":"PAT 2.x includes three built-in reports that help the user compare design alternatives. The default summary table compares consumption, demand, and economic metrics for all of the design alternatives. A selection field near the top of the table allows the user to specify which of the alternatives is to be used as the datum for performance comparison. Analysis results shown in subsequent rows are relative to the datum's modeled values. The reports selection field at the top of the window may also be used to produce end use stacked bar charts broken down by fuel type. The third default report is intended for use by modelers working with utility design assistance programs and the Energy Design Assistance Project Tracker (EDAPT). This report is used to generate data for upload to EDAPT.","title":"View Analysis Reports"},{"location":"reference/parametric_analysis_tool_2/#view-openstudio-server","text":"The final tab provides a view into PAT's OpenStudio Server, and will not be necessary for users performing manual analyses. It is of greater importance when performing algorithmic analysis, and will be discussed later in this document.","title":"View OpenStudio Server"},{"location":"reference/parametric_analysis_tool_2/#menu-bar-functions","text":"The File menu allows you to create a new project, open an existing project, save a project, or save a copy of a project under a new name. Saving a copy of a project creates a new directory structure including copies of seed models, weather files, project measures, etc. The Windows menu allows the user to open the BCL dialog, set the location of the \"MyMeasures\" directory, and open up a set of server troubleshooting tools that may be helpful for advanced users.","title":"Menu Bar Functions"},{"location":"reference/parametric_analysis_tool_2/#algorithmic-mode","text":"","title":"Algorithmic Mode"},{"location":"reference/parametric_analysis_tool_2/#setting-up-an-algorithm-with-the-measures-tab","text":"PAT 2.x has also been designed to enable large-scale exploration of design spaces using a range of sampling, optimization, and machine learning algorithms. Switching from \"Manual\" to \"Algorithmic\" in the Analysis selection field of tab one alters PAT's interface and functionality in a number of ways. The first distinction is the addition of \"sampling method\" as a selection field near the top of tab one. This field includes a number of methods. In this example, Latin Hypercube Sampling (LHS) is selected as the algorithm that will be used to guide exploration of the design space. Immediately below the sampling method field are collapsable sections for algorithm settings, supplementary analysis files, and server scripts. A documentation button provides guidance relevant to each algorithm and its settings. Algorithmic mode significantly alters the measure section of tab one. The concept of manual mode's measure \"option\" no longer applies and variable checkboxes now become selection fields that allow the user to specify the nature of measure quantities. Argument - Fixes the quanity as a static value for the analysis. Continuous - Assigns a continuous probability density function to a variable. Available distributions include uniform, triangular, normal, and log normal. Discrete - Allows the user to specify a specific set of distinct values with associated weights. Pivot - Forces the entire analysis to be performed against each specified value. e.g. An analysis problem with 25 samples and 3 pivots would create a total of 75 data points. Above: A measure contains both continuous and discrete variables. Above: The DOE Prototype Measure is applied to an empty seed model with three pivots: SmallOffice, MediumOffice, and LargeOffice. Subsequent measures will be applied to each of these building types, perhaps creating an office-centric technology potential analysis. This project is available as the Office Study example here .","title":"Setting Up an Algorithm with the Measures Tab"},{"location":"reference/parametric_analysis_tool_2/#the-design-alternatives-tab-in-algorithmic-mode","text":"Since the algorithm is specifying the design algorithms, there is no need to use the second tab.","title":"The Design Alternatives Tab in Algorithmic Mode"},{"location":"reference/parametric_analysis_tool_2/#the-outputs-tab-in-algorithmic-mode","text":"Analysis via algorithm tends to produce very large data sets. As such, the methods for visualizing results and teasing out valuable insights differ from the simple table views available in manual mode. In addition, some algorithms (e.g. optimizers) are goal seeking, and require specification of performance metrics to function properly. PAT's outputs tab is designed to specify key simulation outputs for use in post-processing large sets of simulation results or in forming performance objective functions. By default the outputs tab expects the OpenStudio Results Measure to be available to provide a nominal set of outputs, although additional reporting measures can be used to add more outputs. Pressing the \"Select Outputs\" button brings up a dialog of all measures specified by the reporting measure. The user can choose to select all of the outputs, or individual outputs. Selected outputs appear in the outputs tab along with additional fields. Visualize - Should be set to true for any variables the user wishes to examine via interactive visualizations, spreadsheet, or R dataframe export. Objective Function - Should be set to true for any variables that will be used by a goal-seeking algorithm as part of an objective function. Target Value - The target value for the output variable that will be sought by the goal-seeking algorithm. Weighting Factor - A multiplier used to create linear combinations of error functions in multi-objective optimization problems.","title":"The Outputs Tab in Algorithmic Mode"},{"location":"reference/parametric_analysis_tool_2/#the-run-tab-in-algorithmic-mode","text":"The size of algorithm-based analysis problems generally exceeds the computational capability of a personal computer. PAT 2.x has been designed to run these sorts of analysis in the cloud or on dedicated servers. While PAT's \"mini-server\" still launches in the background, the application does not currently support simulation using local computing resources. Instead, PAT expects the user to select \"Run on Cloud\" as the Run option. This selection produces a dialog that enables the user to specify either an \"Existing Remote Server\" or Amazon Cloud. Provisioning a dedicated server with OpenStudio Server is beyond the scope of this tutorial. Interested users are referred to the OpenStudio-Server GitHub repository for further guidance on the topic. Amazon Web Service (AWS) has been pre-provisioned with Amazon Machine Images (AMIs) for OpenStudio Server that enable users to leverage large-scale computing with minimal effort and cost. New users will need to establish an account . Once created, use your AWS account to generate an Access and Secret key pair. In the PAT Run Tab, select \"Run on Cloud\" with \"Amazon Cloud\" as the server type. Press the New Cluster button and choose a cluster name to store your AWS cluster settings. Press the New AWS Credentials button and follow the prompts to enter your Access and Secret Keys. Like the Cluster name, the AWS credential name is used by PAT to help you manage multiple cluster or credential configurations. A field labeled \"AMI Name\" is used to specify the version of OpenStudio that the server and worker nodes will be provisioned with. The specific version of OpenStudio and the Standards Gem are listed next to this field once selected. The user is referred to AWS documentation related to server and worker options. The PAT UI provides an a brief description of the compute node configuration and approximate cost/hour. A PAT analysis requires a server and a minimum of one worker. Once configured, the user should press the start button next to the Cluster Status indicator on the right side of the UI. A dialog explaining the user's responsibility to monitor and manage AWS computing resources appears and must be acknowledge before proceeding. At this point, the server and worker provisioning process begins. As the dialog states, this process can take many minutes. Clicking on the View AWS Console button allows the user to monitor the process. Once the server is running, clicking the \"Run Entire Workflow\" button starts the analysis. Progress can be monitored within PAT or via the OpenStudio Server. One notable difference between running in manual mode with local computing resources and on the server is that detailed simulations are not automatically downloaded. These files can be quite large. Clicking on the blue \"OSM\" or \"Results\" cloud next to a data point will download the OpenStudio Model or completed data point zip file. The cloud buttons appear as green checkmarks when a download has occurred. Data point files are lost when the server shuts down, so it is important to download results that may be of particular interest.","title":"The Run Tab in Algorithmic Mode"},{"location":"reference/parametric_analysis_tool_2/#exploring-algorithm-results-with-openstudio-server","text":"The OpenStudio Server tab is of much greater importance with algorithmic workflows. This same content may also be accessed through any web browser by clinking PAT's \"View Server\" button in the run tab or manually directing a web browser to http:// yourserverurl :8080. The top level view of OpenStudio Server provides a summary of completed or in-progress projects and analyses along with navigation options. The top level of an analysis (a specific run of a project) provides a high level summary of the project, links to more detail about the analysis, and status updates for all data points that have been completed, queued for simulation, or are in process. Important links on this page include: Project JSON - The JSON link near the top left of this screen is the OpenStudio Analysis (OSA) JSON that PAT produces for the Server. It is a complete definition of the analysis to be performed including SEED models, weather files, measures, arguments & variables, outputs, algorithms, etc. Project Log - Immediately next to the Project JSON is a log file, which can be helpful in debugging failed analyses. Downloads - These links download high level meta data and simulation results as CSV or R Data Frames for subsequent analysis. These results include only analysis inputs and outputs that have been defined in PAT. Detailed simulation results associated with individual data points must be downloaded in PAT or via individual data point web links. Data points - The bottom of the analysis page includes a snapshot of all data points along with their status, run times, and data point-specific links including the data point JSON file (OSW) and the data point zip file. Data and Visualizations - A number of useful project summaries and interactive visualization tools are built into OpenStudio Server. One of these, the parallel coordinate plot, is described in further detail below. The variables link near the top center of the analysis web page provides a concise summary of variables and arguments utilized by the analysis' algorithm. While any applicable measures are summarized in an adjacent page, this section provides more detail about how data points have been generated. In the example below, three building types form the core of the analysis. A five level \"Design of Experiments\" with lighting power density reduction percentage and window to wall ratio variables complete the study space. Other sampling methods (e.g. LHS) include thumbail graphics illustrating variable distributions. Parallel coordinate plots provide an interactive means of exploring large data sets and teasing out valuable insights. OpenStudio enables the user to select inputs and outputs that have been pre-defined in PAT's measures and outputs tabs. Checkboxes turn inputs on and off, and the individual plot axes can be re-ordered via drag and drop. In this first example, LHS is used to sample the parameter space for lighting power density, window to wall ratio, and the facade on which windows are placed. Energy Use Intensity (EUI) is selected as the output of interest.","title":"Exploring Algorithm Results with OpenStudio Server"},{"location":"reference/parametric_analysis_tool_2/#example-projects","text":"Several sample PAT projects may be found here . Both the Office_Hvac and Office_Study projects are configured to run in manual model using local computing resources. The remaining \"SEB\" projects pertain to NREL's Site Entrance Building (SEB), and demonstrate the various algorithms available for use in the cloud. Several of the SEB projects are also notable as examples of performing sampling or optimization-based calibrations of a model using Actual Meteorlogic Year (AMY) and consumption data. The \"AddMonthlyJSONUtilityData\" measure is used to add electric and gas consumption data to the model. The \"CalibrationReportsEnhanced20\" reporting measure is used to create analysis outputs and charts that describe the calibration's \"goodness of fit.\"","title":"Example Projects"},{"location":"reference/parametric_analysis_tool_2/#a-model-calibration-example","text":"As a closing example, consider the SEB \"PSO_2013\" project. This project utilizes the particle swarm algorithm to explore variations of the SEB seed model. OpenStudio Server's parallel coordinate plot is a convenient means of interacting with the large number of solutions generated during the analysis. Input or output coordinate ranges may be selected using the mouse to filter out solutions of interest - in this case, data points with low Coefficient of Variation of the Root Mean Squared Error (CVRMSE) and Net Mean Bias Error (NMBE) for both gas and electricity consumption. Data points which fall within the filtered ranges (indicated in blue) are provided as links below the plot. Clicking on one of these data points allows us to see the specific measure variable values that define the data point. This page also allows convenient download of the specific OpenStudio Workflow (OSW) that generate the point, the resulting model, simulation results, and associated reports. Output from the Enhanced Calibration Report for this data point is one of the available report links, and allows us to quickly visualize the performance of this particular model variant relative to the building's original measured consumption data.","title":"A Model Calibration Example"},{"location":"reference/parametric_studies/","text":"Parametric Analysis Tool (PAT) Interface Guide PAT removes the need to hand edit each model to try out different architectures, energy efficiency measures, and mechanical systems. PAT applies scripts to your baseline model and lets you quickly compare many alternatives. OpenStudio has developed a workflow that allows energy modelers to create and run a customized parametric analysis using commercially available cloud computing services. This workflow will enable anyone to perform powerful parametric studies in a reasonable time for a relatively low cost. Creating a Project The Parametric Analysis Tool Quick Start Guide (PDF) provides an introduction to the interface and workflow for creating multiple design alternatives from a seed model. When you first open PAT you will see the screen below. It shows the workflow: Organize and edit measures for project Select measures and create design alternatives Run simulations Create and view reports Above: This is the opening screen for PAT. It gives you an overview of the workflow. You can move through the four vertical tabs on the left navigation by working in order from top to bottom. To create a project use the menu item File->New Project Above: The file menu provides new, open, save as, and other functionality. Above: The dialog takes you to a window to save your new project. Above: The video above shows the creation of a new project and gives a short introduction to the interface. Loading a Baseline Model Select your baseline model by hitting the browse button or typing in a path to your baseline OSM (OpenStudio Model) file. The weather file must be set on the baseline model before assigning it as the baseline in PAT. Above: The dialog takes you to a window to save your new project. Organize and Edit Measures for Project To add measures to your project, drag measures from the library to the central panel. If you want to learn more about measures, check out the About Measures section. There are three types of measures: OpenStudio measures are run on the OSM model before it is converted to an IDF. EnergyPlus measures can be run on the IDF file before it is handed to EnergyPlus. Reporting measures produce reports to chart results, provide quality assurance, and quality control on models. Drag measures from the library onto a drop zone in the middle panel. You must choose the right type of measure and the way you want it applied. Choose the Always Run Measures if you want the measure to run on every design alternative. Or, choose a Measure Group for measures you do not want to run on every model. Usually, measure groups contain one type of measure with different parameters, because only one measure from a measure group can be applied to each design alternative. The measures are applied to the model in order from top to bottom. You can reorder measure groups and always apply measures by using the gray arrows on the right. Above: The \"Set Window to Wall Ratio by Facade Group 1\" contains 3 versions of the same measure with different parameter settings. The next section will show how to set measure parameters. Check out the Measure Writing Guide and start writing your own custom measures. Above: Adding measures to your project and editing the parameters Defining Measures You can edit the measure parameters and names by selecting the measure in the central panel. The measure will be highlighted with orange and the right panel will go to the \"Edit\" tab. Above: Select a measure in the central panel and view the fields available for editing in the \"Edit\" panel on the right. Above: A warning icon will be next to the measure if a required field is empty. Go to the \"Edit\" tab on the right panel and look for the red text. Downloading Measures from the Building Component Library Before you can download measures from BCL, you will need an API key. Follow the instructions in the Getting Started section to get your key. From the \"Measures\" menu and \"Find Measures\" along the top or the \"Find Measures on BCL\" button at the bottom of the \"Library\" you can access the BCL. The \"Sync Project Measures with Library\" will updated any older measures in your project to the latest versions. Above: One of the ways to access the BCL measures is through the menu. Search for specific measures or browse through the categories. The \"Check All\" button can be used to select all the measures on a page view. If you already have a measure in your library the check box will be grayed out and checked. Above: Browse categories or search for measures to download. You can also search and browse measures on the Building Component Library site. Duplicating and Creating New Measures If you cannot find the measure you need, you can duplicate a measure and adjust it or you can write a custom measure. Learn more about writing measures in the Measure Writing Guide Above: Create your own measures with the features provided on the bottom of the right panel. Hit the \"New Measure\" icon to open a dialog to create your own measure. Write a descriptive title, more detailed descriptions, and select the measure type and taxonomy. Duplicating a measure opens up a similar dialog, but the name of the measure will have \"copy\" added at the end. The Measure Writing Guide will guide you through this process and provide best practices. Above: The dialog for creating your new measure is shown above. The Modeler Description is meant to assist the energy modeler. It should explain in some detail how the measure manipulates the model and, where appropriate, what model objects are being added or altered. It should offer any special guidance that the measure writer wants to communicate to people using the measure. Select Measures and Create Design Alternatives Above: This video shows you how to create design alternatives in an OpenStudio Parametric Analysis Tool Project. Run Simulations Select the design alternative you want to run. Selected alternatives turn the yellow-orange. Hit the run button to start the simulations. If you want to run a daylighting analysis with Radiance, select that option here. You must select the design alternatives you want to run before hitting the run buttons. Selected items have an orange highlight. Above: Screenshot of the \"Run\" tab with design alternatives selected. Above: Running your simulations. Create and View Reports Above: This video shows the simulation results of a parametric analysis and then shows you how to inspect a specific design alternative in the SketchUp Plugin. Running on the Cloud There are a few things to do before you click the \"Turn on Cloud\" button. First, fill out the Cloud Settings dialogs from the Cloud menu, run your baseline model locally, and then make sure you have selected all of the design alternatives that you want to run. Choosing \"Select All\" will select all jobs that have not already been run locally, or on a previous cloud session. Select your baseline model, then run locally before you start the cloud to confirm that it is valid and will run properly. To do this you can deselect all other design alternatives, and then select the baseline only. Above: Get to the Cloud Settings at any time from the \"Cloud\" menu. Add information on your Amazon EC2 account and agree to the terms on the first screen. Get an Amazon EC2 account and learn more about using Amazon cloud at aws.amazon.com . Use the AWS Console to monitor your account charges. Not monitoring your account carefully can result in unexpected charges. Currently only Amazon EC2 is available through PAT. Above: Fill out the first screen and agree to terms before continuing to the second screen. On the second screen of the \"Cloud Settings\" dialog, confirm that you have chosen the desired server, worker, and number of workers. As soon as you hit the \"Turn on Cloud\" button you will start incurring charges, and the smallest increment is one hour. If you have to cancel and re-start it you will be charged again. Review Amazon pricing at http://aws.amazon.com/ec2/pricing/ . Above: Fill out the first screen and agree to terms before continuing to the second screen. Above: The video above demonstrates running simulations on the cloud. The \"Monitor Use\" dialog under the Cloud menu will show you how many instances you have in your current project as well as other projects. If your \"Total Instances Running\" is more than 0, and you don't know why, you can go to the EC2 Console website to terminate them. The \"Estimated EC2 Charges\" value is directly from Amazon, but may be up to 24 hours delayed. As a result you won't see this change on the fly as you are working on a project, you will typically see it the next day. Above: Open this dialog from the \"Cloud\" menu. The \"Turn on the Cloud\" button has several states to let you know the status of the cloud. Above: The states of the cloud button are shown. You can download standard or detailed results from your runs. If you want detailed results, click on the download button in the table. You can choose to download all of the results in detail but it may be a large download. Above: The states of the cloud download button are shown. While your project is running on the cloud, you can choose the design alternative and select \"Download Detailed Results for Selected File\" button if you want more detailed data on some of the options. Quitting PAT while the cloud is on will not close the EC2 instances. If you Launch PAT again but open a different project it may look like the cloud is off, but that is only relevant for that current project. To properly end the cloud session in PAT, re-open the PAT project (if you have closed it) and then click the button to stop the cloud. For a few minutes you will see \"Stopping Cloud.\" Once you stop the cloud you will no longer be able to download detailed simulation results. If this happens and you want to get one, you can always run that job locally. It is generally not recommended to download detailed results for all design alternatives, as that will use a lot of hard drive space and network bandwidth. It is always a good idea to go to the EC2 website to confirm that the instances have shut down. To view your EC2 web console, click the \"Manage all Projects with AWS Console\" in the \"Monitor Use\" dialog or \"AWS Management Console\" in the \"Cloud Settings\" dialog. It will take you to this address http://aws.amazon.com/console/ . Click \"Sign in to the AWS Console\" Above: Check your status on AWS and terminate sessions if you have problems in PAT. OpenStudio Cloud Management Console While your runs are completing on the cloud and after they are finished, you can explore your results with the OpenStudio Cloud Management Console. Above: This pie chart shows the progress of the runs. Select \"View Analysis\" to explore results. Above: The red boxes added to the screenshot above shows where you can select charts and download results in different formats: List of Measures List of Variables View Parallel Coordinates Plot View Scatter Plot View XY Plot Interactive XY Plot Download CSV Download R Data Frame Debug Log Viewing Results You can open individual design alternative reports (.html files) in your browser. EnergyPlus and standard and calibration OpenStudio reports can be found by right clicking on a design alternative, on the Results tab, and selecting the results you want to view. Above: Right click on design alternative to get these options. If your model includes calibration reports, the calibration button at the top of the results will display those in a table format in the application. Publications A Parametric Analysis Tool for Building Energy Design Workflows: Application to a Utility Design Assistance Incentive Program (PDF)","title":"Parametric studies"},{"location":"reference/parametric_studies/#creating-a-project","text":"The Parametric Analysis Tool Quick Start Guide (PDF) provides an introduction to the interface and workflow for creating multiple design alternatives from a seed model. When you first open PAT you will see the screen below. It shows the workflow: Organize and edit measures for project Select measures and create design alternatives Run simulations Create and view reports Above: This is the opening screen for PAT. It gives you an overview of the workflow. You can move through the four vertical tabs on the left navigation by working in order from top to bottom. To create a project use the menu item File->New Project Above: The file menu provides new, open, save as, and other functionality. Above: The dialog takes you to a window to save your new project. Above: The video above shows the creation of a new project and gives a short introduction to the interface.","title":"Creating a Project"},{"location":"reference/parametric_studies/#loading-a-baseline-model","text":"Select your baseline model by hitting the browse button or typing in a path to your baseline OSM (OpenStudio Model) file. The weather file must be set on the baseline model before assigning it as the baseline in PAT. Above: The dialog takes you to a window to save your new project.","title":"Loading a Baseline Model"},{"location":"reference/parametric_studies/#organize-and-edit-measures-for-project","text":"To add measures to your project, drag measures from the library to the central panel. If you want to learn more about measures, check out the About Measures section. There are three types of measures: OpenStudio measures are run on the OSM model before it is converted to an IDF. EnergyPlus measures can be run on the IDF file before it is handed to EnergyPlus. Reporting measures produce reports to chart results, provide quality assurance, and quality control on models. Drag measures from the library onto a drop zone in the middle panel. You must choose the right type of measure and the way you want it applied. Choose the Always Run Measures if you want the measure to run on every design alternative. Or, choose a Measure Group for measures you do not want to run on every model. Usually, measure groups contain one type of measure with different parameters, because only one measure from a measure group can be applied to each design alternative. The measures are applied to the model in order from top to bottom. You can reorder measure groups and always apply measures by using the gray arrows on the right. Above: The \"Set Window to Wall Ratio by Facade Group 1\" contains 3 versions of the same measure with different parameter settings. The next section will show how to set measure parameters. Check out the Measure Writing Guide and start writing your own custom measures. Above: Adding measures to your project and editing the parameters","title":"Organize and Edit Measures for Project"},{"location":"reference/parametric_studies/#defining-measures","text":"You can edit the measure parameters and names by selecting the measure in the central panel. The measure will be highlighted with orange and the right panel will go to the \"Edit\" tab. Above: Select a measure in the central panel and view the fields available for editing in the \"Edit\" panel on the right. Above: A warning icon will be next to the measure if a required field is empty. Go to the \"Edit\" tab on the right panel and look for the red text.","title":"Defining Measures"},{"location":"reference/parametric_studies/#downloading-measures-from-the-building-component-library","text":"Before you can download measures from BCL, you will need an API key. Follow the instructions in the Getting Started section to get your key. From the \"Measures\" menu and \"Find Measures\" along the top or the \"Find Measures on BCL\" button at the bottom of the \"Library\" you can access the BCL. The \"Sync Project Measures with Library\" will updated any older measures in your project to the latest versions. Above: One of the ways to access the BCL measures is through the menu. Search for specific measures or browse through the categories. The \"Check All\" button can be used to select all the measures on a page view. If you already have a measure in your library the check box will be grayed out and checked. Above: Browse categories or search for measures to download. You can also search and browse measures on the Building Component Library site.","title":"Downloading Measures from the Building Component Library"},{"location":"reference/parametric_studies/#duplicating-and-creating-new-measures","text":"If you cannot find the measure you need, you can duplicate a measure and adjust it or you can write a custom measure. Learn more about writing measures in the Measure Writing Guide Above: Create your own measures with the features provided on the bottom of the right panel. Hit the \"New Measure\" icon to open a dialog to create your own measure. Write a descriptive title, more detailed descriptions, and select the measure type and taxonomy. Duplicating a measure opens up a similar dialog, but the name of the measure will have \"copy\" added at the end. The Measure Writing Guide will guide you through this process and provide best practices. Above: The dialog for creating your new measure is shown above. The Modeler Description is meant to assist the energy modeler. It should explain in some detail how the measure manipulates the model and, where appropriate, what model objects are being added or altered. It should offer any special guidance that the measure writer wants to communicate to people using the measure.","title":"Duplicating and Creating New Measures"},{"location":"reference/parametric_studies/#select-measures-and-create-design-alternatives","text":"Above: This video shows you how to create design alternatives in an OpenStudio Parametric Analysis Tool Project.","title":"Select Measures and Create Design Alternatives"},{"location":"reference/parametric_studies/#run-simulations","text":"Select the design alternative you want to run. Selected alternatives turn the yellow-orange. Hit the run button to start the simulations. If you want to run a daylighting analysis with Radiance, select that option here. You must select the design alternatives you want to run before hitting the run buttons. Selected items have an orange highlight. Above: Screenshot of the \"Run\" tab with design alternatives selected. Above: Running your simulations.","title":"Run Simulations"},{"location":"reference/parametric_studies/#create-and-view-reports","text":"Above: This video shows the simulation results of a parametric analysis and then shows you how to inspect a specific design alternative in the SketchUp Plugin.","title":"Create and View Reports"},{"location":"reference/parametric_studies/#running-on-the-cloud","text":"There are a few things to do before you click the \"Turn on Cloud\" button. First, fill out the Cloud Settings dialogs from the Cloud menu, run your baseline model locally, and then make sure you have selected all of the design alternatives that you want to run. Choosing \"Select All\" will select all jobs that have not already been run locally, or on a previous cloud session. Select your baseline model, then run locally before you start the cloud to confirm that it is valid and will run properly. To do this you can deselect all other design alternatives, and then select the baseline only. Above: Get to the Cloud Settings at any time from the \"Cloud\" menu. Add information on your Amazon EC2 account and agree to the terms on the first screen. Get an Amazon EC2 account and learn more about using Amazon cloud at aws.amazon.com . Use the AWS Console to monitor your account charges. Not monitoring your account carefully can result in unexpected charges. Currently only Amazon EC2 is available through PAT. Above: Fill out the first screen and agree to terms before continuing to the second screen. On the second screen of the \"Cloud Settings\" dialog, confirm that you have chosen the desired server, worker, and number of workers. As soon as you hit the \"Turn on Cloud\" button you will start incurring charges, and the smallest increment is one hour. If you have to cancel and re-start it you will be charged again. Review Amazon pricing at http://aws.amazon.com/ec2/pricing/ . Above: Fill out the first screen and agree to terms before continuing to the second screen. Above: The video above demonstrates running simulations on the cloud. The \"Monitor Use\" dialog under the Cloud menu will show you how many instances you have in your current project as well as other projects. If your \"Total Instances Running\" is more than 0, and you don't know why, you can go to the EC2 Console website to terminate them. The \"Estimated EC2 Charges\" value is directly from Amazon, but may be up to 24 hours delayed. As a result you won't see this change on the fly as you are working on a project, you will typically see it the next day. Above: Open this dialog from the \"Cloud\" menu. The \"Turn on the Cloud\" button has several states to let you know the status of the cloud. Above: The states of the cloud button are shown. You can download standard or detailed results from your runs. If you want detailed results, click on the download button in the table. You can choose to download all of the results in detail but it may be a large download. Above: The states of the cloud download button are shown. While your project is running on the cloud, you can choose the design alternative and select \"Download Detailed Results for Selected File\" button if you want more detailed data on some of the options. Quitting PAT while the cloud is on will not close the EC2 instances. If you Launch PAT again but open a different project it may look like the cloud is off, but that is only relevant for that current project. To properly end the cloud session in PAT, re-open the PAT project (if you have closed it) and then click the button to stop the cloud. For a few minutes you will see \"Stopping Cloud.\" Once you stop the cloud you will no longer be able to download detailed simulation results. If this happens and you want to get one, you can always run that job locally. It is generally not recommended to download detailed results for all design alternatives, as that will use a lot of hard drive space and network bandwidth. It is always a good idea to go to the EC2 website to confirm that the instances have shut down. To view your EC2 web console, click the \"Manage all Projects with AWS Console\" in the \"Monitor Use\" dialog or \"AWS Management Console\" in the \"Cloud Settings\" dialog. It will take you to this address http://aws.amazon.com/console/ . Click \"Sign in to the AWS Console\" Above: Check your status on AWS and terminate sessions if you have problems in PAT.","title":"Running on the Cloud"},{"location":"reference/parametric_studies/#openstudio-cloud-management-console","text":"While your runs are completing on the cloud and after they are finished, you can explore your results with the OpenStudio Cloud Management Console. Above: This pie chart shows the progress of the runs. Select \"View Analysis\" to explore results. Above: The red boxes added to the screenshot above shows where you can select charts and download results in different formats: List of Measures List of Variables View Parallel Coordinates Plot View Scatter Plot View XY Plot Interactive XY Plot Download CSV Download R Data Frame Debug Log","title":"OpenStudio Cloud Management Console"},{"location":"reference/parametric_studies/#viewing-results","text":"You can open individual design alternative reports (.html files) in your browser. EnergyPlus and standard and calibration OpenStudio reports can be found by right clicking on a design alternative, on the Results tab, and selecting the results you want to view. Above: Right click on design alternative to get these options. If your model includes calibration reports, the calibration button at the top of the results will display those in a table format in the application.","title":"Viewing Results"},{"location":"reference/parametric_studies/#publications","text":"A Parametric Analysis Tool for Building Energy Design Workflows: Application to a Utility Design Assistance Incentive Program (PDF)","title":"Publications"},{"location":"reference/refguide_radiance/","text":"OpenStudio-Radiance Reference Guide This reference guide explains the methods used in OpenStudio to utilize Radiance to simulate the daylight ingress in your OpenStudio model, allowing for higher fidelity simulations of daylighting-related energy efficiency measures. Radiance is not constrained to simple geometry, and the OpenStudio model supports interior architectural detail such as interior partition surfaces (for representing columns, soffits, furniture, etc) and air walls (for eliminating thermal zone boundaries that do not correspond to any actual building architecture). This allows for a more accurate characterization of the spatial distribution of daylight in the OpenStudio model. For OpenStudio v1.7.0 , added support for window shades and wall thickness has increased the utility of the Radiance simulation option in the OpenStudio application. With OpenStudio v1.9.0 , the Radiance simulation option has been refactored (moved) to a measure, eliminating the \"daylight simulation engine\" selection radio buttons from the app, and modifying the workflow slightly. Overview In short, OpenStudio manages the model translation, simulation, and results processing of an OpenStudio building model (.osm), deriving geometry, materials, loads, schedules, and site information from the OSM. An annual climate-based daylight simulation is performed, new lighting load schedules are generated and embedded in the osm for the subsequent EnergyPlus simulation. In addition, a number of daylight metrics are calculated for those spaces with daylighting objects in them (illuminance maps and glare sensors), and are reported in a comma-delineated format, suitable for import and plotting in the modeler's tool of choice. Modeling Shading Controls with the 3-Phase Method The 3-Phase method is used in OpenStudio for conducting annual climate-based daylight simulations in a reasonably fast manner. This method solves the flux transfer from the sky to the window separately from the flux transfer from the window to the point(s) of interest in the space. These matrices are called the daylight matrix (DMX) and view matrix (VMX) , respectively. A third matrix called the transmission matrix (T), is represented by a bidirectional scattering distribution function (BSDF). The BSDF optically characterizes the shading layer and is inserted into the matrix and multiplied by a sky matrix (s) for each timestep to give a single hourly result for the model: I 3ph = VTDs Where: I = Result matrix containing time series of illuminance or luminance result V = View matrix, relating outgoing directions on window to desired results at interior T = Transmission matrix, relating incident window directions to exiting directions (BSDF) D = Daylight matrix, relating sky patches to incident directions on window s = Sky matrix, a collection of sky vectors (NOTE: in the 3-phase method, the solar flux is represented by the three sky matrix patches closest to the solar position at the given timestep.) We rely on the rfluxmtx tool in Radiance to handle the creation of all the necessary daylight coefficient matrices, and on some generic BSDFs from the Building Component Library to represent the shading layers. The OpenStudio-to-Radiance model translator groups the building fenestration by each unique combination of the following properties: orientation visible light transmittance shading control All windows with no shading control are grouped together into a single group called Window Group Zero (WG0), and are calculated together. Then, windows matching each unique combination of the properties above are also grouped together, into sequentially-numbered groups (WG1, WG2, etc). An annual illuminance schedule for each window group is calculated, and in the case of controlled window groups, a schedule is calculated once for that group with the shades up, and another one for the shades down. A shade schedule is generated, based on incident solar irradiance on the glazing, and this is used to create a final Building Illuminance Schedule which takes the correct timestep illuminance values for each window group and sums them together for each day, for the entire year.","title":"OpenStudio-Radiance Reference Guide"},{"location":"reference/refguide_radiance/#openstudio-radiance-reference-guide","text":"This reference guide explains the methods used in OpenStudio to utilize Radiance to simulate the daylight ingress in your OpenStudio model, allowing for higher fidelity simulations of daylighting-related energy efficiency measures. Radiance is not constrained to simple geometry, and the OpenStudio model supports interior architectural detail such as interior partition surfaces (for representing columns, soffits, furniture, etc) and air walls (for eliminating thermal zone boundaries that do not correspond to any actual building architecture). This allows for a more accurate characterization of the spatial distribution of daylight in the OpenStudio model. For OpenStudio v1.7.0 , added support for window shades and wall thickness has increased the utility of the Radiance simulation option in the OpenStudio application. With OpenStudio v1.9.0 , the Radiance simulation option has been refactored (moved) to a measure, eliminating the \"daylight simulation engine\" selection radio buttons from the app, and modifying the workflow slightly.","title":"OpenStudio-Radiance Reference Guide"},{"location":"reference/refguide_radiance/#overview","text":"In short, OpenStudio manages the model translation, simulation, and results processing of an OpenStudio building model (.osm), deriving geometry, materials, loads, schedules, and site information from the OSM. An annual climate-based daylight simulation is performed, new lighting load schedules are generated and embedded in the osm for the subsequent EnergyPlus simulation. In addition, a number of daylight metrics are calculated for those spaces with daylighting objects in them (illuminance maps and glare sensors), and are reported in a comma-delineated format, suitable for import and plotting in the modeler's tool of choice.","title":"Overview"},{"location":"reference/refguide_radiance/#modeling-shading-controls-with-the-3-phase-method","text":"The 3-Phase method is used in OpenStudio for conducting annual climate-based daylight simulations in a reasonably fast manner. This method solves the flux transfer from the sky to the window separately from the flux transfer from the window to the point(s) of interest in the space. These matrices are called the daylight matrix (DMX) and view matrix (VMX) , respectively. A third matrix called the transmission matrix (T), is represented by a bidirectional scattering distribution function (BSDF). The BSDF optically characterizes the shading layer and is inserted into the matrix and multiplied by a sky matrix (s) for each timestep to give a single hourly result for the model: I 3ph = VTDs Where: I = Result matrix containing time series of illuminance or luminance result V = View matrix, relating outgoing directions on window to desired results at interior T = Transmission matrix, relating incident window directions to exiting directions (BSDF) D = Daylight matrix, relating sky patches to incident directions on window s = Sky matrix, a collection of sky vectors (NOTE: in the 3-phase method, the solar flux is represented by the three sky matrix patches closest to the solar position at the given timestep.) We rely on the rfluxmtx tool in Radiance to handle the creation of all the necessary daylight coefficient matrices, and on some generic BSDFs from the Building Component Library to represent the shading layers. The OpenStudio-to-Radiance model translator groups the building fenestration by each unique combination of the following properties: orientation visible light transmittance shading control All windows with no shading control are grouped together into a single group called Window Group Zero (WG0), and are calculated together. Then, windows matching each unique combination of the properties above are also grouped together, into sequentially-numbered groups (WG1, WG2, etc). An annual illuminance schedule for each window group is calculated, and in the case of controlled window groups, a schedule is calculated once for that group with the shades up, and another one for the shades down. A shade schedule is generated, based on incident solar irradiance on the glazing, and this is used to create a final Building Illuminance Schedule which takes the correct timestep illuminance values for each window group and sums them together for each day, for the entire year.","title":"Modeling Shading Controls with the 3-Phase Method"},{"location":"reference/sketchup_plugin_interface/","text":"OpenStudio SketchUp Plug-in Interface Guide This section provides the legend for toolbars and menus available in the Plug-in. File Management Tools in this set create, open, save, import, or export data to or from your model. Some have toolbar icons; some do not. These functions are also located the OpenStudio Plug-in menu. Icons Functionality ![New Model From Template Icon](../img/plugin_reference_guide/os_new.png) #### New OpenStudio Model This tool closes your current OpenStudio Model and creates a new one. On a Mac it creates an empty model and you have to go under the menu item __Extentions/OpenStudio User Scripts/On-Demand Template Generators/Space Type and Construction Set Wizard__ to add template items like constructions, schedules, and space types. On a PC the template dialog will be available once and you can choose templates. If you want to add additional template types you must go to the __Extentions/OpenStudio User Scripts/On-Demand Template Generators/Space Type and Construction Set Wizard__. ![Open OpenStudio Model Icon](../img/plugin_reference_guide/OSOpen-24_0.png) #### Open OpenStudio Model Use this feature to close your current OpenStudio Model and open an OpenStudio file (.osm). It does not close your current SketchUp file, but loads a different OpenStudio Model into it. ![Save OpenStudio Model Icon](../img/plugin_reference_guide/OSSave-24_0.png) #### Save OpenStudio Model Saves your OpenStudio Model as an OpenStudio file (.osm). If you save your OSM file and then save your SketchUp Model, the SketchUp Model will maintain a link to the OSM. If you close and reopen your linked SketchUp file (.skp), it will reload the content from the OSM file. All the energy model content is saved in the OSM file, not in the SketchUp file. The benefit of having a link to a SketchUp file is to maintain a relationship with non-OpenStudio content that you may have in your model, such as a base plan or base model. A linked SketchUp file also has saved scenes, drawing styles, and section cut location. When saving your OpenStudio Model, make sure your filename ends with the \".osm\" extension. If it does not have that extension, OpenStudio will not open the file. If you have files without this extension, you can manually rename them; they should open. ![Save As OpenStudio Model Icon](../img/plugin_reference_guide/OSSaveAs-24_0.png) #### Save As OpenStudio Model Using this feature saves your OpenStudio Model as a new OSM file and updates the SketchUp file to link to the newly saved OSM file. When saving your OpenStudio Model, make sure your filename ends with the \".osm\" extension. If it does not have this extension, OpenStudio will not open the file. If you have files without this extension, you can manually rename them; they should open. ![Import EnergyPlus Input Data File Icon](../img/plugin_reference_guide/import_idf.png) #### Import EnergyPlus Input Data File (IDF) This feature functions similarly to the Import OpenStudio Model tool. If you import an entire IDF Model, your current OpenStudio Model is closed and a new one is created from your IDF. When you import and then save an IDF Model, you will be prompted to save it as an OSM file. If you want to keep it as an IDF, you can choose the Export EnergyPlus Input Data File tool instead of the Save OpenStudio Model tool. If you have added geometry or other objects, such as interior partitions that are unique to an OpenStudio Model, you will lose or alter those objects when you export back to an IDF. Like the Import OpenStudio Model tool, the Import EnergyPlus Input Data File tool can be used to import additional content into your model. In this import workflow, your OpenStudio Model stays open and the import tool adds additional content from a previously saved IDF. Content types that can be imported from an IDF: - Constructions (including materials) - Schedules You can access these features under the Extensions/OpenStudio menu or the `File->Import` menu. *Space Loads* are unique to an OpenStudio Model, so they cannot be imported from an IDF. [![Import Dialog](../img/plugin_reference_guide/OpenStudioImportMenu_0.png)](../img/plugin_reference_guide/OpenStudioImportMenu_0.png) *Above: Import dialog allows you to import OSM files, constructions, schedules, and space loads. You can also import IDFs, gbXMLs, and SDDs through this menu.* ![Export IDF Icon](../img/plugin_reference_guide/IDFExport-24.png) #### Export EnergyPlus Input Data File Use this tool when exporting an IDF from an OSM. This can be useful if you need an IDF to use in an application that does not support the new OSM file format. Some model data may be lost when exporting to an IDF because the OSM file format supports many objects, such as interior partition groups and surfaces, that are not in EnergyPlus. If you export an OSM file with unsupported elements to an IDF, and then reimport it into OpenStudio, the unsupported elements will be gone. Good practice for a typical workflow is to always use your OSM file as the working file. You can run simulations in EnergyPlus directly from an OSM file by using the OpenStudio RunManager application as a stand-alone application or through the OpenStudio SketchUp Plug-in interface. When exploring an IDF, make sure your file name ends with the \".idf\" extension. If it does not have this extension, EnergyPlus and other applications may not open the file. If you have files without this extension, you can manually rename them; they should open. #### Import OpenStudio Model This tool can function similarly to the Open OpenStudio Model tool. If you import an entire model, your current model is closed and a new one loaded. When you import an OSM file and then save the OpenStudio Model, you will be prompted for a new filename. This prevents you from accidentally overwriting your original file. The Import OpenStudio Model tool can also be used to import additional content into your model. In this import workflow, your OpenStudio Model stays open and the Import tool adds content from a previously saved OSM file (see the Import dialog image above.) Content types that can be imported from an OSM file follow: - Constructions (including construction sets, constructions, and materials) - Schedules - Space loads #### Export OpenStudio Model This tool prompts you for a new filename for your saved file. As you continue to work, you alter your original file instead of the exported file. [![Export Dialog](../img/plugin_reference_guide/OpenStudioExportMenu_0.png)](../img/plugin_reference_guide/OpenStudioExportMenu_0.png) *Above: Export menu available through Extensions menu* #### Import gbXML File There is no toolbar icon to use for importing gbXML (Green Building XML) files; this functionality is available through the `Extensions->OpenStudio->Import->Import gbXML Model` menu item only. If you import a gbXML Model, your current OpenStudio Model is closed and a new one is created from your gbXML. When you import a gbXML Model and then save the model, you will be prompted to save it as an OSM file. The following gbXML element types are imported from gbXML to the OpenStudio Model: - Construction - Material - ScheduleDay - ScheduleWeek - Schedule - Campus - Building - Space - Surface - SubSurface #### Export gbXML File This functionality is available through the `Extensions->OpenStudio->Export->Export gbXML Model` menu item. Some information may be lost when exporting to a gbXML. This is because the OSM file format supports some object types that XMLs do not. #### Export Untranslated EnergyPlus IDF When an IDF is imported into the SketchUp Plug-in, a translation between EnergyPlus IDF and OpenStudio Model File occurs. OpenStudio does not yet support translation of all objects from EnergyPlus IDF to OSM file. To support users with workflows that switch between IDF and OSM file, the SketchUp Plug-in allows users to export IDF objects that were not translated during the import. These objects are written to a plain text IDF so the user may then reintegrate these untranslated objects with the IDF produced by the OSM file to IDF translation. After importing an EnergyPlus IDF, a prompt will alert the user about the objects that could not be translated to OSM file. [![Export Untranslated IDF](../img/plugin_reference_guide/width_untranslatedidf-importdialog.png)](../img/plugin_reference_guide/width_untranslatedidf-importdialog.png) *Above: User Prompt on EnergyPlus IDF Import* Modeling Tools Tools in this set create new zones, groups, and geometry. Icons Functionality ![New Space Icon](../img/plugin_reference_guide/new_space.png) #### New Space You can use the New Space tool to create a new OpenStudio Space. Activate the tool and then click where you want your zone origin to be. An OpenStudio Space is a top-level object in your SketchUp workspace. If you want to draw in the space, you first need to select the space, then enter it. There are two methods to select a space: 1. Click on the space. This may be difficult when other objects get in the way. 2. Find and click on the space within SketchUp's Outliner Window. This option is suitable when option 1 is not. Now that the space has been selected, a user can enter the space before drawing surfaces. The three methods to enter a selected space are: 1. Double-click on the space, or double-click on the space within SketchUp's Outliner Window. 2. Right-click on the space, or right-click on the space within SketchUp's Outliner Window. From the resulting contextual menu, click \"Edit Group\". 3. Click the Edit menu. Under this menu, choose \"Group\", or \"Solid Group\". Then click \"Edit Group\". While inside a space, beside drawing spaces, you can add objects. Shading groups, interior partition groups, daylighting control points, and luminance maps can be added to a space. An alternate method to make new spaces is to copy and paste existing spaces. After creating a space and adding any objects, you can edit them using the [OpenStudio Inspector](#openstudio-inspector). [![Selected Space and SketchUp's Outliner Window](../img/plugin_reference_guide/outliner_window_selected_space.png)](../img/plugin_reference_guide/outliner_window_selected_space.png) *Above: Screenshot of selected space and SketchUp's Outliner window* [![Entered Space and SketchUp's Outliner Window](../img/plugin_reference_guide/outliner_window_entered_space.png)](../img/plugin_reference_guide/outliner_window_entered_space.png) *Above: Screenshot of entered space and SketchUp's Outliner window* ![New Space Inspect](../img/plugin_reference_guide/width_inspector_space.png) *Above: Screenshot of OpenStudio Inspector with an OpenStudio Space selected* ![New Shading Surface Group Icon](../img/plugin_reference_guide/NewShading-24.png) #### New Shading Surface Group The New Shading Surface Group tool is used to create a new EnergyPlus shading group. Activate the tool and then click where you want your shading group origin to be. An EnergyPlus shading group can be a top-level object in your SketchUp workspace, or it can be placed within a space. If you want to draw in the group, you first need to select the group, then enter it. There are two methods to select a group: 1. Click on the group. This may be difficult when other objects get in the way. 2. Find and click on the group within SketchUp's Outliner Window. This option is suitable when option 1 is not. Now that the group has been selected, a user can enter the group before drawing Surfaces. The three methods to enter a selected group are: 1. Double-click on the group, or double-click on the group within SketchUp's Outliner Window. 2. Right-click on the group, or right-click on the group within SketchUp's Outliner Window. From the resulting contextual menu, click \"Edit Group\". 3. Click the Edit menu. Under this menu, choose \"Group\", or \"Solid Group\". Then click \"Edit Group\". You can create shading surface groups within or outside a space. Once you enter into a shading surface group, you can draw shading surfaces. An alternate method to make new shading groups is to copy and paste existing groups. ![New Interior Partition Surface Group Icon](../img/plugin_reference_guide/NewPartition-24.png) #### New Interior Partition Surface Group The New Interior Partition Surface Group tool is used to create a new OpenStudio Interior Partition Group. Activate the tool and then click where you want your interior partition group origin to be. If you want to draw in the group, you first need to select the group, then enter it. There are two methods to select a group: 1. Click on the group. This may be difficult when other objects get in the way. 2. Find and click on the group within SketchUp's Outliner Window. This option is suitable when option 1 is not. Now that the group has been selected, a user can enter the group before drawing surfaces. The three methods to enter a selected group are: 1. Double-click on the group, or double-click on the group within SketchUp's Outliner Window. 2. Right-click on the group, or right-click on the group within SketchUp's Outliner Window. From the resulting contextual menu, click \"Edit Group\". 3. Click the Edit menu. Under this menu, choose \"Group\", or \"Solid Group\". Then click \"Edit Group\". You can create interior partition groups within a space only. Once you enter into an interior partition group, you can draw interior partition surfaces. An alternate method to make new interior partition groups is to copy and paste existing groups. Interior partition surfaces are not used as heat transfer surfaces, but they still have an associated construction. This construction, along with the surface area, is used to create internal mass that is used to run simulations and create objects for IDF export. ![New Daylighting Controls Object Icon](../img/plugin_reference_guide/NewDaylighting-24.png) #### New Daylighting Control Object The New Daylighting Control Object tool creates a new OpenStudio Daylighting Control object. This consists of a single sensor, which by default will be placed 30 inches above the surface you click on. You can move the object with the SketchUp Move tool or via the OpenStudio Inspector, and you can set many attributes that feed information to EnergyPlus and [Radiance Daylighting Measure](https://bcl.nrel.gov/node/84189). The Glare Calculation Azimuth Angle of View Direction also changes the appearance of the object in OpenStudio. To report data from the sensors in EnergyPlus, you also need to include light objects in your model. Most space types in the template files already include a light object. You can create a daylighting control object from within a space, or you can copy and paste one from one space to another. ![Daylighting Control Objects](../img/plugin_reference_guide/width_SU_DaylightingControlObjects.png) *Above: Screenshot of daylighting controls objects inside a space* ![Daylighting Control Object Selected](../img/plugin_reference_guide/width_Inspector_DaylightingControl.png) *Above: Screenshot of OpenStudio Inspector with a daylighting controls object selected* To associate a daylighting control object with a thermal zone, select the desired thermal zone object and then choose a primary (and optionally a secondary) daylighting control object. __NOTE__: Secondary daylighting control objects are not supported by Radiance at this time, they (and the percentage of load controlled by them) are ignored. ![OpenStudio Inspector With a Thermal Zone Selected](../img/plugin_reference_guide/width_Inspector_thermal_zone.png) *Above: Screenshot of OpenStudio Inspector with a thermal zone selected* ![New Illuminance Map Icon](../img/plugin_reference_guide/NewIlluminance-24.png) #### New Illuminance Map The New Illuminance Map tool creates a new OpenStudio Illuminance Map object. This consists of a rectangle with a grid representing map data points. By default it will be placed 30 inches above the surface you click on. You can move and resize the illuminance map with the SketchUp Move and Scale tools and through the OpenStudio Inspector. To obtain data reported for the map in EnergyPlus, you also need to include a daylighting controls object and lights. Most space types in the template files already include a light object. You can create an illuminance map from within a space, or you can copy and paste the map into a different space. You can have multiple illuminance maps in a space. ![Illuminance Map Object Inside a Space](../img/plugin_reference_guide/illuminance_map.png)] *Above: Screenshot of illuminance map object inside a space.* ![OpenStudio Inspector With an Illuminance Map Object Selected](../img/plugin_reference_guide/width_Inspector_Illuminance_map.png) *Above: Screenshot of OpenStudio Inspector with an illuminance map object selected* To associate an illuminance map with a thermal zone, select the desired thermal zone object and then choose an illuminance map object. ![OpenStudio Inspector With a Thermal Zone Selected](../img/plugin_reference_guide/width_Inspector_thermal_zone.png) *Above: Screenshot of OpenStudio Inspector With a thermal zone selected* ![New Glare Sensor Icon](../img/plugin_reference_guide/NewGlare-24.png) #### New Glare Sensor The New Glare Sensor creates a new OpenStudio Glare Sensor that supports [Radiance Daylighting Measure](https://bcl.nrel.gov/node/84189) simulations. Unlike the illuminance map and daylighting control point, the glare sensor has no connection to a thermal zone. The default placement of the sensor is 30 inches above the surface you click on. You can move the object with the SketchUp Move tool or through the OpenStudio Inspector, and you can set many attributes that feed information to Radiance. You can create a glare sensor object from within a space, or you can copy and paste one into a different space. ![Glare Sensor](../img/plugin_reference_guide/width_SU_glaresensor.png) *Above: Screenshot of OpenStudio Inspector with a glare sensor selected* ![Surface Matching Icon](../img/plugin_reference_guide/SurfaceMatchingSelected-24.png) #### Surface Matching The Surface Matching tool is used to automatically set outside boundary conditions for space surfaces and assign the appropriate outside boundary object in adjacent spaces when \"surface\" is the outside boundary condition. The Surface Matching tool can match or unmatch surfaces in your selection or for the entire model. ![Surface Matching Dialog](../img/plugin_reference_guide/SU_SurfaceMatchingDialog.png) *Above: Screenshot of Surface Matching dialog box* ![Set Space Attributes Icon](../img/plugin_reference_guide/edit_spaces.png) #### Set Space Attributes The Space Attributes tool can be used to set attributes for one or more selected spaces in your OpenStudio Model. The first four pull-down menus (Space Type, Building Story, Construction Set, and Thermal Zone) set attributes of the selected space objects. The last two pull-down menus set attributes in the thermal zone associated with the selected spaces. Most of the menus allow you to choose from a list populated by the appropriate model objects or one of the following options: No Change, Clear Field, or Make a new Object. The exception is the ideal air loads, which has a \"no change\" option, or yes/no. The Thermostat menu is similar to the others, but does not offer the option to create a new thermostat. ![Space Attributes Dialog](../img/plugin_reference_guide/SU_SpaceAttributes_a.png) *Above: Screenshot of Space Attributes dialog box* The following image shows the model after a new Space Type is applied to two selected spaces. The render mode is set to Render by Space Type. ![Space Attributes Dialog example](../img/plugin_reference_guide/width_SU_SpaceAttributes_b.png) *Above: Screenshot of model after adding a new space type* ![Create Spaces from Diagrams Icon](../img/plugin_reference_guide/extrude.png) #### Create Spaces from Diagrams The Space Diagram tool allows you to use native SketchUp tools to draw a space diagram representing your building's floor plan. After drawing the diagram, you can select the surfaces and create a single-story or multistory building based on the diagram. Your model will have one Space for each surface in your diagram for each floor. You can use this tool multiple times. If you want to create a new diagram with a unique floor for higher floors, just repeat the steps you used for the original diagram. Surfaces that are not horizontal will be ignored; surfaces with improper surface normals will be flipped over. Once made, the spaces are like any other OpenStudio Space. You can enter the space and alter or extend your geometry to refine it beyond the basic geometry created by the Space Diagram tool. ![Space Diagram Dialog](../img/plugin_reference_guide/width_SU_SpaceDigram_a.png) *Above: Screenshot of Space Diagram dialog box* The following image shows the resulting model after using the Space Diagram tool. The loose geometry of the diagram will be saved onto a layer in SketchUp named \"OpenStudio - Space Diagrams\". Although the resulting spaces are saved in your OpenStudio Model (OSM file), the diagram is not. If you want to keep the diagram, you can save the SketchUp file as well. Even if you do not save the SketchUp file you will still have access to the diagram until you quit. If you want to make a change to the diagram, you can delete the spaces, alter the diagram, and re-project them. ![Extruded Model](../img/plugin_reference_guide/width_SU_SpaceDiagram_b.png) *Above: Screenshot of model after using the Space Diagram tool* ![Project Loose Geometry Icon](../img/plugin_reference_guide/project_geo.png) #### Project Loose Geometry The Project Loose Geometry tool allows you to use the native SketchUp tools to draw loose geometry onto surfaces of your building envelope. When you are ready to project these surfaces into the spaces of your model, you can open this tool and run it across all loose geometry or the selected loose geometry. Although this is often used to create fenestration, it can also be used to split a base surface into two base surfaces. The advantage of this tool--versus the traditional method of entering and drawing within a space--is that you can quickly create surfaces across many spaces without having to ever enter those spaces. If some of the surfaces you have selected are not in the same plane as a building surface, they will be ignored. ![Project Loose Geometry Dialog](../img/plugin_reference_guide/width_SU_ProjectGeo_a.png) *Above: Screenshot of Project Loose Geometry dialog box* The image below shows the resulting model after you have projected selected loose geometry. The loose geometry used for the projection operation will be moved to a layer in SketchUp named \"OpenStudio - Loose Geometry\". While the surfaces made in the spaces by the projection are saved in your OpenStudio Model (OSM file), the loose geometry is not saved in the OpenStudio Model. If you want to save this for future use, you can save the SketchUp file as well. ![Projected Geometry](../img/plugin_reference_guide/width_SU_ProjectGeo_b.png) *Above: Screenshot after projecting loose geometry* Information Tools Tools in this set are generally for viewing model attributes, however some editing may be done as well. Icons Functionality ![OpenStudio Inspector Icon](../img/plugin_reference_guide/Inspector-24.png) #### OpenStudio Inspector The OpenStudio Inspector displays information about your currently open OpenStudio Model. The Inspector Window is divided into three main areas: 1. The top left is the Select Type pane. This has a partial list of OpenStudio object types and identifies how many objects of a specific type are in your model. 2. The bottom left pane is the Select Object pane. If you make a selection in the Select Type pane, a list of objects of that type will be displayed in the Select Object pane. The objects listed in the Select Object pane have a number to indicate how many objects in the model refer to this object. Below the list are several buttons. The Plus button to create a new object of this type, a Copy button to copy the selected object, a minus button to delete the selected object, and a Purge button to purge unused objects of this type. For some object types, one or more of these buttons may be disabled. 3. The third and last pane of the Inspector is the Edit Object pane at the right. This displays the fields for the currently selected object in the Select Object pane. Some fields accept a string; others are edited via a pull-down list. For some object types, some fields may be hidden from the Inspector or locked from editing. This is by design. The OpenStudio Inspector is render mode aware. If you are in a render by class or render by boundary condition and use the SketchUp select tool to select a space, the OpenStudio Space will be selected in the Inspector. If, however, you are in render by space type, thermal zone, or story mode, a space type, thermal zone, or story will be selected in the Inspector. This is assuming that the space is an assigned space type, thermal zone, or story. The Render by Construction mode is similar, but you need to select a surface versus a space to select a construction object in the Inspector. Currently, if you select a thermal zone, space type, or construction object in the Inspector, it will not make a selection in the SketchUp Model that correlates to this object. The Inspector cannot select multiple objects at once. So if you select multiple spaces or surfaces in SketchUp, only one will be active in the Inspector. Similarly, you cannot use the Inspector to batch change the attributes for multiple objects at once. The [Set Space Attributes for Selected Spaces](#set-space-attributes) tool on the OpenStudio Toolbar does allow batch changes for space objects, and to a limited extent for zones that parent the spaces. ![Inspector Dialog](../img/plugin_reference_guide/width_SU_Inspector.png) *Above: Screenshot of OpenStudio Inspector with a space object selected* Screenshots of the OpenStudio Inspector with other object types selected are shown under the individual pages for those object types. ![Surface Search Icon](../img/plugin_reference_guide/SurfaceSearch-24.png) #### Surface Search The OpenStudio Surface Search tool enables you to search your model for surfaces with specific attributes. You can select the search results and visually isolate them by hiding all other surfaces. When you are finished, click \"Unhide All\" on the Surface Search Dialog to unhide the rest of the surfaces. Before searching on a large IDF, close SketchUp's Outliner Window to expedite the surface searching. While surfaces are hidden you can also use SketchUp's built-in \"View Hidden Geometry\" to quickly view all hidden surfaces. You can also search based on Surface Orientation. To do this, set both \"from\" and \"to\" to a single value if you want to find surfaces that face a specific direction, or you can set unique values to show surfaces within a range of angles. \"Exclude Horizontal Surfaces\" is generally intended to be used along with Surface Orientation search to hide surfaces with no azimuth. There are also check boxes to limit search results to non-convex surfaces or to surfaces with more than a set number of vertices. Once your search is complete, the resulting surfaces are selected in SketchUp. You can use this selection for other operations or scripts. ![Surface Search Dialog](../img/plugin_reference_guide/SU_SurfaceSearch.png) *Above: Screenshot of Surface Search dialog* ![Information Tool Icon](../img/plugin_reference_guide/InfoTool-24.png) #### Information Tool The OpenStudio Information Tool activates a cursor that, when placed over a model surface, shows the EnergyPlus or OpenStudio object attributes for that surface. The status bar shows the position of the cursor in world coordinates. The Information Tool is render mode aware and offers different data depending on your current render mode. The following screenshots and captions show the available data for the different render modes. Render by Surface Type and Render by Boundary condition offer a variety of data. Hold down the shift, control, or shift+control keys while hovering over a surface. Modifier keys are shown by the appropriate captions. (No Modifier Key) ![Information Tool in Render by Surface Type Mode Showing Surface Data](../img/plugin_reference_guide/width_SU_Info_Type_basic.png) *Above: Screenshot of Information Tool in Render by Surface Type mode showing surface data* The same data are displayed while in Render by Boundary Condition mode. (\"Shift\" Modifier Key) ![Information Tool in Render by Surface Type Mode Showing Construction Data](../img/plugin_reference_guide/width_SU_Info_Type_shift-const.png) *Above: Screenshot of Information Tool in Render by Surface Type mode showing construction data* The same data are displayed while in Render by Boundary Condition mode (\"Ctrl\" Modifier Key) ![Information Tool in Render by Surface Type Mode Showing Material Data](../img/plugin_reference_guide/width_SU_Info_Type_shift-material.png) *Above: Screenshot of Information Tool in Render by Surface Type mode showing material data* The same data are displayed while in Render by Boundary Condition mode (\"Shift + Ctrl\" Modifier Key) ![Information Tool in Render by Surface Type Mode Showing Space Data](../img/plugin_reference_guide/width_SU_Info_Type_shiftctrl-space.png) *Above: Screenshot of Information Tool in Render by Surface Type mode showing space data* The same data are displayed while in Render by Boundary Condition mode (No Modifier Key) ![Information Tool in Render by Construction Mode Showing Construction Data](../img/plugin_reference_guide/width_SU_info_construction.png) *Above: Screenshot of Information Tool in Render by Construction mode showing construction data* (No Modifier Key) ![Information Tool in Render by Space Type Mode Showing Space Type Data](../img/plugin_reference_guide/width_SU_Info_spacetype.png) *Above: Screenshot of Information Tool in Render by Space Type mode showing space type data* (No Modifier Key) ![Information Tool in Render by Thermal Zone Mode Showing Thermal Zone Data](../img/plugin_reference_guide/width_SU_Info_ThermalZone.png) *Above: Screenshot of Information Tool in Render by Thermal Zone mode showing thermal zone data* ![Errors and Warnings Icon](../img/plugin_reference_guide/Warning-24.png) #### OpenStudio Errors and Warnings The Input File Errors and Warnings dialog automatically opens when there is an error or warning when opening or importing a file. Many common geometry errors (upside-down floor or roof, inside-out window, non-coplanar surfaces, etc.) are fixed automatically when you open the input file. This dialog will also report unsupported IDF objects on import. ![Errors and Warnings Dialog](../img/plugin_reference_guide/error_02.png) *Above: Screenshot of Errors and Warnings dialog box* Rendering Modes This toolbar contains render modes that are used to change how heat transfer, shading, and interior partition surfaces are rendered. Icons Functionality ![Render by Surface Type Icon](../img/plugin_reference_guide/render_surface_class.png) #### Render by Surface Type The OpenStudio Render by Surface Type mode will render walls, roofs, windows, doors, floors, shading surfaces, and interior partition surfaces with unique colors. When you create new geometry, it will be automatically classified and rendered. If you try to assign a color yourself, the application will override you. You never need to use the paint bucket tool in this render mode. If you set a surface construction to \"Air Boundary\", it will be rendered as a translucent checkerboard pattern. This construction is intended to represent thermal zone boundaries that do not represent physical walls in the building. ![Model in Render by Surface Type Mode](../img/plugin_reference_guide/width_SU_Info_Type_basic.png) *Above: Screenshot of model in Render by Surface Type mode* ![Render by Boundary Condition Icon](../img/plugin_reference_guide/render_boundary.png) #### Render by Outside Boundary Condition The OpenStudio Render by Outside Boundary Condition mode will render surfaces by their outside boundary conditions. Only space surfaces have boundary conditions, so only they will be rendered with a color. Shading and interior partition surfaces will be white. This is a good rendering mode to diagnose problems with your model. It provides a quick way to globally look at boundary conditions throughout your model. You never need to use the paint bucket tool in this render mode. In the screenshot below, a section cut has been drawn to reveal the inside of the model, making the boundary condition of surfaces easy to see. If you set a surface construction to \"Air Boundary\", it will be rendered as a translucent checkerboard pattern. This construction is intended to represent thermal zone boundaries that do not represent physical walls in the building. ![Model in Render by Boundary Condition Mode](../img/plugin_reference_guide/SU_Render_Boundary.png) *Above: Screenshot of model in Render by Boundary Condition mode* The most common boundary conditions you will see are \"Outdoors, Surface, and Ground\", but there are actually 9 basic boundary modes, with a number of subsets within some conditions. For \"Outdoors\" there are also unique color variations to indicate if there is sun and or wind exposure. The following image shows the SketchUp materials for the various boundary conditions. ![Render by Boundary Condition Colors](../img/plugin_reference_guide/tut_BoundaryColorWorksheet.png) *Above: Render by Outside Boundary Condition color palette* ![Render by Construction Icon](../img/plugin_reference_guide/render_construction.png) #### Render by Construction The OpenStudio Render by Construction mode renders surfaces by their construction. Although this seems similar to Render by Surface Type, there are a number of differences: The Inspector Window is divided into three main areas: - In Render by Construction mode, surfaces are rendered by their construction, so if two windows do not have the same construction they will not have the same render color. The same logic is applied to other surface types. - Shading surfaces and interior partitions can have constructions assigned. If they do have constructions, they will be rendered just as space surfaces are. - Construction properties of a surface can be applied directly to a surface, or they can be inherited from other objects (space, space type, story, or building). The first time you click the Render by Construction button, it shows hard assigned and inherited constructions. If you click it again, it shows only hard assigned constructions. Other surfaces do not have a render color. Clicking the Render button again returns you to the default mode where hard assigned and inherited constructions are shown. As a note, this is not a render by material mode. Hence, two constructions that have the same outside material will have unique render colors. However, in this render mode you can set render color using either the SketchUp Paint Bucket or the Inspector. To use the Inspector, select the construction object and set the RGB values. These color settings are part of the OpenStudio Model and will be maintained the next time you open the model. ![Model in Render by Construction Mode](../img/plugin_reference_guide/width_SU_info_construction.png) *Above: Screenshot of model in Render by Construction mode* ![Render by Space Type Icon](../img/plugin_reference_guide/render_space_type.png) #### Render by Space Type The OpenStudio Render by Space Type mode renders each space based on the space type assigned to it. This is a two state button. The first time you click it, hard assigned and inherited space types are rendered. If you click it again, only hard assigned space types are given a render color. Space types can be assigned to a space or inherited from the building object. You can assign space types to a space by using the Set Attributes for Selected Spaces tool or the OpenStudio Inspector. The installed templates have preassigned colors for each space type, but you can use SketchUp's Paint Bucket tool or the OpenStudio Inspector to change the colors. These changes are saved as part of your OpenStudio Model. ![Render by Space Type Mode](../img/plugin_reference_guide/width_SU_Info_spacetype.png) *Above: Screenshot of model in Render by Space Type mode* ![Render by Thermal Zone Icon](../img/plugin_reference_guide/render_therm_zone.png) #### Render by Thermal Zone The OpenStudio Render by Thermal Zone mode renders each space based on the thermal zone assigned to it. You can assign a thermal zone to a space using the Set Attributes for Selected Spaces tool or the OpenStudio Inspector. When a new thermal zone is made, a color will be assigned to it. You can change that color using SketchUp's Paint Bucket tool or the OpenStudio Inspector. These changes are saved as part of your OpenStudio Model. ![Model in Render by Thermal Zone Mode](../img/plugin_reference_guide/width_SU_Info_ThermalZone.png) *Above: Screenshot of model in Render by Thermal Zone mode* ![Render by Building Story](../img/plugin_reference_guide/render_story.png) #### Render by Building Story The OpenStudio Render by Building Story mode renders each space based on the building story assigned to it. You can assign a building story to a space using the Set Attributes for Selected Spaces tool or the OpenStudio Inspector. When a new story is made, a color will be assigned to it. You can change that color by using SketchUp's Paint Bucket tool or the OpenStudio Inspector. These changes are saved as part of your OpenStudio Model. When you use the Create Spaces from Diagram tool to generate a multistory building the stories are assigned as part of that process. There is also a user script that can infer building stories from a model that has none assigned. ![Model in Render by Building Story Mode](../img/plugin_reference_guide/width_SU_Info_story.png) *Above: Screenshot of model in Render by Building Story mode* #### Render by Layer Render by Layer is a standard SketchUp feature. It will render content by layer. You can create layers to represent anything you want to track. For example, to organize your project by space types you can create or move zones to specific layers. Keep in mind that the layer structure isn't saved with the OSM file, so any layers you setup are just for your current session. ![Render By Layer mode](../img/plugin_reference_guide/width_ss_by_layer.png) *Above: Screenshot of model in Render By Layer mode* #### Render by Surface Normal The Render by Surface Normal mode is built on the SketchUp face setting where faces are rendered with the default front and back colors as opposed to their assigned materials. The outside face of a heat transfer surface will render white and the inside face will render red. This works as a quick diagnostic tool to look for reversed faces. In a clean model you shouldn't see red from the outside. Shading surfaces are an exception to this where you will see red on one of the two sides of each shading surface. ![Render By Surface Normal mode](../img/plugin_reference_guide/width_ss_surface_normal.png) *Above: Screenshot of model in Render By Surface Normal mode* Integration with Other OpenStudio Resources This set contains tools integration for other OpenStudio applications and resources. Icons Functionality ![Launch Current Model in OpenStudio Application Icon](../img/plugin_reference_guide/os_24.png) #### Launch Current Model in OpenStudio Application The Launch Current Model in OpenStudio Application button will launch your model in the OpenStudio Application. The model will also stay open in the SketchUp Plug-in. If you make changes and save them in the OpenStudio Application, be sure to reload the model in the SketchUp Plug-in before you make any changes in SketchUp. You should also reload the model in the OpenStudio Application if you have made additional changes in SketchUp. ![Help Icon](../img/plugin_reference_guide/Help-24_0.png) #### Help This takes you to the online help for the OpenStudio SketchUp Plug-in, where you are now. Additional OpenStudio Plug-in Tools About OpenStudio Plug-in For information on the SketchUp Plug-in version go to Extensions->OpenStudio->About OpenStudio . Above: Screenshot of SketchUp showing the About OpenStudio dialog path and window Preferences For information on the SketchUp Plug-in version go to Extensions->OpenStudio->Preferences . Above: The Preferences dialog enables you to set options related to updates, new thermal zone creation, user scripts. Most importantly, the Preferences dialog allows you to change the version of the OpenStudio Application used by the OpenStudio SketchUp Plug-in. Check for Update Check to see if you are using the most current release of the OpenStudio SketchUp Plugin by going to Extensions->OpenStudio->Check For Update . Above: Screenshot of Update dialog box Helpful SketchUp Tools Icons Functionality ![Hide Rest of Model Icon](../img/plugin_reference_guide/HideRest-24.png) #### Hide Rest of Model This activates SketchUp's native view function to hide everything but your currently open group or component. Isolating your current Zone makes it much easier to work on inter-zone geometry. ![Model with rest of model visible](../img/plugin_reference_guide/ss_hiderest_01.png) *Above: Screenshot of model with rest of model visible* ![model with rest of model hidde](../img/plugin_reference_guide/ss_hiderest_02.png) *Above: Screenshot of model with rest of model hidden* ![Hidden Geometry Icon](../img/plugin_reference_guide/SU_ViewHidden-24.png) #### View Hidden Geometry This activates SketchUp's native view function to view hidden geometry. This is particularly useful if you have used the OpenStudio Surface Search tool and you need to see the rest of the model to get your bearings. ![Show Hidden Geometry](../img/plugin_reference_guide/width_ss_show_hidden.png) *Above: Screenshot of model with View Hidden Geometry active* ![X-Ray Mode](../img/plugin_reference_guide/tbRenderTransparentLarge.png) #### View Model in X-Ray Mode This activates SketchUp's native face style setting to render all surfaces translucently. This allows you to quickly see internal model elements without having to create section cuts or hide parts of the model. ![Active X-Ray Rendering](../img/plugin_reference_guide/width_ss_xray.png) *Above: Screenshot of model with x-ray rendering active*","title":"SketchUp Plug-in Interface Guide"},{"location":"reference/sketchup_plugin_interface/#file-management","text":"Tools in this set create, open, save, import, or export data to or from your model. Some have toolbar icons; some do not. These functions are also located the OpenStudio Plug-in menu. Icons Functionality ![New Model From Template Icon](../img/plugin_reference_guide/os_new.png) #### New OpenStudio Model This tool closes your current OpenStudio Model and creates a new one. On a Mac it creates an empty model and you have to go under the menu item __Extentions/OpenStudio User Scripts/On-Demand Template Generators/Space Type and Construction Set Wizard__ to add template items like constructions, schedules, and space types. On a PC the template dialog will be available once and you can choose templates. If you want to add additional template types you must go to the __Extentions/OpenStudio User Scripts/On-Demand Template Generators/Space Type and Construction Set Wizard__. ![Open OpenStudio Model Icon](../img/plugin_reference_guide/OSOpen-24_0.png) #### Open OpenStudio Model Use this feature to close your current OpenStudio Model and open an OpenStudio file (.osm). It does not close your current SketchUp file, but loads a different OpenStudio Model into it. ![Save OpenStudio Model Icon](../img/plugin_reference_guide/OSSave-24_0.png) #### Save OpenStudio Model Saves your OpenStudio Model as an OpenStudio file (.osm). If you save your OSM file and then save your SketchUp Model, the SketchUp Model will maintain a link to the OSM. If you close and reopen your linked SketchUp file (.skp), it will reload the content from the OSM file. All the energy model content is saved in the OSM file, not in the SketchUp file. The benefit of having a link to a SketchUp file is to maintain a relationship with non-OpenStudio content that you may have in your model, such as a base plan or base model. A linked SketchUp file also has saved scenes, drawing styles, and section cut location. When saving your OpenStudio Model, make sure your filename ends with the \".osm\" extension. If it does not have that extension, OpenStudio will not open the file. If you have files without this extension, you can manually rename them; they should open. ![Save As OpenStudio Model Icon](../img/plugin_reference_guide/OSSaveAs-24_0.png) #### Save As OpenStudio Model Using this feature saves your OpenStudio Model as a new OSM file and updates the SketchUp file to link to the newly saved OSM file. When saving your OpenStudio Model, make sure your filename ends with the \".osm\" extension. If it does not have this extension, OpenStudio will not open the file. If you have files without this extension, you can manually rename them; they should open. ![Import EnergyPlus Input Data File Icon](../img/plugin_reference_guide/import_idf.png) #### Import EnergyPlus Input Data File (IDF) This feature functions similarly to the Import OpenStudio Model tool. If you import an entire IDF Model, your current OpenStudio Model is closed and a new one is created from your IDF. When you import and then save an IDF Model, you will be prompted to save it as an OSM file. If you want to keep it as an IDF, you can choose the Export EnergyPlus Input Data File tool instead of the Save OpenStudio Model tool. If you have added geometry or other objects, such as interior partitions that are unique to an OpenStudio Model, you will lose or alter those objects when you export back to an IDF. Like the Import OpenStudio Model tool, the Import EnergyPlus Input Data File tool can be used to import additional content into your model. In this import workflow, your OpenStudio Model stays open and the import tool adds additional content from a previously saved IDF. Content types that can be imported from an IDF: - Constructions (including materials) - Schedules You can access these features under the Extensions/OpenStudio menu or the `File->Import` menu. *Space Loads* are unique to an OpenStudio Model, so they cannot be imported from an IDF. [![Import Dialog](../img/plugin_reference_guide/OpenStudioImportMenu_0.png)](../img/plugin_reference_guide/OpenStudioImportMenu_0.png) *Above: Import dialog allows you to import OSM files, constructions, schedules, and space loads. You can also import IDFs, gbXMLs, and SDDs through this menu.* ![Export IDF Icon](../img/plugin_reference_guide/IDFExport-24.png) #### Export EnergyPlus Input Data File Use this tool when exporting an IDF from an OSM. This can be useful if you need an IDF to use in an application that does not support the new OSM file format. Some model data may be lost when exporting to an IDF because the OSM file format supports many objects, such as interior partition groups and surfaces, that are not in EnergyPlus. If you export an OSM file with unsupported elements to an IDF, and then reimport it into OpenStudio, the unsupported elements will be gone. Good practice for a typical workflow is to always use your OSM file as the working file. You can run simulations in EnergyPlus directly from an OSM file by using the OpenStudio RunManager application as a stand-alone application or through the OpenStudio SketchUp Plug-in interface. When exploring an IDF, make sure your file name ends with the \".idf\" extension. If it does not have this extension, EnergyPlus and other applications may not open the file. If you have files without this extension, you can manually rename them; they should open. #### Import OpenStudio Model This tool can function similarly to the Open OpenStudio Model tool. If you import an entire model, your current model is closed and a new one loaded. When you import an OSM file and then save the OpenStudio Model, you will be prompted for a new filename. This prevents you from accidentally overwriting your original file. The Import OpenStudio Model tool can also be used to import additional content into your model. In this import workflow, your OpenStudio Model stays open and the Import tool adds content from a previously saved OSM file (see the Import dialog image above.) Content types that can be imported from an OSM file follow: - Constructions (including construction sets, constructions, and materials) - Schedules - Space loads #### Export OpenStudio Model This tool prompts you for a new filename for your saved file. As you continue to work, you alter your original file instead of the exported file. [![Export Dialog](../img/plugin_reference_guide/OpenStudioExportMenu_0.png)](../img/plugin_reference_guide/OpenStudioExportMenu_0.png) *Above: Export menu available through Extensions menu* #### Import gbXML File There is no toolbar icon to use for importing gbXML (Green Building XML) files; this functionality is available through the `Extensions->OpenStudio->Import->Import gbXML Model` menu item only. If you import a gbXML Model, your current OpenStudio Model is closed and a new one is created from your gbXML. When you import a gbXML Model and then save the model, you will be prompted to save it as an OSM file. The following gbXML element types are imported from gbXML to the OpenStudio Model: - Construction - Material - ScheduleDay - ScheduleWeek - Schedule - Campus - Building - Space - Surface - SubSurface #### Export gbXML File This functionality is available through the `Extensions->OpenStudio->Export->Export gbXML Model` menu item. Some information may be lost when exporting to a gbXML. This is because the OSM file format supports some object types that XMLs do not. #### Export Untranslated EnergyPlus IDF When an IDF is imported into the SketchUp Plug-in, a translation between EnergyPlus IDF and OpenStudio Model File occurs. OpenStudio does not yet support translation of all objects from EnergyPlus IDF to OSM file. To support users with workflows that switch between IDF and OSM file, the SketchUp Plug-in allows users to export IDF objects that were not translated during the import. These objects are written to a plain text IDF so the user may then reintegrate these untranslated objects with the IDF produced by the OSM file to IDF translation. After importing an EnergyPlus IDF, a prompt will alert the user about the objects that could not be translated to OSM file. [![Export Untranslated IDF](../img/plugin_reference_guide/width_untranslatedidf-importdialog.png)](../img/plugin_reference_guide/width_untranslatedidf-importdialog.png) *Above: User Prompt on EnergyPlus IDF Import*","title":"File Management"},{"location":"reference/sketchup_plugin_interface/#modeling-tools","text":"Tools in this set create new zones, groups, and geometry. Icons Functionality ![New Space Icon](../img/plugin_reference_guide/new_space.png) #### New Space You can use the New Space tool to create a new OpenStudio Space. Activate the tool and then click where you want your zone origin to be. An OpenStudio Space is a top-level object in your SketchUp workspace. If you want to draw in the space, you first need to select the space, then enter it. There are two methods to select a space: 1. Click on the space. This may be difficult when other objects get in the way. 2. Find and click on the space within SketchUp's Outliner Window. This option is suitable when option 1 is not. Now that the space has been selected, a user can enter the space before drawing surfaces. The three methods to enter a selected space are: 1. Double-click on the space, or double-click on the space within SketchUp's Outliner Window. 2. Right-click on the space, or right-click on the space within SketchUp's Outliner Window. From the resulting contextual menu, click \"Edit Group\". 3. Click the Edit menu. Under this menu, choose \"Group\", or \"Solid Group\". Then click \"Edit Group\". While inside a space, beside drawing spaces, you can add objects. Shading groups, interior partition groups, daylighting control points, and luminance maps can be added to a space. An alternate method to make new spaces is to copy and paste existing spaces. After creating a space and adding any objects, you can edit them using the [OpenStudio Inspector](#openstudio-inspector). [![Selected Space and SketchUp's Outliner Window](../img/plugin_reference_guide/outliner_window_selected_space.png)](../img/plugin_reference_guide/outliner_window_selected_space.png) *Above: Screenshot of selected space and SketchUp's Outliner window* [![Entered Space and SketchUp's Outliner Window](../img/plugin_reference_guide/outliner_window_entered_space.png)](../img/plugin_reference_guide/outliner_window_entered_space.png) *Above: Screenshot of entered space and SketchUp's Outliner window* ![New Space Inspect](../img/plugin_reference_guide/width_inspector_space.png) *Above: Screenshot of OpenStudio Inspector with an OpenStudio Space selected* ![New Shading Surface Group Icon](../img/plugin_reference_guide/NewShading-24.png) #### New Shading Surface Group The New Shading Surface Group tool is used to create a new EnergyPlus shading group. Activate the tool and then click where you want your shading group origin to be. An EnergyPlus shading group can be a top-level object in your SketchUp workspace, or it can be placed within a space. If you want to draw in the group, you first need to select the group, then enter it. There are two methods to select a group: 1. Click on the group. This may be difficult when other objects get in the way. 2. Find and click on the group within SketchUp's Outliner Window. This option is suitable when option 1 is not. Now that the group has been selected, a user can enter the group before drawing Surfaces. The three methods to enter a selected group are: 1. Double-click on the group, or double-click on the group within SketchUp's Outliner Window. 2. Right-click on the group, or right-click on the group within SketchUp's Outliner Window. From the resulting contextual menu, click \"Edit Group\". 3. Click the Edit menu. Under this menu, choose \"Group\", or \"Solid Group\". Then click \"Edit Group\". You can create shading surface groups within or outside a space. Once you enter into a shading surface group, you can draw shading surfaces. An alternate method to make new shading groups is to copy and paste existing groups. ![New Interior Partition Surface Group Icon](../img/plugin_reference_guide/NewPartition-24.png) #### New Interior Partition Surface Group The New Interior Partition Surface Group tool is used to create a new OpenStudio Interior Partition Group. Activate the tool and then click where you want your interior partition group origin to be. If you want to draw in the group, you first need to select the group, then enter it. There are two methods to select a group: 1. Click on the group. This may be difficult when other objects get in the way. 2. Find and click on the group within SketchUp's Outliner Window. This option is suitable when option 1 is not. Now that the group has been selected, a user can enter the group before drawing surfaces. The three methods to enter a selected group are: 1. Double-click on the group, or double-click on the group within SketchUp's Outliner Window. 2. Right-click on the group, or right-click on the group within SketchUp's Outliner Window. From the resulting contextual menu, click \"Edit Group\". 3. Click the Edit menu. Under this menu, choose \"Group\", or \"Solid Group\". Then click \"Edit Group\". You can create interior partition groups within a space only. Once you enter into an interior partition group, you can draw interior partition surfaces. An alternate method to make new interior partition groups is to copy and paste existing groups. Interior partition surfaces are not used as heat transfer surfaces, but they still have an associated construction. This construction, along with the surface area, is used to create internal mass that is used to run simulations and create objects for IDF export. ![New Daylighting Controls Object Icon](../img/plugin_reference_guide/NewDaylighting-24.png) #### New Daylighting Control Object The New Daylighting Control Object tool creates a new OpenStudio Daylighting Control object. This consists of a single sensor, which by default will be placed 30 inches above the surface you click on. You can move the object with the SketchUp Move tool or via the OpenStudio Inspector, and you can set many attributes that feed information to EnergyPlus and [Radiance Daylighting Measure](https://bcl.nrel.gov/node/84189). The Glare Calculation Azimuth Angle of View Direction also changes the appearance of the object in OpenStudio. To report data from the sensors in EnergyPlus, you also need to include light objects in your model. Most space types in the template files already include a light object. You can create a daylighting control object from within a space, or you can copy and paste one from one space to another. ![Daylighting Control Objects](../img/plugin_reference_guide/width_SU_DaylightingControlObjects.png) *Above: Screenshot of daylighting controls objects inside a space* ![Daylighting Control Object Selected](../img/plugin_reference_guide/width_Inspector_DaylightingControl.png) *Above: Screenshot of OpenStudio Inspector with a daylighting controls object selected* To associate a daylighting control object with a thermal zone, select the desired thermal zone object and then choose a primary (and optionally a secondary) daylighting control object. __NOTE__: Secondary daylighting control objects are not supported by Radiance at this time, they (and the percentage of load controlled by them) are ignored. ![OpenStudio Inspector With a Thermal Zone Selected](../img/plugin_reference_guide/width_Inspector_thermal_zone.png) *Above: Screenshot of OpenStudio Inspector with a thermal zone selected* ![New Illuminance Map Icon](../img/plugin_reference_guide/NewIlluminance-24.png) #### New Illuminance Map The New Illuminance Map tool creates a new OpenStudio Illuminance Map object. This consists of a rectangle with a grid representing map data points. By default it will be placed 30 inches above the surface you click on. You can move and resize the illuminance map with the SketchUp Move and Scale tools and through the OpenStudio Inspector. To obtain data reported for the map in EnergyPlus, you also need to include a daylighting controls object and lights. Most space types in the template files already include a light object. You can create an illuminance map from within a space, or you can copy and paste the map into a different space. You can have multiple illuminance maps in a space. ![Illuminance Map Object Inside a Space](../img/plugin_reference_guide/illuminance_map.png)] *Above: Screenshot of illuminance map object inside a space.* ![OpenStudio Inspector With an Illuminance Map Object Selected](../img/plugin_reference_guide/width_Inspector_Illuminance_map.png) *Above: Screenshot of OpenStudio Inspector with an illuminance map object selected* To associate an illuminance map with a thermal zone, select the desired thermal zone object and then choose an illuminance map object. ![OpenStudio Inspector With a Thermal Zone Selected](../img/plugin_reference_guide/width_Inspector_thermal_zone.png) *Above: Screenshot of OpenStudio Inspector With a thermal zone selected* ![New Glare Sensor Icon](../img/plugin_reference_guide/NewGlare-24.png) #### New Glare Sensor The New Glare Sensor creates a new OpenStudio Glare Sensor that supports [Radiance Daylighting Measure](https://bcl.nrel.gov/node/84189) simulations. Unlike the illuminance map and daylighting control point, the glare sensor has no connection to a thermal zone. The default placement of the sensor is 30 inches above the surface you click on. You can move the object with the SketchUp Move tool or through the OpenStudio Inspector, and you can set many attributes that feed information to Radiance. You can create a glare sensor object from within a space, or you can copy and paste one into a different space. ![Glare Sensor](../img/plugin_reference_guide/width_SU_glaresensor.png) *Above: Screenshot of OpenStudio Inspector with a glare sensor selected* ![Surface Matching Icon](../img/plugin_reference_guide/SurfaceMatchingSelected-24.png) #### Surface Matching The Surface Matching tool is used to automatically set outside boundary conditions for space surfaces and assign the appropriate outside boundary object in adjacent spaces when \"surface\" is the outside boundary condition. The Surface Matching tool can match or unmatch surfaces in your selection or for the entire model. ![Surface Matching Dialog](../img/plugin_reference_guide/SU_SurfaceMatchingDialog.png) *Above: Screenshot of Surface Matching dialog box* ![Set Space Attributes Icon](../img/plugin_reference_guide/edit_spaces.png) #### Set Space Attributes The Space Attributes tool can be used to set attributes for one or more selected spaces in your OpenStudio Model. The first four pull-down menus (Space Type, Building Story, Construction Set, and Thermal Zone) set attributes of the selected space objects. The last two pull-down menus set attributes in the thermal zone associated with the selected spaces. Most of the menus allow you to choose from a list populated by the appropriate model objects or one of the following options: No Change, Clear Field, or Make a new Object. The exception is the ideal air loads, which has a \"no change\" option, or yes/no. The Thermostat menu is similar to the others, but does not offer the option to create a new thermostat. ![Space Attributes Dialog](../img/plugin_reference_guide/SU_SpaceAttributes_a.png) *Above: Screenshot of Space Attributes dialog box* The following image shows the model after a new Space Type is applied to two selected spaces. The render mode is set to Render by Space Type. ![Space Attributes Dialog example](../img/plugin_reference_guide/width_SU_SpaceAttributes_b.png) *Above: Screenshot of model after adding a new space type* ![Create Spaces from Diagrams Icon](../img/plugin_reference_guide/extrude.png) #### Create Spaces from Diagrams The Space Diagram tool allows you to use native SketchUp tools to draw a space diagram representing your building's floor plan. After drawing the diagram, you can select the surfaces and create a single-story or multistory building based on the diagram. Your model will have one Space for each surface in your diagram for each floor. You can use this tool multiple times. If you want to create a new diagram with a unique floor for higher floors, just repeat the steps you used for the original diagram. Surfaces that are not horizontal will be ignored; surfaces with improper surface normals will be flipped over. Once made, the spaces are like any other OpenStudio Space. You can enter the space and alter or extend your geometry to refine it beyond the basic geometry created by the Space Diagram tool. ![Space Diagram Dialog](../img/plugin_reference_guide/width_SU_SpaceDigram_a.png) *Above: Screenshot of Space Diagram dialog box* The following image shows the resulting model after using the Space Diagram tool. The loose geometry of the diagram will be saved onto a layer in SketchUp named \"OpenStudio - Space Diagrams\". Although the resulting spaces are saved in your OpenStudio Model (OSM file), the diagram is not. If you want to keep the diagram, you can save the SketchUp file as well. Even if you do not save the SketchUp file you will still have access to the diagram until you quit. If you want to make a change to the diagram, you can delete the spaces, alter the diagram, and re-project them. ![Extruded Model](../img/plugin_reference_guide/width_SU_SpaceDiagram_b.png) *Above: Screenshot of model after using the Space Diagram tool* ![Project Loose Geometry Icon](../img/plugin_reference_guide/project_geo.png) #### Project Loose Geometry The Project Loose Geometry tool allows you to use the native SketchUp tools to draw loose geometry onto surfaces of your building envelope. When you are ready to project these surfaces into the spaces of your model, you can open this tool and run it across all loose geometry or the selected loose geometry. Although this is often used to create fenestration, it can also be used to split a base surface into two base surfaces. The advantage of this tool--versus the traditional method of entering and drawing within a space--is that you can quickly create surfaces across many spaces without having to ever enter those spaces. If some of the surfaces you have selected are not in the same plane as a building surface, they will be ignored. ![Project Loose Geometry Dialog](../img/plugin_reference_guide/width_SU_ProjectGeo_a.png) *Above: Screenshot of Project Loose Geometry dialog box* The image below shows the resulting model after you have projected selected loose geometry. The loose geometry used for the projection operation will be moved to a layer in SketchUp named \"OpenStudio - Loose Geometry\". While the surfaces made in the spaces by the projection are saved in your OpenStudio Model (OSM file), the loose geometry is not saved in the OpenStudio Model. If you want to save this for future use, you can save the SketchUp file as well. ![Projected Geometry](../img/plugin_reference_guide/width_SU_ProjectGeo_b.png) *Above: Screenshot after projecting loose geometry*","title":"Modeling Tools"},{"location":"reference/sketchup_plugin_interface/#information-tools","text":"Tools in this set are generally for viewing model attributes, however some editing may be done as well. Icons Functionality ![OpenStudio Inspector Icon](../img/plugin_reference_guide/Inspector-24.png) #### OpenStudio Inspector The OpenStudio Inspector displays information about your currently open OpenStudio Model. The Inspector Window is divided into three main areas: 1. The top left is the Select Type pane. This has a partial list of OpenStudio object types and identifies how many objects of a specific type are in your model. 2. The bottom left pane is the Select Object pane. If you make a selection in the Select Type pane, a list of objects of that type will be displayed in the Select Object pane. The objects listed in the Select Object pane have a number to indicate how many objects in the model refer to this object. Below the list are several buttons. The Plus button to create a new object of this type, a Copy button to copy the selected object, a minus button to delete the selected object, and a Purge button to purge unused objects of this type. For some object types, one or more of these buttons may be disabled. 3. The third and last pane of the Inspector is the Edit Object pane at the right. This displays the fields for the currently selected object in the Select Object pane. Some fields accept a string; others are edited via a pull-down list. For some object types, some fields may be hidden from the Inspector or locked from editing. This is by design. The OpenStudio Inspector is render mode aware. If you are in a render by class or render by boundary condition and use the SketchUp select tool to select a space, the OpenStudio Space will be selected in the Inspector. If, however, you are in render by space type, thermal zone, or story mode, a space type, thermal zone, or story will be selected in the Inspector. This is assuming that the space is an assigned space type, thermal zone, or story. The Render by Construction mode is similar, but you need to select a surface versus a space to select a construction object in the Inspector. Currently, if you select a thermal zone, space type, or construction object in the Inspector, it will not make a selection in the SketchUp Model that correlates to this object. The Inspector cannot select multiple objects at once. So if you select multiple spaces or surfaces in SketchUp, only one will be active in the Inspector. Similarly, you cannot use the Inspector to batch change the attributes for multiple objects at once. The [Set Space Attributes for Selected Spaces](#set-space-attributes) tool on the OpenStudio Toolbar does allow batch changes for space objects, and to a limited extent for zones that parent the spaces. ![Inspector Dialog](../img/plugin_reference_guide/width_SU_Inspector.png) *Above: Screenshot of OpenStudio Inspector with a space object selected* Screenshots of the OpenStudio Inspector with other object types selected are shown under the individual pages for those object types. ![Surface Search Icon](../img/plugin_reference_guide/SurfaceSearch-24.png) #### Surface Search The OpenStudio Surface Search tool enables you to search your model for surfaces with specific attributes. You can select the search results and visually isolate them by hiding all other surfaces. When you are finished, click \"Unhide All\" on the Surface Search Dialog to unhide the rest of the surfaces. Before searching on a large IDF, close SketchUp's Outliner Window to expedite the surface searching. While surfaces are hidden you can also use SketchUp's built-in \"View Hidden Geometry\" to quickly view all hidden surfaces. You can also search based on Surface Orientation. To do this, set both \"from\" and \"to\" to a single value if you want to find surfaces that face a specific direction, or you can set unique values to show surfaces within a range of angles. \"Exclude Horizontal Surfaces\" is generally intended to be used along with Surface Orientation search to hide surfaces with no azimuth. There are also check boxes to limit search results to non-convex surfaces or to surfaces with more than a set number of vertices. Once your search is complete, the resulting surfaces are selected in SketchUp. You can use this selection for other operations or scripts. ![Surface Search Dialog](../img/plugin_reference_guide/SU_SurfaceSearch.png) *Above: Screenshot of Surface Search dialog* ![Information Tool Icon](../img/plugin_reference_guide/InfoTool-24.png) #### Information Tool The OpenStudio Information Tool activates a cursor that, when placed over a model surface, shows the EnergyPlus or OpenStudio object attributes for that surface. The status bar shows the position of the cursor in world coordinates. The Information Tool is render mode aware and offers different data depending on your current render mode. The following screenshots and captions show the available data for the different render modes. Render by Surface Type and Render by Boundary condition offer a variety of data. Hold down the shift, control, or shift+control keys while hovering over a surface. Modifier keys are shown by the appropriate captions. (No Modifier Key) ![Information Tool in Render by Surface Type Mode Showing Surface Data](../img/plugin_reference_guide/width_SU_Info_Type_basic.png) *Above: Screenshot of Information Tool in Render by Surface Type mode showing surface data* The same data are displayed while in Render by Boundary Condition mode. (\"Shift\" Modifier Key) ![Information Tool in Render by Surface Type Mode Showing Construction Data](../img/plugin_reference_guide/width_SU_Info_Type_shift-const.png) *Above: Screenshot of Information Tool in Render by Surface Type mode showing construction data* The same data are displayed while in Render by Boundary Condition mode (\"Ctrl\" Modifier Key) ![Information Tool in Render by Surface Type Mode Showing Material Data](../img/plugin_reference_guide/width_SU_Info_Type_shift-material.png) *Above: Screenshot of Information Tool in Render by Surface Type mode showing material data* The same data are displayed while in Render by Boundary Condition mode (\"Shift + Ctrl\" Modifier Key) ![Information Tool in Render by Surface Type Mode Showing Space Data](../img/plugin_reference_guide/width_SU_Info_Type_shiftctrl-space.png) *Above: Screenshot of Information Tool in Render by Surface Type mode showing space data* The same data are displayed while in Render by Boundary Condition mode (No Modifier Key) ![Information Tool in Render by Construction Mode Showing Construction Data](../img/plugin_reference_guide/width_SU_info_construction.png) *Above: Screenshot of Information Tool in Render by Construction mode showing construction data* (No Modifier Key) ![Information Tool in Render by Space Type Mode Showing Space Type Data](../img/plugin_reference_guide/width_SU_Info_spacetype.png) *Above: Screenshot of Information Tool in Render by Space Type mode showing space type data* (No Modifier Key) ![Information Tool in Render by Thermal Zone Mode Showing Thermal Zone Data](../img/plugin_reference_guide/width_SU_Info_ThermalZone.png) *Above: Screenshot of Information Tool in Render by Thermal Zone mode showing thermal zone data* ![Errors and Warnings Icon](../img/plugin_reference_guide/Warning-24.png) #### OpenStudio Errors and Warnings The Input File Errors and Warnings dialog automatically opens when there is an error or warning when opening or importing a file. Many common geometry errors (upside-down floor or roof, inside-out window, non-coplanar surfaces, etc.) are fixed automatically when you open the input file. This dialog will also report unsupported IDF objects on import. ![Errors and Warnings Dialog](../img/plugin_reference_guide/error_02.png) *Above: Screenshot of Errors and Warnings dialog box*","title":"Information Tools"},{"location":"reference/sketchup_plugin_interface/#rendering-modes","text":"This toolbar contains render modes that are used to change how heat transfer, shading, and interior partition surfaces are rendered. Icons Functionality ![Render by Surface Type Icon](../img/plugin_reference_guide/render_surface_class.png) #### Render by Surface Type The OpenStudio Render by Surface Type mode will render walls, roofs, windows, doors, floors, shading surfaces, and interior partition surfaces with unique colors. When you create new geometry, it will be automatically classified and rendered. If you try to assign a color yourself, the application will override you. You never need to use the paint bucket tool in this render mode. If you set a surface construction to \"Air Boundary\", it will be rendered as a translucent checkerboard pattern. This construction is intended to represent thermal zone boundaries that do not represent physical walls in the building. ![Model in Render by Surface Type Mode](../img/plugin_reference_guide/width_SU_Info_Type_basic.png) *Above: Screenshot of model in Render by Surface Type mode* ![Render by Boundary Condition Icon](../img/plugin_reference_guide/render_boundary.png) #### Render by Outside Boundary Condition The OpenStudio Render by Outside Boundary Condition mode will render surfaces by their outside boundary conditions. Only space surfaces have boundary conditions, so only they will be rendered with a color. Shading and interior partition surfaces will be white. This is a good rendering mode to diagnose problems with your model. It provides a quick way to globally look at boundary conditions throughout your model. You never need to use the paint bucket tool in this render mode. In the screenshot below, a section cut has been drawn to reveal the inside of the model, making the boundary condition of surfaces easy to see. If you set a surface construction to \"Air Boundary\", it will be rendered as a translucent checkerboard pattern. This construction is intended to represent thermal zone boundaries that do not represent physical walls in the building. ![Model in Render by Boundary Condition Mode](../img/plugin_reference_guide/SU_Render_Boundary.png) *Above: Screenshot of model in Render by Boundary Condition mode* The most common boundary conditions you will see are \"Outdoors, Surface, and Ground\", but there are actually 9 basic boundary modes, with a number of subsets within some conditions. For \"Outdoors\" there are also unique color variations to indicate if there is sun and or wind exposure. The following image shows the SketchUp materials for the various boundary conditions. ![Render by Boundary Condition Colors](../img/plugin_reference_guide/tut_BoundaryColorWorksheet.png) *Above: Render by Outside Boundary Condition color palette* ![Render by Construction Icon](../img/plugin_reference_guide/render_construction.png) #### Render by Construction The OpenStudio Render by Construction mode renders surfaces by their construction. Although this seems similar to Render by Surface Type, there are a number of differences: The Inspector Window is divided into three main areas: - In Render by Construction mode, surfaces are rendered by their construction, so if two windows do not have the same construction they will not have the same render color. The same logic is applied to other surface types. - Shading surfaces and interior partitions can have constructions assigned. If they do have constructions, they will be rendered just as space surfaces are. - Construction properties of a surface can be applied directly to a surface, or they can be inherited from other objects (space, space type, story, or building). The first time you click the Render by Construction button, it shows hard assigned and inherited constructions. If you click it again, it shows only hard assigned constructions. Other surfaces do not have a render color. Clicking the Render button again returns you to the default mode where hard assigned and inherited constructions are shown. As a note, this is not a render by material mode. Hence, two constructions that have the same outside material will have unique render colors. However, in this render mode you can set render color using either the SketchUp Paint Bucket or the Inspector. To use the Inspector, select the construction object and set the RGB values. These color settings are part of the OpenStudio Model and will be maintained the next time you open the model. ![Model in Render by Construction Mode](../img/plugin_reference_guide/width_SU_info_construction.png) *Above: Screenshot of model in Render by Construction mode* ![Render by Space Type Icon](../img/plugin_reference_guide/render_space_type.png) #### Render by Space Type The OpenStudio Render by Space Type mode renders each space based on the space type assigned to it. This is a two state button. The first time you click it, hard assigned and inherited space types are rendered. If you click it again, only hard assigned space types are given a render color. Space types can be assigned to a space or inherited from the building object. You can assign space types to a space by using the Set Attributes for Selected Spaces tool or the OpenStudio Inspector. The installed templates have preassigned colors for each space type, but you can use SketchUp's Paint Bucket tool or the OpenStudio Inspector to change the colors. These changes are saved as part of your OpenStudio Model. ![Render by Space Type Mode](../img/plugin_reference_guide/width_SU_Info_spacetype.png) *Above: Screenshot of model in Render by Space Type mode* ![Render by Thermal Zone Icon](../img/plugin_reference_guide/render_therm_zone.png) #### Render by Thermal Zone The OpenStudio Render by Thermal Zone mode renders each space based on the thermal zone assigned to it. You can assign a thermal zone to a space using the Set Attributes for Selected Spaces tool or the OpenStudio Inspector. When a new thermal zone is made, a color will be assigned to it. You can change that color using SketchUp's Paint Bucket tool or the OpenStudio Inspector. These changes are saved as part of your OpenStudio Model. ![Model in Render by Thermal Zone Mode](../img/plugin_reference_guide/width_SU_Info_ThermalZone.png) *Above: Screenshot of model in Render by Thermal Zone mode* ![Render by Building Story](../img/plugin_reference_guide/render_story.png) #### Render by Building Story The OpenStudio Render by Building Story mode renders each space based on the building story assigned to it. You can assign a building story to a space using the Set Attributes for Selected Spaces tool or the OpenStudio Inspector. When a new story is made, a color will be assigned to it. You can change that color by using SketchUp's Paint Bucket tool or the OpenStudio Inspector. These changes are saved as part of your OpenStudio Model. When you use the Create Spaces from Diagram tool to generate a multistory building the stories are assigned as part of that process. There is also a user script that can infer building stories from a model that has none assigned. ![Model in Render by Building Story Mode](../img/plugin_reference_guide/width_SU_Info_story.png) *Above: Screenshot of model in Render by Building Story mode* #### Render by Layer Render by Layer is a standard SketchUp feature. It will render content by layer. You can create layers to represent anything you want to track. For example, to organize your project by space types you can create or move zones to specific layers. Keep in mind that the layer structure isn't saved with the OSM file, so any layers you setup are just for your current session. ![Render By Layer mode](../img/plugin_reference_guide/width_ss_by_layer.png) *Above: Screenshot of model in Render By Layer mode* #### Render by Surface Normal The Render by Surface Normal mode is built on the SketchUp face setting where faces are rendered with the default front and back colors as opposed to their assigned materials. The outside face of a heat transfer surface will render white and the inside face will render red. This works as a quick diagnostic tool to look for reversed faces. In a clean model you shouldn't see red from the outside. Shading surfaces are an exception to this where you will see red on one of the two sides of each shading surface. ![Render By Surface Normal mode](../img/plugin_reference_guide/width_ss_surface_normal.png) *Above: Screenshot of model in Render By Surface Normal mode*","title":"Rendering Modes"},{"location":"reference/sketchup_plugin_interface/#integration-with-other-openstudio-resources","text":"This set contains tools integration for other OpenStudio applications and resources. Icons Functionality ![Launch Current Model in OpenStudio Application Icon](../img/plugin_reference_guide/os_24.png) #### Launch Current Model in OpenStudio Application The Launch Current Model in OpenStudio Application button will launch your model in the OpenStudio Application. The model will also stay open in the SketchUp Plug-in. If you make changes and save them in the OpenStudio Application, be sure to reload the model in the SketchUp Plug-in before you make any changes in SketchUp. You should also reload the model in the OpenStudio Application if you have made additional changes in SketchUp. ![Help Icon](../img/plugin_reference_guide/Help-24_0.png) #### Help This takes you to the online help for the OpenStudio SketchUp Plug-in, where you are now.","title":"Integration with Other OpenStudio Resources"},{"location":"reference/sketchup_plugin_interface/#additional-openstudio-plug-in-tools","text":"","title":"Additional OpenStudio Plug-in Tools"},{"location":"reference/sketchup_plugin_interface/#about-openstudio-plug-in","text":"For information on the SketchUp Plug-in version go to Extensions->OpenStudio->About OpenStudio . Above: Screenshot of SketchUp showing the About OpenStudio dialog path and window","title":"About OpenStudio Plug-in"},{"location":"reference/sketchup_plugin_interface/#preferences","text":"For information on the SketchUp Plug-in version go to Extensions->OpenStudio->Preferences . Above: The Preferences dialog enables you to set options related to updates, new thermal zone creation, user scripts. Most importantly, the Preferences dialog allows you to change the version of the OpenStudio Application used by the OpenStudio SketchUp Plug-in.","title":"Preferences"},{"location":"reference/sketchup_plugin_interface/#check-for-update","text":"Check to see if you are using the most current release of the OpenStudio SketchUp Plugin by going to Extensions->OpenStudio->Check For Update . Above: Screenshot of Update dialog box","title":"Check for Update"},{"location":"reference/sketchup_plugin_interface/#helpful-sketchup-tools","text":"Icons Functionality ![Hide Rest of Model Icon](../img/plugin_reference_guide/HideRest-24.png) #### Hide Rest of Model This activates SketchUp's native view function to hide everything but your currently open group or component. Isolating your current Zone makes it much easier to work on inter-zone geometry. ![Model with rest of model visible](../img/plugin_reference_guide/ss_hiderest_01.png) *Above: Screenshot of model with rest of model visible* ![model with rest of model hidde](../img/plugin_reference_guide/ss_hiderest_02.png) *Above: Screenshot of model with rest of model hidden* ![Hidden Geometry Icon](../img/plugin_reference_guide/SU_ViewHidden-24.png) #### View Hidden Geometry This activates SketchUp's native view function to view hidden geometry. This is particularly useful if you have used the OpenStudio Surface Search tool and you need to see the rest of the model to get your bearings. ![Show Hidden Geometry](../img/plugin_reference_guide/width_ss_show_hidden.png) *Above: Screenshot of model with View Hidden Geometry active* ![X-Ray Mode](../img/plugin_reference_guide/tbRenderTransparentLarge.png) #### View Model in X-Ray Mode This activates SketchUp's native face style setting to render all surfaces translucently. This allows you to quickly see internal model elements without having to create section cuts or hide parts of the model. ![Active X-Ray Rendering](../img/plugin_reference_guide/width_ss_xray.png) *Above: Screenshot of model with x-ray rendering active*","title":"Helpful SketchUp Tools"},{"location":"tutorials/life_cycle_costing_examples/","text":"Life Cycle Cost Analysis Please refer to the OpenStudio Software Development Kit Documentation for a tutorial on Life Cycle Cost Analysis.","title":"Life Cycle Cost Analysis"},{"location":"tutorials/radiance_tutorial/","text":"Radiance and OpenStudio Application This tutorial explains how to use Radiance to simulate the daylight ingress in your OpenStudio Model, allowing for higher fidelity simulations of daylighting-related energy efficiency measures. For the OpenStudio Application, the Radiance simulation option has been refactored (moved) to a measure . Workflow This workflow uses the OpenStudio Application (and the Plug-in) to perform a climate-based daylight simulation , using Radiance as the lighting simulation engine (in lieu of EnergyPlus' daylight simulation options). The process for using Radiance for daylighting analysis in the OpenStudio Application is not dissimilar from using EnergyPlus. The basic steps are as follows, with the required applications in parentheses: 1. Create (or Import) Building Geometry, Define Thermal Zones & Spaces (SketchUp Plug-in) Many of the Radiance-related elements are not directly accessible from the OpenStudio Application, so regardless of whether you are starting your geometric model from scratch or importing from another CAD tool, you must start in the SketchUp Plugin. Using the SketchUp Plugin tools, create the following elements: Building Shading Objects - to represent overhangs, fins, parapets Site Shading Objects - to represent other buildings, trees, ground Interior Partition Surfaces - can be used to define furniture, cubicle walls, & other relevant structures, in addition to refining the interior space geometry (e.g. adding columns, ceiling coffers, soffits) 2. Define Materials (SketchUp Plug-in or OpenStudio Application) It is recommended to review the materials of your model constructions to ensure the photometric properties, e.g., visible light transmittance, transmittance model (specular or diffuse), and visible light reflectance, are correct. Interior finishes Glazing 3. Add Daylighting Elements (SketchUp Plugin) For each space where you wish to analyze daylighting, add: Illuminance map (primary) Daylighting control point (primary) Define shading controls Assign shading controls Optionally to these spaces, add: Glare sensors Create & assign OS:WindowFrameAndDivider objects, to represent wall thickness in the Radiance model (user script) 4. Configure Daylighting Elements (SketchUp Plugin) Associate space with thermal zone(s) Assign primary illuminance map to daylit thermal zone(s) Assign primary daylighting control point to thermal zone Thermal zone load percentages to daylighting controls 5. Run Simulation (OpenStudio Application) Attach a weather file (Site tab) Select Radiance simulation parameters (Simulation Settings tab) Add the \"Radiance Daylighting Measure\" to the model's workflow (Measures tab) Run the analysis (Run Simulation tab) The Radiance daylighting results will inform the electric lighting load schedules and will be automatically used in the EnergyPlus model 6. Review Results (Excel, et al.) The results of the Radiance/EnergyPlus simulation are stored in a few locations: radout.sql - this file contains all the Radiance-computed daylighting information, as well as the exterior daylight data from the weather file, for reference. Its data can be reviewed with the Data Viewer application. daylightmetrics.csv - this file contains data for the following metrics: Daylight Autonomy (DA) Continuous Daylight Autonomy (cDA) Useful Daylight Illuminance (UDI) [windowGroupName].ill - annual daylight illuminance schedules for each window group, used for the shade control simulation","title":"Radiance tutorial"},{"location":"tutorials/radiance_tutorial/#workflow","text":"This workflow uses the OpenStudio Application (and the Plug-in) to perform a climate-based daylight simulation , using Radiance as the lighting simulation engine (in lieu of EnergyPlus' daylight simulation options). The process for using Radiance for daylighting analysis in the OpenStudio Application is not dissimilar from using EnergyPlus. The basic steps are as follows, with the required applications in parentheses:","title":"Workflow"},{"location":"tutorials/radiance_tutorial/#1-create-or-import-building-geometry-define-thermal-zones-spaces-sketchup-plug-in","text":"Many of the Radiance-related elements are not directly accessible from the OpenStudio Application, so regardless of whether you are starting your geometric model from scratch or importing from another CAD tool, you must start in the SketchUp Plugin. Using the SketchUp Plugin tools, create the following elements: Building Shading Objects - to represent overhangs, fins, parapets Site Shading Objects - to represent other buildings, trees, ground Interior Partition Surfaces - can be used to define furniture, cubicle walls, & other relevant structures, in addition to refining the interior space geometry (e.g. adding columns, ceiling coffers, soffits)","title":"1. Create (or Import) Building Geometry, Define Thermal Zones &amp; Spaces (SketchUp Plug-in)"},{"location":"tutorials/radiance_tutorial/#2-define-materials-sketchup-plug-in-or-openstudio-application","text":"It is recommended to review the materials of your model constructions to ensure the photometric properties, e.g., visible light transmittance, transmittance model (specular or diffuse), and visible light reflectance, are correct. Interior finishes Glazing","title":"2. Define Materials (SketchUp Plug-in or OpenStudio Application)"},{"location":"tutorials/radiance_tutorial/#3-add-daylighting-elements-sketchup-plugin","text":"For each space where you wish to analyze daylighting, add: Illuminance map (primary) Daylighting control point (primary) Define shading controls Assign shading controls Optionally to these spaces, add: Glare sensors Create & assign OS:WindowFrameAndDivider objects, to represent wall thickness in the Radiance model (user script)","title":"3. Add Daylighting Elements (SketchUp Plugin)"},{"location":"tutorials/radiance_tutorial/#4-configure-daylighting-elements-sketchup-plugin","text":"Associate space with thermal zone(s) Assign primary illuminance map to daylit thermal zone(s) Assign primary daylighting control point to thermal zone Thermal zone load percentages to daylighting controls","title":"4. Configure Daylighting Elements (SketchUp Plugin)"},{"location":"tutorials/radiance_tutorial/#5-run-simulation-openstudio-application","text":"Attach a weather file (Site tab) Select Radiance simulation parameters (Simulation Settings tab) Add the \"Radiance Daylighting Measure\" to the model's workflow (Measures tab) Run the analysis (Run Simulation tab) The Radiance daylighting results will inform the electric lighting load schedules and will be automatically used in the EnergyPlus model","title":"5. Run Simulation (OpenStudio Application)"},{"location":"tutorials/radiance_tutorial/#6-review-results-excel-et-al","text":"The results of the Radiance/EnergyPlus simulation are stored in a few locations: radout.sql - this file contains all the Radiance-computed daylighting information, as well as the exterior daylight data from the weather file, for reference. Its data can be reviewed with the Data Viewer application. daylightmetrics.csv - this file contains data for the following metrics: Daylight Autonomy (DA) Continuous Daylight Autonomy (cDA) Useful Daylight Illuminance (UDI) [windowGroupName].ill - annual daylight illuminance schedules for each window group, used for the shade control simulation","title":"6. Review Results (Excel, et al.)"},{"location":"tutorials/tutorial_cbecc_materials/","text":"CBECC Materials and Constructions CBECC-Com (California Building Energy Code Compliance) is an open source project that may be used by Code Agencies, Rating Authorities, or Utility Programs in the development of energy codes, standards, or efficiency programs. Architects, engineers, and energy consultants may also use these tools to demonstrate compliance with energy codes or beyond-code programs. OpenStudio models can be exported to the SDD format which may then be imported into CBECC-Com. OpenStudio 1.6.0 added the ability to specify material and construction properties needed by CBECC-Com, these are then exported to SDD and imported into CBECC-Com. This tutorial will explain how to set these properties using the OpenStudio application so they can be properly imported into CBECC-Com. Future versions of OpenStudio will add additional information to the SDD export with the ultimate goal of being able to run an exported SDD from OpenStudio through the CBECC-Com interface with no manual modification. Material Measure Tags In order to apply energy codes to a SDD model, CBECC-Com requires information that is not used by energy simulation software. OpenStudio has augmented several model objects with measure tags that can be used to add this information to an OpenStudio model. These tags allow you to specify information like composite framing material or the standards identifier used to reference a particular material. This information is not used when running an energy simulation using OpenStudio. However, this information is included in the SDD export and used by CBECC-Com to apply energy codes. These tags may also be used by measures that operate on the OpenStudio model. OpenStudio measure tags are populated with a set of suggested values that are compatible with CBECC-Com. You may choose to enter any value that you wish, but only the suggested values will work with CBECC-Com. The set of measure tags available for a Material object is shown in the figure below. In this example, the material is tagged as belonging to the standards category Roofing. CBECC-Com provides a set of identifiers for materials in this category, choosing one of these identifiers specifies the material in CBECC-Com's library. The performance values used in the OpenStudio model are not translated to SDD, only the standards category and identifier as this is all that CBECC-Com allows for compliance analysis. The Composite material standards category behaves slightly differently. For this category, you are prompted to specify framing material, configuration, depth, size, and cavity insulation for your composite layer. CBECC-Com uses these properties to model your composite material, there is no standards identifier for composite materials. When modeling fenestration, no standards information is needed at the material level as this is input at the construction level in CBECC-Com. The only performance data which is translated from OpenStudio material objects to SDD are the u-factor, solar heat gain coefficient, and visible transmittance properties of Simple Glazing System Window objects. Construction Measure Tags At the construction level, the only measure tags available for opaque constructions are the intended surface type and the construction type, the values for construction type are populated based on the intended surface type. For fenestration constructions that consist of a single layer of a Simple Glazing System Window, the performance values in the Simple Glazing System Window will be used. However, if you have specified your window constructions in a different way (e.g. layer by layer) you can use the fenestration measure tags to specify data (e.g. number of panes, frame type) that CBECC-Com will use to look up default performance information for compliance analysis. Load the CECTemplate library It is possible to assign measure tags to your own materials. However, there is no guarantee that the performance values in your materials will match those used by CBECC-Com for compliance analysis. Therefore, OpenStudio has been distributed with a library of materials which include both performance data and the measure tags used by CBECC-Com. This library file may be loaded in the OpenStudio application using \"File->Load Library\" and selecting CECTemplate.osm. Currently, this library contains only materials, it does not include constructions or constructions sets, these may be added at a later date.","title":"Tutorial cbecc materials"},{"location":"tutorials/tutorial_cbecc_materials/#material-measure-tags","text":"In order to apply energy codes to a SDD model, CBECC-Com requires information that is not used by energy simulation software. OpenStudio has augmented several model objects with measure tags that can be used to add this information to an OpenStudio model. These tags allow you to specify information like composite framing material or the standards identifier used to reference a particular material. This information is not used when running an energy simulation using OpenStudio. However, this information is included in the SDD export and used by CBECC-Com to apply energy codes. These tags may also be used by measures that operate on the OpenStudio model. OpenStudio measure tags are populated with a set of suggested values that are compatible with CBECC-Com. You may choose to enter any value that you wish, but only the suggested values will work with CBECC-Com. The set of measure tags available for a Material object is shown in the figure below. In this example, the material is tagged as belonging to the standards category Roofing. CBECC-Com provides a set of identifiers for materials in this category, choosing one of these identifiers specifies the material in CBECC-Com's library. The performance values used in the OpenStudio model are not translated to SDD, only the standards category and identifier as this is all that CBECC-Com allows for compliance analysis. The Composite material standards category behaves slightly differently. For this category, you are prompted to specify framing material, configuration, depth, size, and cavity insulation for your composite layer. CBECC-Com uses these properties to model your composite material, there is no standards identifier for composite materials. When modeling fenestration, no standards information is needed at the material level as this is input at the construction level in CBECC-Com. The only performance data which is translated from OpenStudio material objects to SDD are the u-factor, solar heat gain coefficient, and visible transmittance properties of Simple Glazing System Window objects.","title":"Material Measure Tags"},{"location":"tutorials/tutorial_cbecc_materials/#construction-measure-tags","text":"At the construction level, the only measure tags available for opaque constructions are the intended surface type and the construction type, the values for construction type are populated based on the intended surface type. For fenestration constructions that consist of a single layer of a Simple Glazing System Window, the performance values in the Simple Glazing System Window will be used. However, if you have specified your window constructions in a different way (e.g. layer by layer) you can use the fenestration measure tags to specify data (e.g. number of panes, frame type) that CBECC-Com will use to look up default performance information for compliance analysis.","title":"Construction Measure Tags"},{"location":"tutorials/tutorial_cbecc_materials/#load-the-cectemplate-library","text":"It is possible to assign measure tags to your own materials. However, there is no guarantee that the performance values in your materials will match those used by CBECC-Com for compliance analysis. Therefore, OpenStudio has been distributed with a library of materials which include both performance data and the measure tags used by CBECC-Com. This library file may be loaded in the OpenStudio application using \"File->Load Library\" and selecting CECTemplate.osm. Currently, this library contains only materials, it does not include constructions or constructions sets, these may be added at a later date.","title":"Load the CECTemplate library"},{"location":"tutorials/tutorial_datetime/","text":"Date and Time in OpenStudio Dates in OpenStudio Energy modeling has traditionally been split between applications modeling the operation of buildings during typical years and those modeling buildings during actual years. Actual year simulation is most commonly used when calibrating simulated energy use against past measured energy use over a period of time. Typical year simulation is used when making predictions of future energy use. This all makes sense, we know what past weather and other conditions were but we cannot yet predict the future [reference needed]. The majority of energy modeling applications use the typical year simulation. Because typical year simulations occur in a \"typical\" year and not an actual year, energy modelers have become accustomed to working with dates that do not specify a year. This can be seen in the EnergyPlus RunPeriod object (which includes fields 'Begin Month', 'Begin Day of Month', 'End Month', 'End Day of Month', and 'Day of Week for Start Day' but no 'Begin Year' or 'End Year' fields) as well as the EnergyPlus outputs (timestamps in the ESO file do not include years). This practice leads to problems when trying to leverage Date/Time aware software libraries to process EnergyPlus simulation input and output. Most software libraries require Date/Times to specify an actual year as well as a time zone. This is important for real world applications like meeting someone at a particular date and time. Therefore, in order to use a software calendar widget to create a schedule or to use a flashy html timeseries plot (which we want to do for actual as well as typical year simulations) we have to have a year in addition to the month and day that are required for EnergyPlus simulation (and are available in the EnergyPlus output). OpenStudio has created a scheme to come up with a year for all simulation models (typical or actual) in order to interface with these Date/Time software libraries. RunPeriod The OpenStudio RunPeriod object determines the time period for which to run the simulation. Like EnergyPlus, the run period is specified with the start day and month and the end day and month for the simulation. Unlike EnergyPlus, OpenStudio only allows for one unique RunPeriod object in each OpenStudio Model. The maximum length of a RunPeriod in OpenStudio is one year. If the start day and month is less than the end day and month, then the start date is assumed to be in the same year as the end date. If the end day and month is less than the start day and month, then the end date is assumed to be in the year following the start date's year. YearDescription In addition to the RunPeriod object, the OpenStudio Model includes a unique YearDescription object. This object specifies either an actual year OR the day of the week of the first day in the simulation and whether or not the year of the first day of the simulation is a leap year. If the user specifies the year in the second format (e.g. simulation starts on a Monday of a year that is not a leap year), OpenStudio searches either forward or backwards in time to find an actual year which meets these criteria. The default year if no criteria are entered is 2009 which was the birth year of OpenStudio! The YearDescription object includes the makeDate method which can be used to create a Date object with the same assumed base year as the rest of the OpenStudio model. Any dates returned by the OpenStudio Model API (e.g. from schedules) will be created using the makeDate method of the current YearDescription object. If the YearDescription object is updated, you will need to recompute any dates for the current model. Similarly, any dates passed into the OpenStudio Model API (e.g. for schedules) will be checked against the current YearDescription object. If you did not make these dates using the makeDate method you may see a warning about \"Comparing dates with improper base years\". There is currently a deficiency in the OpenStudio SqlFile class. Timeseries results returned from the SqlFile do not use the YearDescription object. Therefore, timeseries results returned from the SqlFile will contain dates that appear to be from 2009. This can be a particular issue if the simulation period includes a leap day. Weather Data The idea of actual vs typical years also appears in the weather files used for simulation. Typical Meteorological Year (TMY) weather files are assembled by combining weather data from different months across multiple years. Actual Meteorological Year (AMY) weather files contain weather data for a contiguous period. The EpwFile class detects whether a given EPW file is a TMY or AMY when it is read, the isActual method returns true if the weather file includes actual year data. The RunPeriod and YearDescription objects are reset to match the weather file when assigning a new EPW file using the OpenStudio Application. Any dates returned from the EpwFile class will be constructed using the year specified within the EPW file, the OpenStudio Model's YearDescription object is not used. Utility Bills Utility bill data entered in OpenStudio to support calibration against actual measured energy use is always specified using an actual date. In order to compare data in the simulation results with measured utility data, the simulation dates (as specified by the RunPeriod and YearDescription objects) must overlap the billing period dates. Time in OpenStudio Timeseries Coming soon","title":"Tutorial datetime"},{"location":"tutorials/tutorial_datetime/#dates-in-openstudio","text":"Energy modeling has traditionally been split between applications modeling the operation of buildings during typical years and those modeling buildings during actual years. Actual year simulation is most commonly used when calibrating simulated energy use against past measured energy use over a period of time. Typical year simulation is used when making predictions of future energy use. This all makes sense, we know what past weather and other conditions were but we cannot yet predict the future [reference needed]. The majority of energy modeling applications use the typical year simulation. Because typical year simulations occur in a \"typical\" year and not an actual year, energy modelers have become accustomed to working with dates that do not specify a year. This can be seen in the EnergyPlus RunPeriod object (which includes fields 'Begin Month', 'Begin Day of Month', 'End Month', 'End Day of Month', and 'Day of Week for Start Day' but no 'Begin Year' or 'End Year' fields) as well as the EnergyPlus outputs (timestamps in the ESO file do not include years). This practice leads to problems when trying to leverage Date/Time aware software libraries to process EnergyPlus simulation input and output. Most software libraries require Date/Times to specify an actual year as well as a time zone. This is important for real world applications like meeting someone at a particular date and time. Therefore, in order to use a software calendar widget to create a schedule or to use a flashy html timeseries plot (which we want to do for actual as well as typical year simulations) we have to have a year in addition to the month and day that are required for EnergyPlus simulation (and are available in the EnergyPlus output). OpenStudio has created a scheme to come up with a year for all simulation models (typical or actual) in order to interface with these Date/Time software libraries.","title":"Dates in OpenStudio"},{"location":"tutorials/tutorial_datetime/#runperiod","text":"The OpenStudio RunPeriod object determines the time period for which to run the simulation. Like EnergyPlus, the run period is specified with the start day and month and the end day and month for the simulation. Unlike EnergyPlus, OpenStudio only allows for one unique RunPeriod object in each OpenStudio Model. The maximum length of a RunPeriod in OpenStudio is one year. If the start day and month is less than the end day and month, then the start date is assumed to be in the same year as the end date. If the end day and month is less than the start day and month, then the end date is assumed to be in the year following the start date's year.","title":"RunPeriod"},{"location":"tutorials/tutorial_datetime/#yeardescription","text":"In addition to the RunPeriod object, the OpenStudio Model includes a unique YearDescription object. This object specifies either an actual year OR the day of the week of the first day in the simulation and whether or not the year of the first day of the simulation is a leap year. If the user specifies the year in the second format (e.g. simulation starts on a Monday of a year that is not a leap year), OpenStudio searches either forward or backwards in time to find an actual year which meets these criteria. The default year if no criteria are entered is 2009 which was the birth year of OpenStudio! The YearDescription object includes the makeDate method which can be used to create a Date object with the same assumed base year as the rest of the OpenStudio model. Any dates returned by the OpenStudio Model API (e.g. from schedules) will be created using the makeDate method of the current YearDescription object. If the YearDescription object is updated, you will need to recompute any dates for the current model. Similarly, any dates passed into the OpenStudio Model API (e.g. for schedules) will be checked against the current YearDescription object. If you did not make these dates using the makeDate method you may see a warning about \"Comparing dates with improper base years\". There is currently a deficiency in the OpenStudio SqlFile class. Timeseries results returned from the SqlFile do not use the YearDescription object. Therefore, timeseries results returned from the SqlFile will contain dates that appear to be from 2009. This can be a particular issue if the simulation period includes a leap day.","title":"YearDescription"},{"location":"tutorials/tutorial_datetime/#weather-data","text":"The idea of actual vs typical years also appears in the weather files used for simulation. Typical Meteorological Year (TMY) weather files are assembled by combining weather data from different months across multiple years. Actual Meteorological Year (AMY) weather files contain weather data for a contiguous period. The EpwFile class detects whether a given EPW file is a TMY or AMY when it is read, the isActual method returns true if the weather file includes actual year data. The RunPeriod and YearDescription objects are reset to match the weather file when assigning a new EPW file using the OpenStudio Application. Any dates returned from the EpwFile class will be constructed using the year specified within the EPW file, the OpenStudio Model's YearDescription object is not used.","title":"Weather Data"},{"location":"tutorials/tutorial_datetime/#utility-bills","text":"Utility bill data entered in OpenStudio to support calibration against actual measured energy use is always specified using an actual date. In order to compare data in the simulation results with measured utility data, the simulation dates (as specified by the RunPeriod and YearDescription objects) must overlap the billing period dates.","title":"Utility Bills"},{"location":"tutorials/tutorial_datetime/#time-in-openstudio","text":"","title":"Time in OpenStudio"},{"location":"tutorials/tutorial_datetime/#timeseries","text":"Coming soon","title":"Timeseries"},{"location":"tutorials/tutorial_gbxmlimport/","text":"Working with gbXML Import gbXML gbXML is an industry supported file format for sharing building information between disparate building design software tools . The OpenStudio Application can import and export gbXML files through the File->Import and File->Export menus. The File->Import method creates a new OpenStudio Model from the imported content. This is useful for creating an initial OpenStudio Model from a gbXML file. However, this method is difficult to integrate in iterative workflows as described below: Architect sends Engineer a gbXML file for initial building geometry Engineer converts gbXML to OpenStudio Model and assigns schedules, loads, and HVAC equipment Architect sends Engineer an updated gbXML file with new building geometry In this example, the Engineer does not want to discard all the work they did in step 2 and repeat it all over again with the new building geometry. Instead, the Engineer would like to merge new geometry from the updated gbXML file with their current OpenStudio Model. The Editor tab in the OpenStudio Application supports this iterative workflow. The example below demonstrates this process with gbXML, the geometry editor tab also supports importing and merging geometry data from Input Data Files and other OpenStudio Model files. Import and Merge gbXML When first going to the geometry editor tab, choose the type of geometry file that you want to import. Select gbXML from the Geometry Type menu, press the Import button, and browse to the gbXML file you want to import. After importing the gbXML file, you can preview the gbXML geometry using the Spider gbXML Viewer . This viewer is based on ThreeJS and is developed by Ladybug Tools as an open source tool which has been integrated with the OpenStudio Application. The viewer is also available as a standalone online tool . The gbXML file can be inspected and checked for errors. However, at this point the geometry from the gbXML has not been imported into the OpenStudio Model. If you go to the 3D View tab you will see that there is no geometry in the OpenStudio Model. Geometry from the gbXML file is not brought into the OpenStudio Model until the Merge with Current OSM button is pressed on the geometry editor tab. After pressing this button, you will see geometry present in the 3D View tab. After this point, detailed HVAC and other parameters may be set in the OpenStudio Model. If new geometry becomes available in gbXML format, the user can go back to the geometry editor and re-import the new gbXML file. The new gbXML file can be inspected using the Spider viewer and then merged with the current OpenStudio Model. The OpenStudio Model merge process is relatively new and does not currently have user defined options to control how the merge is performed. In the future, options (e.g. keep thermal zoning from the OpenStudio Model or from the gbXML) may be exposed to give the user more control.","title":"Import gbXML"},{"location":"tutorials/tutorial_gbxmlimport/#import-gbxml","text":"gbXML is an industry supported file format for sharing building information between disparate building design software tools . The OpenStudio Application can import and export gbXML files through the File->Import and File->Export menus. The File->Import method creates a new OpenStudio Model from the imported content. This is useful for creating an initial OpenStudio Model from a gbXML file. However, this method is difficult to integrate in iterative workflows as described below: Architect sends Engineer a gbXML file for initial building geometry Engineer converts gbXML to OpenStudio Model and assigns schedules, loads, and HVAC equipment Architect sends Engineer an updated gbXML file with new building geometry In this example, the Engineer does not want to discard all the work they did in step 2 and repeat it all over again with the new building geometry. Instead, the Engineer would like to merge new geometry from the updated gbXML file with their current OpenStudio Model. The Editor tab in the OpenStudio Application supports this iterative workflow. The example below demonstrates this process with gbXML, the geometry editor tab also supports importing and merging geometry data from Input Data Files and other OpenStudio Model files.","title":"Import gbXML"},{"location":"tutorials/tutorial_gbxmlimport/#import-and-merge-gbxml","text":"When first going to the geometry editor tab, choose the type of geometry file that you want to import. Select gbXML from the Geometry Type menu, press the Import button, and browse to the gbXML file you want to import. After importing the gbXML file, you can preview the gbXML geometry using the Spider gbXML Viewer . This viewer is based on ThreeJS and is developed by Ladybug Tools as an open source tool which has been integrated with the OpenStudio Application. The viewer is also available as a standalone online tool . The gbXML file can be inspected and checked for errors. However, at this point the geometry from the gbXML has not been imported into the OpenStudio Model. If you go to the 3D View tab you will see that there is no geometry in the OpenStudio Model. Geometry from the gbXML file is not brought into the OpenStudio Model until the Merge with Current OSM button is pressed on the geometry editor tab. After pressing this button, you will see geometry present in the 3D View tab. After this point, detailed HVAC and other parameters may be set in the OpenStudio Model. If new geometry becomes available in gbXML format, the user can go back to the geometry editor and re-import the new gbXML file. The new gbXML file can be inspected using the Spider viewer and then merged with the current OpenStudio Model. The OpenStudio Model merge process is relatively new and does not currently have user defined options to control how the merge is performed. In the future, options (e.g. keep thermal zoning from the OpenStudio Model or from the gbXML) may be exposed to give the user more control.","title":"Import and Merge gbXML"},{"location":"tutorials/tutorial_geometry_transformations/","text":"Geometry Transformations Coordinate Systems Transformation","title":"Tutorial geometry transformations"},{"location":"tutorials/tutorial_geometry_transformations/#coordinate-systems","text":"","title":"Coordinate Systems"},{"location":"tutorials/tutorial_geometry_transformations/#transformation","text":"","title":"Transformation"},{"location":"tutorials/tutorial_glhepro/","text":"Vertical Ground Heat Exchanger sizing with GLHEPro This tutorial explains how to size a vertical ground heat exchanger with OpenStudio and an external program called GLHEPro. First, you make a model with water-to-water heat pumps and use district heating and district cooling objects to determine the loads on the heat-pump loop. You run this model and use a Measure to export these loads in a format that GLHEPro will accept. Then you run GLHEPro and use another Measure to bring the G-Function from GLHEPro back into your model, replacing the district heating and district cooling objects on the loop. Setting up the initial model Create a model with water-source heat pumps (WSHPs) in each zone you want to condition. WSHPs are Zone HVAC Equipment found on the ThermalZones tab. Create a plant loop with a pump, a district heating plant and a district cooling plant on one branch, and a bypass pipe on a separate branch. This loop will be the heat source/heat sink for the WSHPs. Set up the heating and cooling setpoint for the Heat Pump Loop. The district heating and cooling objects will run to keep the water in the heat pump loop between these bounds. The loads on the district heating and district cooling objects will represent the capacity needed in the GSHX. Put a SetpointManager:Scheduled onto the outlet of the district cooling object. Edit the temperature schedule of that setpoint manager to be the desired max temperature of the GSHX water (95F, for example). Make sure to edit both the default days and the design day schedules. Put a SetpointManager:Scheduled onto the outlet of the district heating object. Edit the temperature schedule of that setpoint manager to be the desired min temperature of the GSHX water (55F, for example). Make sure to edit both the default days and the design day schedules. Put a SetpointManager:Scheduled onto the supply outlet node of the loop. Edit the temperature schedule of that setpoint manager to be the desired max temperature of the GSHX water (95F, for example). You can pick the same schedule used for the district cooling object's setpoint manager. Set the sizing parameters of the Heat Pump Loop The loop type should be \"Condenser.\" The loop design outlet temp should be the desired max of the GSHX water (95F here). The loop design temperature difference should be reasonable for a GSHX (9 delta-F here). Connect the heating and cooling coils for each WSHP to the Heat Pump Loop. Click on the Thermal Zones tab Click on the WSHP Click the chain link icons in the upper right Check the box to select the Heat Pump Loop. Adding Measure to export loads for GLHEPro On the Measures tab, click \"Find Measures on BCL\" Search for \"GLHEPro\" Download the following 3 Measures: \"GLHEPro Setup Export Loads for Ground Heat Exchanger Sizing\" \"GLHEPro Export Loads for Ground Heat Exchanger Sizing\" \"GLHEProGFunctionImport\" On the Measures tab, drag 2 of the 3 Measures into the model: \"GLHEPro Setup Export Loads for Ground Heat Exchanger Sizing\" as OS Measure \"GLHEPro Export Loads for Ground Heat Exchanger Sizing\" as Reporting Measure Run the simulation and import loads into GLHEPro Go to the Run tab > Run > wait for simulation to finish Go to the Results tab and select the report called \"Export Loads to GLHEPro\" in the dropdown This report explains the next steps for importing the loads into GLHEPro. It also shows the hourly load for the district heating and district cooling objects. Important Note: the hourly graph only shows up if you are using OpenStudio 1.4.1 or higher (or if you are using OpenStudio 1.4.0 built with Ruby 2.0). Even if the hourly graph doesn't show up, the loads have still been exported for GLHEPro, you just don't get to visualize them. Find the GLHEPro .gt1 file. In a file browser, navigate to the run directory for your model, for example: C:\\GLHEPro\\gshp_model\\run\\6-UserScript-0\\mergedjob-0 You should see the files below: The *.gt1 files are the monthly loads for GLHEPro import. The *.csv files are the hourly loads (same as seen in graph). The report.html is the same report seen in the OS Application. Open GLHEPro, which can be downloaded (not free) from here: http://www.hvac.okstate.edu/glhepro/ In the top menu, click Loads > Read Heat Pump Loads and select the \"Monthly Loads.gt1\" file. Double-check that these numbers make sense, then click OK. Run GLHEPro to size bore field Fill in the GLHEPro inputs. See GLHEPro manual for more information. In the top menu, click Action > Perform Sizing to size the loop. In the top menu, click Action > G Function Creator. Fill out the inputs as desired, then click \"Select G-func Print Format\" and check \"Print EnergyPlus IDF File. Select a place on your computer and save the IDF file. Import bore field sizing information and G Function into OpenStudio Return to your OpenStudio model. Save a copy in case you want to change loads and re-size GSHX later. In the top menu, click Components & Measures > Apply Measure Now Under HVAC > Whole System, find \"GLHEPro GFunction Import\" Click this Measure and fill in the inputs: path to GFunction.IDF, heat pump loop. Click Apply Measure. You should see information about district heating and district cooling objects being removed from the heat pump loop, and information about a GLHX being added. If so, click Accept Changes. On the HVAC tab, inspect the changes. You should see a GSHX in place of the district heating and district cooling objects. Re-run your simulation. If you get lots of warnings/errors about the plant loop temperatures being too cold or too hot, your bore field wasn't sized correctly. Go back into GLHEPro, correct any mistakes, then try again. Also, if you changed your loads significantly, you'll need to re-run the model with district heating and district cooling and repeat the GLHEPro process.","title":"Tutorial glhepro"},{"location":"tutorials/tutorial_glhepro/#setting-up-the-initial-model","text":"Create a model with water-source heat pumps (WSHPs) in each zone you want to condition. WSHPs are Zone HVAC Equipment found on the ThermalZones tab. Create a plant loop with a pump, a district heating plant and a district cooling plant on one branch, and a bypass pipe on a separate branch. This loop will be the heat source/heat sink for the WSHPs. Set up the heating and cooling setpoint for the Heat Pump Loop. The district heating and cooling objects will run to keep the water in the heat pump loop between these bounds. The loads on the district heating and district cooling objects will represent the capacity needed in the GSHX. Put a SetpointManager:Scheduled onto the outlet of the district cooling object. Edit the temperature schedule of that setpoint manager to be the desired max temperature of the GSHX water (95F, for example). Make sure to edit both the default days and the design day schedules. Put a SetpointManager:Scheduled onto the outlet of the district heating object. Edit the temperature schedule of that setpoint manager to be the desired min temperature of the GSHX water (55F, for example). Make sure to edit both the default days and the design day schedules. Put a SetpointManager:Scheduled onto the supply outlet node of the loop. Edit the temperature schedule of that setpoint manager to be the desired max temperature of the GSHX water (95F, for example). You can pick the same schedule used for the district cooling object's setpoint manager. Set the sizing parameters of the Heat Pump Loop The loop type should be \"Condenser.\" The loop design outlet temp should be the desired max of the GSHX water (95F here). The loop design temperature difference should be reasonable for a GSHX (9 delta-F here). Connect the heating and cooling coils for each WSHP to the Heat Pump Loop. Click on the Thermal Zones tab Click on the WSHP Click the chain link icons in the upper right Check the box to select the Heat Pump Loop.","title":"Setting up the initial model"},{"location":"tutorials/tutorial_glhepro/#adding-measure-to-export-loads-for-glhepro","text":"On the Measures tab, click \"Find Measures on BCL\" Search for \"GLHEPro\" Download the following 3 Measures: \"GLHEPro Setup Export Loads for Ground Heat Exchanger Sizing\" \"GLHEPro Export Loads for Ground Heat Exchanger Sizing\" \"GLHEProGFunctionImport\" On the Measures tab, drag 2 of the 3 Measures into the model: \"GLHEPro Setup Export Loads for Ground Heat Exchanger Sizing\" as OS Measure \"GLHEPro Export Loads for Ground Heat Exchanger Sizing\" as Reporting Measure","title":"Adding Measure to export loads for GLHEPro"},{"location":"tutorials/tutorial_glhepro/#run-the-simulation-and-import-loads-into-glhepro","text":"Go to the Run tab > Run > wait for simulation to finish Go to the Results tab and select the report called \"Export Loads to GLHEPro\" in the dropdown This report explains the next steps for importing the loads into GLHEPro. It also shows the hourly load for the district heating and district cooling objects. Important Note: the hourly graph only shows up if you are using OpenStudio 1.4.1 or higher (or if you are using OpenStudio 1.4.0 built with Ruby 2.0). Even if the hourly graph doesn't show up, the loads have still been exported for GLHEPro, you just don't get to visualize them. Find the GLHEPro .gt1 file. In a file browser, navigate to the run directory for your model, for example: C:\\GLHEPro\\gshp_model\\run\\6-UserScript-0\\mergedjob-0 You should see the files below: The *.gt1 files are the monthly loads for GLHEPro import. The *.csv files are the hourly loads (same as seen in graph). The report.html is the same report seen in the OS Application. Open GLHEPro, which can be downloaded (not free) from here: http://www.hvac.okstate.edu/glhepro/ In the top menu, click Loads > Read Heat Pump Loads and select the \"Monthly Loads.gt1\" file. Double-check that these numbers make sense, then click OK.","title":"Run the simulation and import loads into GLHEPro"},{"location":"tutorials/tutorial_glhepro/#run-glhepro-to-size-bore-field","text":"Fill in the GLHEPro inputs. See GLHEPro manual for more information. In the top menu, click Action > Perform Sizing to size the loop. In the top menu, click Action > G Function Creator. Fill out the inputs as desired, then click \"Select G-func Print Format\" and check \"Print EnergyPlus IDF File. Select a place on your computer and save the IDF file.","title":"Run GLHEPro to size bore field"},{"location":"tutorials/tutorial_glhepro/#import-bore-field-sizing-information-and-g-function-into-openstudio","text":"Return to your OpenStudio model. Save a copy in case you want to change loads and re-size GSHX later. In the top menu, click Components & Measures > Apply Measure Now Under HVAC > Whole System, find \"GLHEPro GFunction Import\" Click this Measure and fill in the inputs: path to GFunction.IDF, heat pump loop. Click Apply Measure. You should see information about district heating and district cooling objects being removed from the heat pump loop, and information about a GLHX being added. If so, click Accept Changes. On the HVAC tab, inspect the changes. You should see a GSHX in place of the district heating and district cooling objects. Re-run your simulation. If you get lots of warnings/errors about the plant loop temperatures being too cold or too hot, your bore field wasn't sized correctly. Go back into GLHEPro, correct any mistakes, then try again. Also, if you changed your loads significantly, you'll need to re-run the model with district heating and district cooling and repeat the GLHEPro process.","title":"Import bore field sizing information and G Function into OpenStudio"},{"location":"tutorials/tutorial_ifcimport/","text":"Import IFC This tutorial explains how to import an IFC file into OpenStudio using BIMserver. This functionality is available in OpenStudio 1.7.1 and higher. This functionality was developed by Chong Zhou as part of the BIMDataHub project at the Consortium for Building Energy Innovation . Notice The IFC plugin was built by the BIMDataHub group. The functionality has not been maintained since 2016. Install BIMserver Stand-alone version Most users will want to install a stand-alone version of BIMserver on their local computer. Install the Java JDK. Java 1.8 is not well supported yet, Java JDK 1.7 can be downloaded here , for Windows you will want the file named jdk-7u75-windows-x64.exe. Download BIMserver 1.3.4 from the BIMserver Github site. Assuming this is your first installation, create a new folder in your system, e.g. C:\\BIMserver. Copy the downloaded bimserver-[version].jar file into the above folder. Note: avoid the creating BIMserver subfolder under C:\\Program Files or C:\\Program Files (x86). Double-click on the bimserver-[version].jar file to execute it. Enter the path to your JVM install, e.g. C:\\Program Files\\Java\\jdk1.7.0_75. Press the start button to start the BIMserver. Wait for BIMserver to expand all the files and configure itself and until the phrase \"Server started successfully\" appears. Click the Stop button to stop the BIMserver. Download the latest OSMSerializer and copy the OSMSerializer.jar file into the plugins subfolder under the bimserver-[version] folder. Click the Start button to restart BIMserver. Once the BIMserver has restarted, click Launch Browser. Setup the BIMserver for the first time by clicking the \"the admin page\" in the browser. Enter the Administrator username (e.g. 'Administrator'), email (e.g. 'admin@bimserver.org'), and password (e.g. 'admin') then click Setup. The BIMserver is now correctly setup and running. You can close the browser and continue to use OpenStudio to import IFC file. BIMserver needs to be running during the IFC import, you can stop BIMserver when you are done by pressing the Stop button. Server Version If you want to host BIMserver on a public website you should install the server version. Download the .war version of the BIMserver and host it with TOMCAT on a unix server. Please refer to the BIMserver site on Github for more assistance. Using the Import IFC Utility in OpenStudio Launch the Import IFC Utility. Click File -> Import -> IFC. You will need to specify the BIMserver settings information the first time running the Import IFC Utility in OpenStudio. Please enter the BIMserver Address (e.g. http://127.0.0.1), Port (e.g. 8082), Username (e.g 'admin@bimserver.org'), and Password (e.g. 'admin') for the BIMserver and click Okay. The left part of the Import IFC Utility lists all BIM projects hosted on BIMserver. The right part displays a list of IFC revisions of a project. Create a new Project Create a new project by clicking the New Project Button and specify the name for the project e.g. \"Test\". You will see the newly created project on the left. It contains Project ID on the BIMserver and the Project Name separated by colon. Click the \">\" button to view the current IFC files hosted on BIMserver. It will not display anything for now since we have not yet checked in the IFC file. Check in IFC File After selecting a project and clicked \">\" button, click the Check in IFC File button and select an IFC file to upload to BIMserver. Now you can click the \">\" button again to refresh the IFC revision list. Select the newly added file. It displays the IFC Revision ID and the time when the IFC file is uploaded, separated by colon. Download OSM File Click the Download OSM File button to start importing this IFC file into OpenStudio. It will ask you to save your current OpenStudio model and restart the application with the newly imported model. Change the BIMserver Settings If you want to change the BIMserver Settings, please simply click the Setting button and type in the new settings. It will automatically access the new BIMserver after you click OK. Scope of our current IFC importation Utility We provide an IFC to OSM transformation utility, using BIMserver as a middle-ware. Our goal is to assist energy simulation modelers to import the building geometry from IFC. The current effort requires energy simulation modelers to create the building geometry from scratch. Our current utility can partially automate this process by importing important building elements into OpenStudio from IFC. We will try to fully automate this process in the future. Currently supported IFC elements Spaces will be transformed as OSM Spaces. Straight and non-curved Walls will be transformed into OSM Surface. Outside boundary conditions are preserved for walls. Ceilings and Floors will be transformed into OSM Surface. Outside boundary conditions are not preserved. Doors and Windows will be transformed into OSM SubSurface. The relationship to their corresponding Walls will be preserved. Outside boundary conditions are not preserved. IFC elements under development Sloped Wall and Roofs (Currently, the sloped walls cannot be transformed correctly. We are solving this problem now but follow the steps in 3.3 to modify your model). Outside boundary conditions of ceilings, floors, doors, and windows. Curtain Walls. What to do if you have some elements being transformed incorrectly or not transformed Save the imported OSM model in OpenStudio by clicking File -> Save As in the menu. Use SketchUp with the OpenStudio plug-in to open the new OSM file. Modify the building geometry in SketchUp. For more information, please refer to this tutorial .","title":"Tutorial ifcimport"},{"location":"tutorials/tutorial_ifcimport/#install-bimserver","text":"","title":"Install BIMserver"},{"location":"tutorials/tutorial_ifcimport/#stand-alone-version","text":"Most users will want to install a stand-alone version of BIMserver on their local computer. Install the Java JDK. Java 1.8 is not well supported yet, Java JDK 1.7 can be downloaded here , for Windows you will want the file named jdk-7u75-windows-x64.exe. Download BIMserver 1.3.4 from the BIMserver Github site. Assuming this is your first installation, create a new folder in your system, e.g. C:\\BIMserver. Copy the downloaded bimserver-[version].jar file into the above folder. Note: avoid the creating BIMserver subfolder under C:\\Program Files or C:\\Program Files (x86). Double-click on the bimserver-[version].jar file to execute it. Enter the path to your JVM install, e.g. C:\\Program Files\\Java\\jdk1.7.0_75. Press the start button to start the BIMserver. Wait for BIMserver to expand all the files and configure itself and until the phrase \"Server started successfully\" appears. Click the Stop button to stop the BIMserver. Download the latest OSMSerializer and copy the OSMSerializer.jar file into the plugins subfolder under the bimserver-[version] folder. Click the Start button to restart BIMserver. Once the BIMserver has restarted, click Launch Browser. Setup the BIMserver for the first time by clicking the \"the admin page\" in the browser. Enter the Administrator username (e.g. 'Administrator'), email (e.g. 'admin@bimserver.org'), and password (e.g. 'admin') then click Setup. The BIMserver is now correctly setup and running. You can close the browser and continue to use OpenStudio to import IFC file. BIMserver needs to be running during the IFC import, you can stop BIMserver when you are done by pressing the Stop button.","title":"Stand-alone version"},{"location":"tutorials/tutorial_ifcimport/#server-version","text":"If you want to host BIMserver on a public website you should install the server version. Download the .war version of the BIMserver and host it with TOMCAT on a unix server. Please refer to the BIMserver site on Github for more assistance.","title":"Server Version"},{"location":"tutorials/tutorial_ifcimport/#using-the-import-ifc-utility-in-openstudio","text":"","title":"Using the Import IFC Utility in OpenStudio"},{"location":"tutorials/tutorial_ifcimport/#launch-the-import-ifc-utility","text":"Click File -> Import -> IFC. You will need to specify the BIMserver settings information the first time running the Import IFC Utility in OpenStudio. Please enter the BIMserver Address (e.g. http://127.0.0.1), Port (e.g. 8082), Username (e.g 'admin@bimserver.org'), and Password (e.g. 'admin') for the BIMserver and click Okay. The left part of the Import IFC Utility lists all BIM projects hosted on BIMserver. The right part displays a list of IFC revisions of a project.","title":"Launch the Import IFC Utility."},{"location":"tutorials/tutorial_ifcimport/#create-a-new-project","text":"Create a new project by clicking the New Project Button and specify the name for the project e.g. \"Test\". You will see the newly created project on the left. It contains Project ID on the BIMserver and the Project Name separated by colon. Click the \">\" button to view the current IFC files hosted on BIMserver. It will not display anything for now since we have not yet checked in the IFC file.","title":"Create a new Project"},{"location":"tutorials/tutorial_ifcimport/#check-in-ifc-file","text":"After selecting a project and clicked \">\" button, click the Check in IFC File button and select an IFC file to upload to BIMserver. Now you can click the \">\" button again to refresh the IFC revision list. Select the newly added file. It displays the IFC Revision ID and the time when the IFC file is uploaded, separated by colon.","title":"Check in IFC File"},{"location":"tutorials/tutorial_ifcimport/#download-osm-file","text":"Click the Download OSM File button to start importing this IFC file into OpenStudio. It will ask you to save your current OpenStudio model and restart the application with the newly imported model.","title":"Download OSM File"},{"location":"tutorials/tutorial_ifcimport/#change-the-bimserver-settings","text":"If you want to change the BIMserver Settings, please simply click the Setting button and type in the new settings. It will automatically access the new BIMserver after you click OK.","title":"Change the BIMserver Settings"},{"location":"tutorials/tutorial_ifcimport/#scope-of-our-current-ifc-importation-utility","text":"We provide an IFC to OSM transformation utility, using BIMserver as a middle-ware. Our goal is to assist energy simulation modelers to import the building geometry from IFC. The current effort requires energy simulation modelers to create the building geometry from scratch. Our current utility can partially automate this process by importing important building elements into OpenStudio from IFC. We will try to fully automate this process in the future.","title":"Scope of our current IFC importation Utility"},{"location":"tutorials/tutorial_ifcimport/#currently-supported-ifc-elements","text":"Spaces will be transformed as OSM Spaces. Straight and non-curved Walls will be transformed into OSM Surface. Outside boundary conditions are preserved for walls. Ceilings and Floors will be transformed into OSM Surface. Outside boundary conditions are not preserved. Doors and Windows will be transformed into OSM SubSurface. The relationship to their corresponding Walls will be preserved. Outside boundary conditions are not preserved.","title":"Currently supported IFC elements"},{"location":"tutorials/tutorial_ifcimport/#ifc-elements-under-development","text":"Sloped Wall and Roofs (Currently, the sloped walls cannot be transformed correctly. We are solving this problem now but follow the steps in 3.3 to modify your model). Outside boundary conditions of ceilings, floors, doors, and windows. Curtain Walls.","title":"IFC elements under development"},{"location":"tutorials/tutorial_ifcimport/#what-to-do-if-you-have-some-elements-being-transformed-incorrectly-or-not-transformed","text":"Save the imported OSM model in OpenStudio by clicking File -> Save As in the menu. Use SketchUp with the OpenStudio plug-in to open the new OSM file. Modify the building geometry in SketchUp. For more information, please refer to this tutorial .","title":"What to do if you have some elements being transformed incorrectly or not transformed"},{"location":"tutorials/tutorial_shadingcontrols/","text":"Shading Controls This tutorial explains how to add shading controls to an OpenStudio Model to study the impact of blinds, shades, switchable glazing, or other shading controls. Create Shading Controls Create a model with fenestration. Apply a fenestration construction which represents the unshaded state to your windows. Create either a fenestration construction representing the shaded state or a shading material such as a blind, screen, or shade. If you choose a shading material it will be added to the unshaded construction when the window is in the shaded state. Run the Add Shading Controls user script to create a shading control object. Choose either your shaded construction or shading material, you cannot choose both. Apply Shading Controls Select the windows that you want to apply the shading controls to. This can be done individually or by using the surface search feature. Run the Apply Shading Controls user script to apply a shading control object to the selected windows. Edit Shading Controls Edit details related to the shading control object (e.g. control algorithm) using the OpenStudio Inspector. You can also assign shading control objects to individual surfaces using the OpenStudio Inspector.","title":"Shading Controls"},{"location":"tutorials/tutorial_shadingcontrols/#create-shading-controls","text":"Create a model with fenestration. Apply a fenestration construction which represents the unshaded state to your windows. Create either a fenestration construction representing the shaded state or a shading material such as a blind, screen, or shade. If you choose a shading material it will be added to the unshaded construction when the window is in the shaded state. Run the Add Shading Controls user script to create a shading control object. Choose either your shaded construction or shading material, you cannot choose both.","title":"Create Shading Controls"},{"location":"tutorials/tutorial_shadingcontrols/#apply-shading-controls","text":"Select the windows that you want to apply the shading controls to. This can be done individually or by using the surface search feature. Run the Apply Shading Controls user script to apply a shading control object to the selected windows.","title":"Apply Shading Controls"},{"location":"tutorials/tutorial_shadingcontrols/#edit-shading-controls","text":"Edit details related to the shading control object (e.g. control algorithm) using the OpenStudio Inspector. You can also assign shading control objects to individual surfaces using the OpenStudio Inspector.","title":"Edit Shading Controls"},{"location":"tutorials/tutorial_virtual_pulse/","text":"VirtualPULSE VirtualPULSE is a holistic web based simulation platform for building energy, urban solar radiation & urban airlflow. It uses OpenStudio under the hood to assist in generating models and running simulations. The website offers a full workflow on its own, but you can also take resulting models out as OSM models for further inspection, modeling, and simulation. VirtualPULSE Workflow Video Above: This video made by the Building Science Group and University of Maryland, walks you through the virtualPULSE web based workflow. Bring Models Into OpenStudio. You can start your workflow using the VirtualPULSE workflow, and then bring in models from selected buildings into OpenStudio. At that point they are like any other OpenStudio models. Above: VirtualPULSE model viewed in OpenStudio.","title":"Tutorial virtual pulse"},{"location":"tutorials/tutorial_virtual_pulse/#virtualpulse-workflow-video","text":"Above: This video made by the Building Science Group and University of Maryland, walks you through the virtualPULSE web based workflow.","title":"VirtualPULSE Workflow Video"},{"location":"tutorials/tutorial_virtual_pulse/#bring-models-into-openstudio","text":"You can start your workflow using the VirtualPULSE workflow, and then bring in models from selected buildings into OpenStudio. At that point they are like any other OpenStudio models. Above: VirtualPULSE model viewed in OpenStudio.","title":"Bring Models Into OpenStudio."},{"location":"tutorials/tutorial_windowproperty_frameanddivider/","text":"Window Property Frame and Divider This tutorial explains how to use the OS:WindowProperty:FrameAndDivider object to study the impact of window frame and divider materials as well as the impact of sill and outside reveal surfaces. The OS:WindowProperty:FrameAndDivider object closely follows the EnergyPlus WindowProperty:FrameAndDivider object with only one difference. The OpenStudio object includes one additional field, Outside Reveal Depth, which the EnergyPlus object does not. During translation from OpenStudio Application to EnergyPlus, OS:SubSurface vertices are offset by this amount in order to model the additional shading provided by the outside reveal surface. Create Window Property Frame and Divider Window Property Frame and Divider objects can be created using the object inspector in the OpenStudio SketchUp plug-in. The inspector can also be used to edit any properties of the Window Property Frame and Divider object. Importing Input Data Files (IDF) from the WINDOW program IDFs exported from WINDOW containing Window Property Frame and Divider objects can be imported using the OpenStudio SketchUp plug-in via Extensions>OpenStudio>Import>Import EnergyPlus Idf Constructions. WINDOW exports two IDF files, a _Avg.idf and a _Spec.idf file. Only the _Avg.idf file may be imported as the MaterialProperty:GlazingSpectralData object in the _Spec.idf file is not yet supported by the OpenStudio Application. Apply Window Property Frame and Divider Once you have a Window Property Frame and Divider object in your model, you can apply it to sub surfaces using the object inspector. Only exterior windows and glass doors can reference Window Property Frame and Divider objects. The Window Property Frame and Divider object can also be applied to all valid sub surfaces in the current selection using the OpenStudio User Script \"Set Window Property Frame and Divider\" under \"Alter or Add Model Elements\".","title":"Window Property Frame and Divider"},{"location":"tutorials/tutorial_windowproperty_frameanddivider/#create-window-property-frame-and-divider","text":"Window Property Frame and Divider objects can be created using the object inspector in the OpenStudio SketchUp plug-in. The inspector can also be used to edit any properties of the Window Property Frame and Divider object.","title":"Create Window Property Frame and Divider"},{"location":"tutorials/tutorial_windowproperty_frameanddivider/#importing-input-data-files-idf-from-the-window-program","text":"IDFs exported from WINDOW containing Window Property Frame and Divider objects can be imported using the OpenStudio SketchUp plug-in via Extensions>OpenStudio>Import>Import EnergyPlus Idf Constructions. WINDOW exports two IDF files, a _Avg.idf and a _Spec.idf file. Only the _Avg.idf file may be imported as the MaterialProperty:GlazingSpectralData object in the _Spec.idf file is not yet supported by the OpenStudio Application.","title":"Importing Input Data Files (IDF) from the WINDOW program"},{"location":"tutorials/tutorial_windowproperty_frameanddivider/#apply-window-property-frame-and-divider","text":"Once you have a Window Property Frame and Divider object in your model, you can apply it to sub surfaces using the object inspector. Only exterior windows and glass doors can reference Window Property Frame and Divider objects. The Window Property Frame and Divider object can also be applied to all valid sub surfaces in the current selection using the OpenStudio User Script \"Set Window Property Frame and Divider\" under \"Alter or Add Model Elements\".","title":"Apply Window Property Frame and Divider"},{"location":"tutorials/utility_rate_tariffs/","text":"Adding Utility Rate Tariffs Typically, life cycle cost analyses compare current capital costs required to implement energy conservation measures with future energy cost savings over the analysis period. In order to compute future energy cost savings the model must include information about the utility rate tariffs which apply to the project. Higher energy costs will give energy conservation measures a better pay back relative to their initial costs. Currently the OpenStudio Application doesn't have a built in interface to add utility rates. Utility rates are added by including an EnergyPlus measure in your workflow as an always run measure. If you are participating in a Utility Energy Design Assistance Program then your utility has likely placed a custom measure on the Building Component Library (BCL) with valid utility rate structures. The \"EDA Program Tariffs\" section below covers this use case. The rest of the use cases cover users who want to create their own tariffs vs. using someone else's pre-made tariffs. Most of the measures have an argument for the \"Demand Window Length\". The measures confirm that the demand window length is in sync with EnergyPlus's simulation timestep. Currently the EDA measures have tariffs for electricity and natural gas. The non-EDA measures have tariffs for electricity, natural gas, water, district heating, and district cooling. if you are running an early design simulation using Ideal air loads, your heating and cooling loads will show up ad district heating and cooling. The naming of the non-EDA measures relate to how electricity tariffs are handled. All other fuels are flat tariffs. Demand charges are only included for electricity. EDA Program Tariffs The arguments on an EDA based tariff measure are pretty simple. The two choices are choosing electric and gas tariffs from a pre-populated list. Currently the demand window length is hard coded to correctly match each rate. Refer to the utility's rate information or look in the \"resources\" directory of the measure if you want to see what goes into each tariff option. Above: Screenshot of Xcel Energy EDA Tariff selection measure inputs. Flat Tariffs The flat tariff measure is the most basic non-EDA tariff measures. It has a single argument for each fuel type to define a flat tariff. It doesn't have an electricity demand change. Above: Screenshot of Flat Tariff measure inputs. Block Tariffs The block tariff is similar to the flat tariff, but it allows you to define multiple blocks where the rate increases as you move into another block of consumption. There is one argument that expects comma separated values for the consumption blocks. The next argument expects comma separated values for the corresponding rates for each block described in the first measure. You should have the same number of values in each of the first two arguments. The next field defines a rate when you have exceeded the last block defined in the earlier arguments. After this you have arguments for flat rates for other fuels. Above: Screenshot of Block Tariff measure inputs. Time and Date Dependent Tariffs The time and date dependent tariff has four possible rates for electricity consumption. There are on and off peak summer rates, and on and off non-summer rates. The time of day for peak and the dates for summer are user configurable. For electricity demand charge, only the season is taken into account, not the time of day. The rest of the fuels are flat rates. Above: Screenshot of Time and Date Dependant Tariff measure inputs. Custom Tariff Solutions If none of these tariff examples meet your needs we have created a generic tariff measure. You can save your own IDF snippets into the \"resources\" directory for this measure. Each file should have one UtilityCost:Tariff object, and any associated objects that refer to it such as UtilityCost:Charge:Simple or Schedule:Compact. The Measure will create a user argument for each type of meter referred to by UtilityCost:Tariff objects in the directory. You can then choose one tariff object to be imported for each meter. It has been pre-loaded with a number of examples from the EnergyPlus Input/Output Reference Above: Screenshot of Generic Tariff measure inputs.","title":"Utility Rate Tariffs"},{"location":"tutorials/utility_rate_tariffs/#eda-program-tariffs","text":"The arguments on an EDA based tariff measure are pretty simple. The two choices are choosing electric and gas tariffs from a pre-populated list. Currently the demand window length is hard coded to correctly match each rate. Refer to the utility's rate information or look in the \"resources\" directory of the measure if you want to see what goes into each tariff option. Above: Screenshot of Xcel Energy EDA Tariff selection measure inputs.","title":"EDA Program Tariffs"},{"location":"tutorials/utility_rate_tariffs/#flat-tariffs","text":"The flat tariff measure is the most basic non-EDA tariff measures. It has a single argument for each fuel type to define a flat tariff. It doesn't have an electricity demand change. Above: Screenshot of Flat Tariff measure inputs.","title":"Flat Tariffs"},{"location":"tutorials/utility_rate_tariffs/#block-tariffs","text":"The block tariff is similar to the flat tariff, but it allows you to define multiple blocks where the rate increases as you move into another block of consumption. There is one argument that expects comma separated values for the consumption blocks. The next argument expects comma separated values for the corresponding rates for each block described in the first measure. You should have the same number of values in each of the first two arguments. The next field defines a rate when you have exceeded the last block defined in the earlier arguments. After this you have arguments for flat rates for other fuels. Above: Screenshot of Block Tariff measure inputs.","title":"Block Tariffs"},{"location":"tutorials/utility_rate_tariffs/#time-and-date-dependent-tariffs","text":"The time and date dependent tariff has four possible rates for electricity consumption. There are on and off peak summer rates, and on and off non-summer rates. The time of day for peak and the dates for summer are user configurable. For electricity demand charge, only the season is taken into account, not the time of day. The rest of the fuels are flat rates. Above: Screenshot of Time and Date Dependant Tariff measure inputs.","title":"Time and Date Dependent Tariffs"},{"location":"tutorials/utility_rate_tariffs/#custom-tariff-solutions","text":"If none of these tariff examples meet your needs we have created a generic tariff measure. You can save your own IDF snippets into the \"resources\" directory for this measure. Each file should have one UtilityCost:Tariff object, and any associated objects that refer to it such as UtilityCost:Charge:Simple or Schedule:Compact. The Measure will create a user argument for each type of meter referred to by UtilityCost:Tariff objects in the directory. You can then choose one tariff object to be imported for each meter. It has been pre-loaded with a number of examples from the EnergyPlus Input/Output Reference Above: Screenshot of Generic Tariff measure inputs.","title":"Custom Tariff Solutions"}]}